openapi: 3.0.2
info:
  description: |
    Amazon Pharmacy APIs provide the following functionalities for external partners:

    - Patient creation, update, and view
    - Prescription creation, update, and view
    - Order creation, update, and view
    - Payment instrument creation and update
    - Prescription transfer request creation

    ## Changelog for the Amazon Pharmacy APIs (from version 1.15.3):

    ### 2025-07-14 v1.20.1
    #### Changed:
    - Updated the regex pattern for `patientDetails.name`, `prescriber.prescriberName`, `pharmacist.pharmacistName` field to accept special characters like `-`, `'`, `.` for `firstName`, `middleName`, `lastName` subfields.

    ### 2025-07-07 v1.20.0
    #### Added:
    - `INVALID_DELIVERY_ADDRESS` to `OrderStatusReasonCode`.

    #### Changed:
    - Updated `MedicationPrescribed` structure to make the `daysSupply` field optional in `PutPrescription API`, allowing prescriber partners to omit this field when calling the PutPrescription API

    ### 2025-07-01 v1.19.0
    #### Added:
    - Asynchronous notifications for orders
    - Added documentation in `PutOrder` callback with `EventNotification` schema which signifies notification structure

    #### Notes:
    - Order notifications are available for below order statuses for orders created through `PutOrder` API
      - ORDER_CREATED
      - ORDER_PROCESSING
      - ORDER_ON_HOLD
      - ORDER_SHIPPED
      - ORDER_CANCELLED
      - ORDER_FAILED

    ### 2025-06-19 v1.18.2
    #### Changed:
    - Updated `PatientDetails` structure to make the `sexAssignedAtBirth` field optional in `PutPatient API`, allowing partners to omit this field when calling the PutPatient API; however, this field will continue to be mandatory for hub partners who manage orders on behalf of customers

    ### 2025-06-10 v1.18.1
    #### Changed:
    - Removed mandatory requirement for the deprecated `unitOfMeasureCode` field in `Quantity`.
    - Updated documentation for quantity and refill fields.
    - Added comprehensive examples covering various prescription transfer scenarios.
    - Updated documentation to reflect optional status of `refillsTransferred` field.

    ### 2025-06-03 v1.18.0
    #### Added:
    - Added optional field `Observation` in PutPrescriptionRequest to support vital signs data.
    - Added new structures:
      - `Observation` with measurement list and notes
      - `Measurement` with vital sign, value, unit, and date fields
      - `VitalSign` enum supporting HEIGHT and WEIGHT measurements
    - Updated `PutPrescription` API examples to demonstrate usage of Observation structure with height and weight measurements.

     #### Changed:
     - Updated `PatientDetails` structure to make the `smsConsent` field optional, allowing partners to omit this field when calling the PutPatient API. When not provided, `smsConsent` defaults to `false`.

    ### 2025-03-24 v1.17.0
    #### Added:
    - Asynchronous notifications for prescriptions.
    - Added documentation in `PutPrescription` callback with `EventNotification` schema which signifies notification structure

    #### Changed:
    - `Insurance` now supports `cardholderId`.
    - `Insurance` and `OrderInsurance` field `encryptedCardholderId` is now deprecated. Please use `cardholderId` instead for `PutPatient` and `PutOrder` calls.

    ### 2025-03-26 v1.16.4
    #### Added:
    - Added prescriber-direct prescription example to the `PutPrescription` API documentation.

    #### Changed:
    - Updated `PutPrescription` API examples to include NCI Codes for quantity UnitOfMeasureCode fields.

    ### 2025-03-18 v1.16.3
    #### Changed:
    - Modified the `PrescriptionTransferInDetails` field to be optional in the `PutPrescription` API schema.
    - For pharmacy-to-pharmacy transfers: This structure remains mandatory but is now enforced through server-side validation.
    - For prescriber-originated prescriptions: This structure is not required and should be omitted.
    - Modified `PutOrder` API to include examples for Insurance compliance exceptions and providing useful messaging when `InsuranceComplianceException` is returned.


    ### 2025-01-06 v1.16.2
    #### Added:
    - The changes below are applied to `PutPrescription` API.
    - Added new optional field `refillsRemaining` in `PrescriptionTransferred`. This field will be marked required in a future release.
    - Added a new required field `ndc` in `PreviousDispensedMedication`.
    - Added a new optional field `pharmacyRxNumber` in `PrescriptionTransferred`. This field will be marked as required in a future release.
    - The changes below are applied to `PutOrder` API.
    - Added `InsuranceComplianceException` for when setting OrderInsuranceDetails fails.

    #### Changed:
    - The changes below are applied to `PutPrescription` API.
    - Renamed the `medicationDispensed` structure into `previousDispensedMedications` and updated documentation.
    - Updated deprecation date for `refillsTransferred`, `quantityTransferred`, `quantityRemaining`, `rxcui`, `unitOfMeasureCode`, `formCode` and  `diagnosis`.
    - Fixed documentation issue on enums `QuantityCodeListQualifier`, `ClinicalInformationQualifier`, `QuantityUnitOfMeasureCode`, `DrugDbCodeQualifier`, `StrengthFormCode` and `StrengthUnitOfMeasureCode`

    ### 2025-01-06 v1.16.1
    #### Added:
    - The changes below are applied to `PutPrescription` API.
    - Added new Enum `DrugDbCodeQualifier`, `QuantityCodeListQualifier`, `QuantityUnitOfMeasureCode`, `StrengthFormCode`, `StrengthUnitOfMeasureCode`.
    - Added new optional field `quantityRemaining` in `PrescriptionTransferred`. This field will be marked required in future release.
    - Added new structures `DrugDbCode`, `MedicationDispensed`, `MedicalDiagnosis` and `DiagnosisCode`.
    - Added new optional field `supervisingPhysician` in `PutPrescriptionRequest`.
    - Added new optional fields `labelerName`, `drugDbCode`, `note` and `medicalDiagnosis` in `MedicationPrescribed`.
    - Added new optional field `medicationDispensed` in `PrescriptionTransferInDetails`.
    #### Changed:
    - The changes below are applied to `PutPrescription` API.
    - Deprecated `rxcui`. use `DrugDbCode` structure instead.
    - Deprecated `unitOfMeasureCode` in `Quantity`. Use `quantityUnitOfMeasureCode` enum instead.
    - Deprecated `formCode` and `unitOfMeasureCode` in `Strength`. Use `strengthFormCode` and `strengthUnitOfMeasureCode` enums instead.
    - Deprecated `diagnosis`. Use `medicalDiagnosis` instead.
    - Updated documentation on field mandate for `refillsTransferred` and `quantityTransferred` in `PrescriptionTransferred`.
    - Updated `Pharmacy` sub-fields `ncpdpId`, `pharmacyName`, `pharmacistName`, `pharmacyAddress`, `primaryTelephone` to required to validate `sendingPharmacy` and `receivingPharmacy` in prescriptions.

    ### 2024-12-13 v1.16.0
    #### Changed:
    - Updated `BaseInsurance` field `personCode` to have regex validation `^[0-9]*$`: only numbers allowed. This applies to `PutPatient` and `PutOrder` insurances.
    - Updated `InsuranceList` max size to 27 from 50.

    ### 2024-12-09 v1.15.10
    #### Changed:
    - Updated `ICD10` pattern for existing medical condition and diagnosis for `PutPatient` and `PutPrescription` request model respectively to allow special ICD-10 codes.

    ### 2024-11-04 v1.15.9
    #### Added:
    - New optional fields `payerType`, `payerName`, `stateCode`, `startDate`, `expiryDate` to capture more information about the Insurance plan provided in `PutPatient` API request.
    #### Changed:
    - Updated `PutOrder` API to introduce capability to accept unencrypted primary & secondary insurances with the Order. This will be fully enabled in future releases.

    ### 2024-10-15 v1.15.8
    #### Added:
    - Updated `PutPrescription` API to make `prescriptionTransferInDetails` required structure in the `PutPrescriptionRequest` model.
    - Deprecated `PutPrescriptionRequest.sendingPharmacy`. Use `PrescriptionTransferInDetails.sendingPharmacy` structure instead.

    ### 2024-09-23 v1.15.7
    #### Added:
    - Added OrderStatusReasonCodes `COPAY_DISCREPANCY_DUE_TO_GOVERNMENT_INSURANCE_ON_FILE` and `COPAY_DISCREPANCY_DUE_TO_POTENTIAL_GOVERNMENT_INSURANCE_ON_FILE` to provide more information on copay failure reasons. This enhancement will help partners understand the reasons for order failures, making it easier to troubleshoot and resolve issues.
    - Added new `ClaimRejectionDetails` attribute to `AdditionalOrderDetails` in GetOrder API. This enhancement will help partners understand the reasons for order failures due to claim rejections, making it easier to troubleshoot and resolve issues.
    - Added new `PreconditionErrorCode` (`UNKNOWN_INSURANCE_PLAN_INPUT`) for unknown insurance plans in Amazon Pharmacy to provide more transparent feedback to partners during patient ingestion. This is exclusively for partners who place orders on behalf of customers.

    ### 2024-09-03 v1.15.6
    #### Added:
    - Updated examples for PutPatient to use allergiesDescriptor for allergyDetails, existingMedicalConditionsDescriptor for existingMedicalConditionDetails instead of noKnownAllergies and noKnownExistingMedicalConditions which are deprecated. Added existingMedicationsDescriptor for existingMedicationDetails, in locations where they were missing.
      If you are still using noKnownAllergies and noKnownExistingMedicalConditions please plan to migrate to allergiesDescriptor and existingMedicalConditionsDescriptor.
    - The InvalidInputException structure has been enhanced with two new fields: `errorCode` and `errorFieldList`. These fields will provide additional information about the error, including the specific reason for the failure, the fields that caused the error, and a brief error message for each problematic field.
    - The PreconditionFailedException structure now includes the `errorFieldList` field. This field will contain a list of fields that caused the precondition failure.
    - A new enum called `InvalidInputErrorCode` has been introduced. This enum will encapsulate error codes related to invalid input scenarios, such as "INVALID_BILLING_ADDRESS". This enum will be included in InvalidInputException.
    - `PutPaymentInstrument` API will return InvalidInputException with "INVALID_BILLING_ADDRESS" errorCode when billing address fails validation with Amazon internal API.
    - Updated the API exception handling documentation with detailed descriptions and retry logic for common error status codes. This includes guidance on how to handle errors like `503`, `504`, `429`, and `403` for better integration and error management by external partners.

    ### 2024-08-06 v1.15.5
    #### Added:
    - Updated `PutPrescription` API to include new optional field `prescriptionTransferInDetails` in `PutPrescriptionRequest` model to capture details about the prescription transfer. This includes information if the prescription was previously dispensed or its a new prescription, the dates of the first and last fills, remaining refills and quantities.
    - Included examples in `PutPrescription` API for new prescription and previously dispensed prescriptions.
    - Deprecated `firstFillDate` and `lastFillDate` fields from `MedicationPrescribed`. This will be supported in `prescriptionTransferInDetails` structure instead.
    - Added documentation for enum fields for all APIs.
    - Included examples with expected exception in `PutPatient` API when the patient's insurance is invalid or not contracted with Amazon Pharmacy.

    ### 2024-07-31 v1.15.4
    #### Improved:
    - Updated the `directions` field to allow all strings for greater flexibility.
    - Enhanced `Address Line 1` and `Address Line 2` fields to allow all non-empty strings, providing more flexibility in address formatting.

    ### 2024-07-14 v1.15.3
    #### Added:
    - All APIs will accept `client-request-id` as header parameter. This can be set by Partners and it will be used to identify partner API requests. Please see updated request headers for all APIs.
  title: "Amazon Pharmacy APIs for ingesting Prescriptions, Patients, Orders and Payment\
    \ Instruments"
  version: 1.20.1
servers:
- description: Production Server
  url: https://partner.pharmacy.api.health.amazon/ingestion
- description: Non-Production Server
  url: https://partner-beta.pharmacy.api.health.amazon/ingestion
security:
- mutualTLS: []
- awsSigv4: []
paths:
  /order:
    put:
      callbacks:
        orderEventCallback:
          '{$notificationMechanism}':
            post:
              operationId: OrderEventCallbackPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/EventNotification"
                required: true
              responses:
                "200":
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/PutOrder_502_response"
                  description: Success response
              x-callback-request: true
      description: |
        This API is responsible for placing an order on behalf of the patient (Customer) for the referred prescription.
        This will generate a dispense for the medication and a physical shipment to the request contained in the request.
        The order can be updated under select status conditions (ORDER_CANCELLED/ORDER_FAILED).

        Please look at [notification onboarding document](https://github.com/AmazonHealthServices-External/AmazonPharmacyExternalAPISpecs/tree/main/onboarding/async-notification)
        for onboarding to order event notifications.
      operationId: PutOrder
      parameters:
      - description: This will be provided to your Amazon Pharmacy Account Manager.
          The identifier will be used by Amazon Pharmacy to determine configurations
          for a specific program or integration.
        explode: false
        in: header
        name: client-integration-id
        required: true
        schema:
          type: string
        style: simple
      - description: This can be provided by clients and is used to identify client's
          request. Clients can assign UUID and log it along with their response to
          track a particular API request.
        explode: false
        in: header
        name: client-request-id
        required: true
        schema:
          type: string
        style: simple
      - description: AWS temporary session token will be obtained by connecting to
          AmazonSecurityTokenService
        explode: false
        in: header
        name: x-amz-security-token
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              PutOrder_example1:
                description: ""
                summary: Success scenario
                value:
                  partnerOrderId: test-order-1
                  partnerPrescriptionId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f3
                  partnerPaymentInstrumentId: test-pi-1
                  shippingAddress:
                    addressLine1: 410 Terry Ave N
                    city: Seattle
                    state: WA
                    zipCode: "98109"
                    countryCode: US
                  quotedCopay: "20"
                  orderInsuranceDetails:
                    primary:
                      cardholderId: "12345678"
                      binNumber: "123456"
                      pcn: XDUR
                      groupNumber: PAY
                      personCode: "01"
                      relationshipCode: CARDHOLDER
                    secondary:
                      cardholderId: "12345678"
                      binNumber: "123456"
                      pcn: XDUR
                      groupNumber: PAY
                      personCode: "01"
                      relationshipCode: CARDHOLDER
              PutOrder_example2:
                description: ""
                summary: Government insurance copay restriction error
                value:
                  partnerOrderId: test-insurance-sad-path-3
                  partnerPrescriptionId: test-insurance-sad-path-1
                  shippingAddress:
                    addressLine1: Terry Ave N
                    city: Seattle
                    state: WA
                    zipCode: "98109"
                    countryCode: US
                  quotedCopay: "0"
                  orderInsuranceDetails:
                    primary:
                      cardholderId: "12345678"
                      binNumber: "654321"
                      pcn: INTEG
                      groupNumber: "123"
                      personCode: "01"
                      relationshipCode: CARDHOLDER
              PutOrder_example3:
                description: ""
                summary: Multiple insurance compliance rules failure
                value:
                  partnerOrderId: test-insurance-sad-path-3
                  partnerPrescriptionId: test-insurance-sad-path-1
                  shippingAddress:
                    addressLine1: Terry Ave N
                    city: Seattle
                    state: WA
                    zipCode: "98109"
                    countryCode: US
                  quotedCopay: "0"
                  orderInsuranceDetails:
                    primary:
                      cardholderId: "12345678"
                      binNumber: "654321"
                      pcn: INTEG
                      groupNumber: "123"
                      personCode: "01"
                      relationshipCode: CARDHOLDER
                    secondary:
                      cardholderId: "12345678"
                      binNumber: "123456"
                      pcn: TEST
                      groupNumber: "321"
                      personCode: "01"
                      relationshipCode: CARDHOLDER
            schema:
              $ref: "#/components/schemas/PutOrderRequestContent"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                PutOrder_example1:
                  description: ""
                  summary: Success scenario
                  value:
                    partnerOrderId: test-order-1
              schema:
                $ref: "#/components/schemas/PutOrderResponseContent"
          description: PutOrder 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_400_response"
          description: PreconditionFailedException or InvalidInputException 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundExceptionResponseContent"
          description: ResourceNotFoundException 404 response
        "422":
          content:
            application/json:
              examples:
                PutOrder_example2:
                  description: ""
                  summary: Government insurance copay restriction error
                  value:
                    message: "Insurance compliance exception occurred due to failure\
                      \ of [GOVERNMENT_INSURANCE_COPAY_RESTRICTION] rules"
                    failedRules:
                    - ruleType: GOVERNMENT_INSURANCE_COPAY_RESTRICTION
                      message: Copay cards cannot be combined with government insurance
                        (Medicare/Medicaid). Try using commercial insurance as secondary
                        instead.
                PutOrder_example3:
                  description: ""
                  summary: Multiple insurance compliance rules failure
                  value:
                    message: "Insurance compliance exception occurred due to failure\
                      \ of [GOVERNMENT_INSURANCE_COPAY_RESTRICTION, PAYER_TYPE_RESTRICTION]\
                      \ rules"
                    failedRules:
                    - ruleType: GOVERNMENT_INSURANCE_COPAY_RESTRICTION
                      message: Copay cards cannot be combined with government insurance
                        (Medicare/Medicaid). Try using commercial insurance as secondary
                        instead.
                    - ruleType: PAYER_TYPE_RESTRICTION
                      message: "Invalid insurance combination. Try these valid combinations:\
                        \ 1. Commercial with Commercial 2. Medicare with Commercial\
                        \ (no copay) 3. Medicaid as primary only 4. Discount plans\
                        \ as primary only"
              schema:
                $ref: "#/components/schemas/InsuranceComplianceExceptionResponseContent"
          description: InsuranceComplianceException 422 response
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerExceptionResponseContent"
          description: InternalServerException 500 response
        "502":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Bad Gateway`: This error occurs when the server, acting as a gateway or proxy, received an invalid response from the upstream server.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this could be a temporary issue with the upstream service.
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Temporarily service is unavailable`: This error indicates that the server is currently unable to handle the request due to temporary overloading or maintenance.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this condition is likely to resolve itself.
        "504":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Network error communicating with endpoint`: This error occurs when the server did not receive a timely response from an upstream server or endpoint.
            **Retry Logic**: Yes, the client should retry the request, as this could be a temporary network issue.
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Too many requests`: This error occurs when the number of requests sent by the client exceeds the rate limit or violates the Service Level Agreement (SLA).
            **Retry Logic**: Retry with backoff. The client should wait before retrying, using an exponential backoff strategy to avoid further rate limit violations.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Forbidden`: This error occurs when the client's credentials are rejected or the client does not have permission to access the resource.
            **Retry Logic**: No, the client should not retry the request as it will likely continue to fail without changes to the request or credentials.
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri:
          Fn::Sub: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations"
        credentials:
          Fn::Sub: "${APIGatewayExecutionRole.Arn}"
  /order/{partnerOrderId}:
    get:
      description: |
        This API is responsible to get status information regarding the order.
        The API will return status information about the latest version of the submitted order in case it is submitted multiple times.
      operationId: GetOrder
      parameters:
      - description: A unique Order identifier provided by the partner.
        examples:
          GetOrder_example1:
            description: ""
            summary: Success scenario
            value: test-order-1
          GetOrder_example2:
            description: ""
            summary: Order failure with claim rejection scenario
            value: test-order-1
        explode: false
        in: path
        name: partnerOrderId
        required: true
        schema:
          description: A unique Order identifier provided by the partner.
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
        style: simple
      - description: This will be provided to your Amazon Pharmacy Account Manager.
          The identifier will be used by Amazon Pharmacy to determine configurations
          for a specific program or integration.
        explode: false
        in: header
        name: client-integration-id
        required: true
        schema:
          type: string
        style: simple
      - description: This can be provided by clients and is used to identify client's
          request. Clients can assign UUID and log it along with their response to
          track a particular API request.
        explode: false
        in: header
        name: client-request-id
        required: true
        schema:
          type: string
        style: simple
      - description: AWS temporary session token will be obtained by connecting to
          AmazonSecurityTokenService
        explode: false
        in: header
        name: x-amz-security-token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                GetOrder_example1:
                  description: ""
                  summary: Success scenario
                  value:
                    order:
                      status: ORDER_RECEIVED
                      partnerPrescriptionId: test-rx-1
                      statusDescription: description
                      filledDate: 2024-04-30
                      shipDate: 2024-04-30
                      fillNumber: 1
                      quantityDispensed: 3
                GetOrder_example2:
                  description: ""
                  summary: Order failure with claim rejection scenario
                  value:
                    order:
                      additionalOrderDetails:
                        claimRejectedDetails:
                          claimRejectionReasons:
                          - claimRejectionType: INVALID_INSURANCE_INFORMATION
                            daysSupplyDetails:
                              maximumDaysSupply: 30
                            fieldErrors:
                              demographicErrors: []
                              insuranceErrors:
                              - BIN
                            rejectedInsuranceDetails:
                              binNumber: "123456"
                              pcn: XBADBIN
                            rejectionTypeDescription: Customer insurance information
                              is invalid
                      partnerPrescriptionId: testPartnerPrescriptionId
                      status: ORDER_FAILED
                      statusDescription: "01: M/I Bin Number"
                      statusReasonCode: CLAIM_REJECTED
              schema:
                $ref: "#/components/schemas/GetOrderResponseContent"
          description: GetOrder 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputExceptionResponseContent"
          description: InvalidInputException 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundExceptionResponseContent"
          description: ResourceNotFoundException 404 response
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerExceptionResponseContent"
          description: InternalServerException 500 response
        "502":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Bad Gateway`: This error occurs when the server, acting as a gateway or proxy, received an invalid response from the upstream server.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this could be a temporary issue with the upstream service.
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Temporarily service is unavailable`: This error indicates that the server is currently unable to handle the request due to temporary overloading or maintenance.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this condition is likely to resolve itself.
        "504":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Network error communicating with endpoint`: This error occurs when the server did not receive a timely response from an upstream server or endpoint.
            **Retry Logic**: Yes, the client should retry the request, as this could be a temporary network issue.
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Too many requests`: This error occurs when the number of requests sent by the client exceeds the rate limit or violates the Service Level Agreement (SLA).
            **Retry Logic**: Retry with backoff. The client should wait before retrying, using an exponential backoff strategy to avoid further rate limit violations.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Forbidden`: This error occurs when the client's credentials are rejected or the client does not have permission to access the resource.
            **Retry Logic**: No, the client should not retry the request as it will likely continue to fail without changes to the request or credentials.
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri:
          Fn::Sub: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations"
        credentials:
          Fn::Sub: "${APIGatewayExecutionRole.Arn}"
  /order/{partnerOrderId}/cancel:
    put:
      description: |
        This API is responsible to cancel a patient's order.
        Invoking this API will make an attempt to stop the dispense of medication to a patient.
        Depending on whether or not the order has shipped, cancellation is not always guaranteed.
      operationId: CancelOrder
      parameters:
      - description: A unique Order identifier provided by the partner.
        examples:
          CancelOrder_example1:
            description: ""
            summary: Success scenario
            value: test-order-1
        explode: false
        in: path
        name: partnerOrderId
        required: true
        schema:
          description: A unique Order identifier provided by the partner.
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
        style: simple
      - description: This will be provided to your Amazon Pharmacy Account Manager.
          The identifier will be used by Amazon Pharmacy to determine configurations
          for a specific program or integration.
        explode: false
        in: header
        name: client-integration-id
        required: true
        schema:
          type: string
        style: simple
      - description: This can be provided by clients and is used to identify client's
          request. Clients can assign UUID and log it along with their response to
          track a particular API request.
        explode: false
        in: header
        name: client-request-id
        required: true
        schema:
          type: string
        style: simple
      - description: AWS temporary session token will be obtained by connecting to
          AmazonSecurityTokenService
        explode: false
        in: header
        name: x-amz-security-token
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              CancelOrder_example1:
                description: ""
                summary: Success scenario
                value:
                  cancellationReason: Rx transferred to other pharmacy
            schema:
              $ref: "#/components/schemas/CancelOrderRequestContent"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                CancelOrder_example1:
                  description: ""
                  summary: Success scenario
                  value:
                    partnerOrderId: test-order-1
              schema:
                $ref: "#/components/schemas/CancelOrderResponseContent"
          description: CancelOrder 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputExceptionResponseContent"
          description: InvalidInputException 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundExceptionResponseContent"
          description: ResourceNotFoundException 404 response
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerExceptionResponseContent"
          description: InternalServerException 500 response
        "502":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Bad Gateway`: This error occurs when the server, acting as a gateway or proxy, received an invalid response from the upstream server.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this could be a temporary issue with the upstream service.
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Temporarily service is unavailable`: This error indicates that the server is currently unable to handle the request due to temporary overloading or maintenance.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this condition is likely to resolve itself.
        "504":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Network error communicating with endpoint`: This error occurs when the server did not receive a timely response from an upstream server or endpoint.
            **Retry Logic**: Yes, the client should retry the request, as this could be a temporary network issue.
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Too many requests`: This error occurs when the number of requests sent by the client exceeds the rate limit or violates the Service Level Agreement (SLA).
            **Retry Logic**: Retry with backoff. The client should wait before retrying, using an exponential backoff strategy to avoid further rate limit violations.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Forbidden`: This error occurs when the client's credentials are rejected or the client does not have permission to access the resource.
            **Retry Logic**: No, the client should not retry the request as it will likely continue to fail without changes to the request or credentials.
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri:
          Fn::Sub: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations"
        credentials:
          Fn::Sub: "${APIGatewayExecutionRole.Arn}"
  /patient:
    put:
      description: |
        This API is responsible for setting up a patient profile within the Amazon Pharmacy system.
        This profile is unique to each partner, however multiple profiles can match to the same Amazon customer internally.
        The API request contains information regarding the patient such as insurance and demographic details.
      operationId: PutPatient
      parameters:
      - description: This will be provided to your Amazon Pharmacy Account Manager.
          The identifier will be used by Amazon Pharmacy to determine configurations
          for a specific program or integration.
        explode: false
        in: header
        name: client-integration-id
        required: true
        schema:
          type: string
        style: simple
      - description: This can be provided by clients and is used to identify client's
          request. Clients can assign UUID and log it along with their response to
          track a particular API request.
        explode: false
        in: header
        name: client-request-id
        required: true
        schema:
          type: string
        style: simple
      - description: AWS temporary session token will be obtained by connecting to
          AmazonSecurityTokenService
        explode: false
        in: header
        name: x-amz-security-token
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              PutPatient_example1:
                description: ""
                summary: Partner configured to send patient health data
                value:
                  partnerPatientId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f2
                  patientDetails:
                    email: John.Doe@amazon.com
                    contactInfo:
                    - countryCode: 1
                      phoneNumber: "9048374176"
                      contactSystemType: Mobile
                    smsConsent: true
                    name:
                      firstName: John
                      lastName: Doe
                    dateOfBirth: 1992-05-05
                    allergyDetails:
                      allergiesDescriptor: KNOWN_ALLERGIES_INCLUDED
                      allergies:
                      - code: "4626"
                        codeType: RXNORM
                        textValue: Galactose
                      - code: "1607975"
                        codeType: RXNORM
                        textValue: FERRIC PYROPHOSPHATE CITRATE
                      - code: "126188005"
                        codeType: SNOMEDCT
                        textValue: COSYNTROPIN
                    existingMedicalConditionDetails:
                      existingMedicalConditionsDescriptor: KNOWN_MEDICAL_CONDITIONS_INCLUDED
                      existingMedicalConditions:
                      - code: E66.3
                        codeType: ICD10CM
                      - code: H10.30
                        codeType: ICD10CM
                      - code: N17.0
                        codeType: ICD10CM
                    existingMedicationDetails:
                      existingMedicationsDescriptor: EXISTING_MEDICATIONS_INCLUDED
                      existingMedications:
                      - ndc: "55289086130"
                    pregnancyStatus: NOT_AVAILABLE
                    sexAssignedAtBirth: Male
                  insurances:
                  - partnerInsuranceId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f9
                    encryptedCardholderId: encrypted-id
                    binNumber: "123456"
                    pcn: XDUR
                    personCode: "01"
                    relationshipCode: CARDHOLDER
                    groupNumber: PAY
                    payerType: COMMERCIAL
                    payerName: ABC Insurance
                    stateCode: NY
                    startDate: 2023-01-01
                    expiryDate: 2024-12-31
                  residentialAddress:
                    addressLine1: 410 Terry Ave N
                    city: Seattle
                    state: WA
                    zipCode: "98109"
                    countryCode: US
              PutPatient_example2:
                description: ""
                summary: "Partner configured to send patient health data but patient\
                  \ has no allergies, medications or medical conditions"
                value:
                  partnerPatientId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f2
                  patientDetails:
                    email: John.Doe@amazon.com
                    contactInfo:
                    - countryCode: 1
                      phoneNumber: "9048374176"
                      contactSystemType: Mobile
                    smsConsent: true
                    name:
                      firstName: John
                      lastName: Doe
                    dateOfBirth: 1992-05-05
                    allergyDetails:
                      allergiesDescriptor: PATIENT_HAS_NO_KNOWN_ALLERGIES
                      allergies: []
                    existingMedicalConditionDetails:
                      existingMedicalConditionsDescriptor: PATIENT_HAS_NO_KNOWN_MEDICAL_CONDITIONS
                      existingMedicalConditions: []
                    existingMedicationDetails:
                      existingMedicationsDescriptor: PATIENT_IS_NOT_ON_ANY_MEDICATIONS
                      existingMedications: []
                    pregnancyStatus: NOT_AVAILABLE
                    sexAssignedAtBirth: Male
                  insurances:
                  - partnerInsuranceId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f9
                    encryptedCardholderId: test-id
                    binNumber: "123456"
                    pcn: XDUR
                    groupNumber: PAY
                    personCode: "01"
                    relationshipCode: CARDHOLDER
                  residentialAddress:
                    addressLine1: 410 Terry Ave N
                    city: Seattle
                    state: WA
                    zipCode: "98109"
                    countryCode: US
              PutPatient_example3:
                description: ""
                summary: Partner configured to not send any health data
                value:
                  partnerPatientId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f2
                  patientDetails:
                    email: John.Doe@amazon.com
                    contactInfo:
                    - countryCode: 1
                      phoneNumber: "9048374176"
                      contactSystemType: Mobile
                    smsConsent: true
                    name:
                      firstName: John
                      lastName: Doe
                    dateOfBirth: 1992-05-05
                    allergyDetails:
                      allergiesDescriptor: NOT_AVAILABLE
                    existingMedicalConditionDetails:
                      existingMedicalConditionsDescriptor: NOT_AVAILABLE
                    existingMedicationDetails:
                      existingMedicationsDescriptor: NOT_AVAILABLE
                    pregnancyStatus: NOT_AVAILABLE
                    sexAssignedAtBirth: Male
                  insurances:
                  - partnerInsuranceId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f9
                    encryptedCardholderId: test-id
                    binNumber: "123456"
                    pcn: XDUR
                    groupNumber: PAY
                    personCode: "001"
                    relationshipCode: CARDHOLDER
                  residentialAddress:
                    addressLine1: 410 Terry Ave N
                    city: Seattle
                    state: WA
                    zipCode: "98109"
                    countryCode: US
              PutPatient_example4:
                description: ""
                summary: Partner configured to not send any health data and no insurances
                  provided
                value:
                  partnerPatientId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f2
                  patientDetails:
                    email: John.Doe@amazon.com
                    contactInfo:
                    - countryCode: 1
                      phoneNumber: "9048374176"
                      contactSystemType: Mobile
                    smsConsent: true
                    name:
                      firstName: John
                      lastName: Doe
                    dateOfBirth: 1992-05-05
                    allergyDetails:
                      allergiesDescriptor: NOT_AVAILABLE
                    existingMedicalConditionDetails:
                      existingMedicalConditionsDescriptor: NOT_AVAILABLE
                    existingMedicationDetails:
                      existingMedicationsDescriptor: NOT_AVAILABLE
                    pregnancyStatus: NOT_AVAILABLE
                    sexAssignedAtBirth: Male
                  insurances: []
                  residentialAddress:
                    addressLine1: 410 Terry Ave N
                    city: Seattle
                    state: WA
                    zipCode: "98109"
                    countryCode: US
              PutPatient_example5:
                description: ""
                summary: Partner configured to send patient health data and with non
                  contracted insurance
                value:
                  partnerPatientId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f2
                  patientDetails:
                    email: John.Doe@amazon.com
                    contactInfo:
                    - countryCode: 1
                      phoneNumber: "9048374176"
                      contactSystemType: Mobile
                    smsConsent: true
                    name:
                      firstName: John
                      lastName: Doe
                    dateOfBirth: 1992-05-05
                    allergyDetails:
                      allergiesDescriptor: KNOWN_ALLERGIES_INCLUDED
                      allergies:
                      - code: "4626"
                        codeType: RXNORM
                        textValue: Galactose
                      - code: "1607975"
                        codeType: RXNORM
                        textValue: FERRIC PYROPHOSPHATE CITRATE
                      - code: "126188005"
                        codeType: SNOMEDCT
                        textValue: COSYNTROPIN
                    existingMedicalConditionDetails:
                      existingMedicalConditionsDescriptor: KNOWN_MEDICAL_CONDITIONS_INCLUDED
                      existingMedicalConditions:
                      - code: E66.3
                        codeType: ICD10CM
                      - code: H10.30
                        codeType: ICD10CM
                      - code: N17.0
                        codeType: ICD10CM
                    existingMedicationDetails:
                      existingMedicationsDescriptor: EXISTING_MEDICATIONS_INCLUDED
                      existingMedications:
                      - ndc: "55289086130"
                    pregnancyStatus: NOT_AVAILABLE
                    sexAssignedAtBirth: Male
                  insurances:
                  - partnerInsuranceId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f9
                    encryptedCardholderId: test-id
                    binNumber: "346975"
                    pcn: "55879"
                    groupNumber: GRP1
                    personCode: "01"
                    relationshipCode: CARDHOLDER
                  residentialAddress:
                    addressLine1: 410 Terry Ave N
                    city: Seattle
                    state: WA
                    zipCode: "98109"
                    countryCode: US
              PutPatient_example6:
                description: ""
                summary: Partner configured to send patient health data and with invalid
                  insurance data
                value:
                  partnerPatientId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f2
                  patientDetails:
                    email: John.Doe@amazon.com
                    contactInfo:
                    - countryCode: 1
                      phoneNumber: "9048374176"
                      contactSystemType: Mobile
                    smsConsent: true
                    name:
                      firstName: John
                      lastName: Doe
                    dateOfBirth: 1992-05-05
                    allergyDetails:
                      allergiesDescriptor: KNOWN_ALLERGIES_INCLUDED
                      allergies:
                      - code: "4626"
                        codeType: RXNORM
                        textValue: Galactose
                      - code: "1607975"
                        codeType: RXNORM
                        textValue: FERRIC PYROPHOSPHATE CITRATE
                      - code: "126188005"
                        codeType: SNOMEDCT
                        textValue: COSYNTROPIN
                    existingMedicalConditionDetails:
                      existingMedicalConditionsDescriptor: KNOWN_MEDICAL_CONDITIONS_INCLUDED
                      existingMedicalConditions:
                      - code: E66.3
                        codeType: ICD10CM
                      - code: H10.30
                        codeType: ICD10CM
                      - code: N17.0
                        codeType: ICD10CM
                    existingMedicationDetails:
                      existingMedicationsDescriptor: EXISTING_MEDICATIONS_INCLUDED
                      existingMedications:
                      - ndc: "55289086130"
                    pregnancyStatus: NOT_AVAILABLE
                    sexAssignedAtBirth: Male
                  insurances:
                  - partnerInsuranceId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f9
                    encryptedCardholderId: test-id
                    binNumber: "000000"
                    groupNumber: "00001856"
                    personCode: "01"
                    relationshipCode: CARDHOLDER
                  residentialAddress:
                    addressLine1: 410 Terry Ave N
                    city: Seattle
                    state: WA
                    zipCode: "98109"
                    countryCode: US
              PutPatient_example7:
                description: ""
                summary: Partner configured to send patient health data and with unknown
                  to Amazon Pharmacy insurance data
                value:
                  partnerPatientId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f6
                  patientDetails:
                    email: John.Doe@amazon.com
                    contactInfo:
                    - countryCode: 1
                      phoneNumber: "9048374176"
                      contactSystemType: Mobile
                    smsConsent: true
                    name:
                      firstName: John
                      lastName: Doe
                    dateOfBirth: 1992-05-05
                    allergyDetails:
                      allergiesDescriptor: KNOWN_ALLERGIES_INCLUDED
                      allergies:
                      - code: "4626"
                        codeType: RXNORM
                        textValue: Galactose
                      - code: "1607975"
                        codeType: RXNORM
                        textValue: FERRIC PYROPHOSPHATE CITRATE
                      - code: "126188005"
                        codeType: SNOMEDCT
                        textValue: COSYNTROPIN
                    existingMedicalConditionDetails:
                      existingMedicalConditionsDescriptor: KNOWN_MEDICAL_CONDITIONS_INCLUDED
                      existingMedicalConditions:
                      - code: E66.3
                        codeType: ICD10CM
                      - code: H10.30
                        codeType: ICD10CM
                      - code: N17.0
                        codeType: ICD10CM
                    existingMedicationDetails:
                      existingMedicationsDescriptor: EXISTING_MEDICATIONS_INCLUDED
                      existingMedications:
                      - ndc: "55289086130"
                    pregnancyStatus: NOT_AVAILABLE
                    sexAssignedAtBirth: Male
                  insurances:
                  - partnerInsuranceId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f9
                    encryptedCardholderId: test-id
                    binNumber: "000001"
                    groupNumber: "00001856"
                    personCode: "01"
                    relationshipCode: CARDHOLDER
                  residentialAddress:
                    addressLine1: 410 Terry Ave N
                    city: Seattle
                    state: WA
                    zipCode: "98109"
                    countryCode: US
            schema:
              $ref: "#/components/schemas/PutPatientRequestContent"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                PutPatient_example1:
                  description: ""
                  summary: Partner configured to send patient health data
                  value:
                    partnerPatientId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f2
                PutPatient_example2:
                  description: ""
                  summary: "Partner configured to send patient health data but patient\
                    \ has no allergies, medications or medical conditions"
                  value:
                    partnerPatientId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f2
                PutPatient_example3:
                  description: ""
                  summary: Partner configured to not send any health data
                  value:
                    partnerPatientId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f2
                PutPatient_example4:
                  description: ""
                  summary: Partner configured to not send any health data and no insurances
                    provided
                  value:
                    partnerPatientId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f2
              schema:
                $ref: "#/components/schemas/PutPatientResponseContent"
          description: PutPatient 200 response
        "400":
          content:
            application/json:
              examples:
                PutPatient_example5:
                  description: ""
                  summary: Partner configured to send patient health data and with
                    non contracted insurance
                  value:
                    errorCode: NON_CONTRACTED_INSURANCE_PLAN
                    message: "Non-Contracted or inactive plan for rx_bin: [346975]\
                      \ pcn: [55879] group_number: [GRP1]."
                PutPatient_example6:
                  description: ""
                  summary: Partner configured to send patient health data and with
                    invalid insurance data
                  value:
                    errorCode: INVALID_INSURANCE_PLAN_INPUT
                    message: "Invalid input. Please check the rx_bin: [000000] pcn:\
                      \ [null] group_number: [00001856]."
                PutPatient_example7:
                  description: ""
                  summary: Partner configured to send patient health data and with
                    unknown to Amazon Pharmacy insurance data
                  value:
                    errorCode: UNKNOWN_INSURANCE_PLAN_INPUT
                    message: "The insurance plan with the rx_bin: [000001] pcn: [null]\
                      \ group_number: [00001856] is unknown to Amazon Pharmacy, we\
                      \ cannot accept it at the moment."
              schema:
                $ref: "#/components/schemas/PreconditionFailedExceptionResponseContent"
          description: PreconditionFailedException 400 response
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerExceptionResponseContent"
          description: InternalServerException 500 response
        "502":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Bad Gateway`: This error occurs when the server, acting as a gateway or proxy, received an invalid response from the upstream server.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this could be a temporary issue with the upstream service.
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Temporarily service is unavailable`: This error indicates that the server is currently unable to handle the request due to temporary overloading or maintenance.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this condition is likely to resolve itself.
        "504":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Network error communicating with endpoint`: This error occurs when the server did not receive a timely response from an upstream server or endpoint.
            **Retry Logic**: Yes, the client should retry the request, as this could be a temporary network issue.
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Too many requests`: This error occurs when the number of requests sent by the client exceeds the rate limit or violates the Service Level Agreement (SLA).
            **Retry Logic**: Retry with backoff. The client should wait before retrying, using an exponential backoff strategy to avoid further rate limit violations.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Forbidden`: This error occurs when the client's credentials are rejected or the client does not have permission to access the resource.
            **Retry Logic**: No, the client should not retry the request as it will likely continue to fail without changes to the request or credentials.
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri:
          Fn::Sub: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations"
        credentials:
          Fn::Sub: "${APIGatewayExecutionRole.Arn}"
  /patient/{partnerPatientId}:
    get:
      description: This API is responsible for getting patient details.
      operationId: GetPatient
      parameters:
      - description: A unique Patient identifier provided by the partner.
        examples:
          GetPatient_example1:
            description: ""
            summary: Success scenario
            value: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f2
        explode: false
        in: path
        name: partnerPatientId
        required: true
        schema:
          description: A unique Patient identifier provided by the partner.
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
        style: simple
      - description: This will be provided to your Amazon Pharmacy Account Manager.
          The identifier will be used by Amazon Pharmacy to determine configurations
          for a specific program or integration.
        explode: false
        in: header
        name: client-integration-id
        required: true
        schema:
          type: string
        style: simple
      - description: This can be provided by clients and is used to identify client's
          request. Clients can assign UUID and log it along with their response to
          track a particular API request.
        explode: false
        in: header
        name: client-request-id
        required: true
        schema:
          type: string
        style: simple
      - description: AWS temporary session token will be obtained by connecting to
          AmazonSecurityTokenService
        explode: false
        in: header
        name: x-amz-security-token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                GetPatient_example1:
                  description: ""
                  summary: Success scenario
                  value:
                    patient:
                      status: PATIENT_SUCCESS
                      name:
                        firstName: John
                        lastName: Doe
                      dateOfBirth: 1992-05-05
                      sexAssignedAtBirth: Male
                      contactInfo:
                      - countryCode: 1
                        phoneNumber: "9048374176"
                        contactSystemType: Mobile
                      residentialAddress:
                        addressLine1: 410 Terry Ave N
                        city: Seattle
                        state: WA
                        zipCode: "98109"
                        countryCode: US
                      email: John.Doe@amazon.com
              schema:
                $ref: "#/components/schemas/GetPatientResponseContent"
          description: GetPatient 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputExceptionResponseContent"
          description: InvalidInputException 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundExceptionResponseContent"
          description: ResourceNotFoundException 404 response
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerExceptionResponseContent"
          description: InternalServerException 500 response
        "502":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Bad Gateway`: This error occurs when the server, acting as a gateway or proxy, received an invalid response from the upstream server.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this could be a temporary issue with the upstream service.
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Temporarily service is unavailable`: This error indicates that the server is currently unable to handle the request due to temporary overloading or maintenance.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this condition is likely to resolve itself.
        "504":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Network error communicating with endpoint`: This error occurs when the server did not receive a timely response from an upstream server or endpoint.
            **Retry Logic**: Yes, the client should retry the request, as this could be a temporary network issue.
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Too many requests`: This error occurs when the number of requests sent by the client exceeds the rate limit or violates the Service Level Agreement (SLA).
            **Retry Logic**: Retry with backoff. The client should wait before retrying, using an exponential backoff strategy to avoid further rate limit violations.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Forbidden`: This error occurs when the client's credentials are rejected or the client does not have permission to access the resource.
            **Retry Logic**: No, the client should not retry the request as it will likely continue to fail without changes to the request or credentials.
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri:
          Fn::Sub: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations"
        credentials:
          Fn::Sub: "${APIGatewayExecutionRole.Arn}"
  /payment-instrument:
    post:
      description: |
        This API is responsible for ingesting a single payment instrument that belongs to a patient.
        This payment method will be used for processing orders in cases where a co-pay amount is due from the patient.
        The payment-instrument ID must be included as part of the Put Order request when the quoted copay amount is greater than zero.
      operationId: PutPaymentInstrument
      parameters:
      - description: This will be provided to your Amazon Pharmacy Account Manager.
          The identifier will be used by Amazon Pharmacy to determine configurations
          for a specific program or integration.
        explode: false
        in: header
        name: client-integration-id
        required: true
        schema:
          type: string
        style: simple
      - description: This can be provided by clients and is used to identify client's
          request. Clients can assign UUID and log it along with their response to
          track a particular API request.
        explode: false
        in: header
        name: client-request-id
        required: true
        schema:
          type: string
        style: simple
      - description: AWS temporary session token will be obtained by connecting to
          AmazonSecurityTokenService
        explode: false
        in: header
        name: x-amz-security-token
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              PutPaymentInstrument_example1:
                description: ""
                summary: Success scenario
                value:
                  partnerPatientId: test-patient-1
                  partnerPaymentInstrumentId: test-pi-1
                  paymentMethod: CARD
                  cardDetails:
                    encryptedCardNumber: CardHolderId
                    cardHolderName: patient-1
                    expirationMonth: 1
                    expirationYear: 2025
                  billingAddress:
                    addressLine1: 410 Terry Ave N
                    city: Seattle
                    state: WA
                    zipCode: "98109"
                    countryCode: US
              PutPaymentInstrument_example2:
                description: ""
                summary: Invalid billing Address scenario
                value:
                  partnerPatientId: test-patient-1
                  partnerPaymentInstrumentId: test-pi-1
                  paymentMethod: CARD
                  cardDetails:
                    encryptedCardNumber: CardHolderId
                    cardHolderName: patient-1
                    expirationMonth: 1
                    expirationYear: 2025
                  billingAddress:
                    addressLine1: 410 Terry Ave N
                    city: Seattle
                    state: YC
                    zipCode: "98109"
                    countryCode: US
            schema:
              $ref: "#/components/schemas/PutPaymentInstrumentRequestContent"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                PutPaymentInstrument_example1:
                  description: ""
                  summary: Success scenario
                  value:
                    partnerPaymentInstrumentId: test-pi-1
              schema:
                $ref: "#/components/schemas/PutPaymentInstrumentResponseContent"
          description: PutPaymentInstrument 200 response
        "400":
          content:
            application/json:
              examples:
                PutPaymentInstrument_example2:
                  description: ""
                  summary: Invalid billing Address scenario
                  value:
                    errorCode: INVALID_BILLING_ADDRESS
                    message: Billing Address validation failed
                    errorFieldList:
                    - field: state
                      message: State is incorrect
              schema:
                $ref: "#/components/schemas/InvalidInputExceptionResponseContent"
          description: InvalidInputException 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundExceptionResponseContent"
          description: ResourceNotFoundException 404 response
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerExceptionResponseContent"
          description: InternalServerException 500 response
        "502":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Bad Gateway`: This error occurs when the server, acting as a gateway or proxy, received an invalid response from the upstream server.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this could be a temporary issue with the upstream service.
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Temporarily service is unavailable`: This error indicates that the server is currently unable to handle the request due to temporary overloading or maintenance.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this condition is likely to resolve itself.
        "504":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Network error communicating with endpoint`: This error occurs when the server did not receive a timely response from an upstream server or endpoint.
            **Retry Logic**: Yes, the client should retry the request, as this could be a temporary network issue.
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Too many requests`: This error occurs when the number of requests sent by the client exceeds the rate limit or violates the Service Level Agreement (SLA).
            **Retry Logic**: Retry with backoff. The client should wait before retrying, using an exponential backoff strategy to avoid further rate limit violations.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Forbidden`: This error occurs when the client's credentials are rejected or the client does not have permission to access the resource.
            **Retry Logic**: No, the client should not retry the request as it will likely continue to fail without changes to the request or credentials.
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri:
          Fn::Sub: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations"
        credentials:
          Fn::Sub: "${APIGatewayExecutionRole.Arn}"
  /ping:
    get:
      description: This API provides an endpoint to ping. It does nothing except return
        200.
      operationId: GetPing
      parameters:
      - description: This will be provided to your Amazon Pharmacy Account Manager.
          The identifier will be used by Amazon Pharmacy to determine configurations
          for a specific program or integration.
        explode: false
        in: header
        name: client-integration-id
        required: true
        schema:
          type: string
        style: simple
      - description: This can be provided by clients and is used to identify client's
          request. Clients can assign UUID and log it along with their response to
          track a particular API request.
        explode: false
        in: header
        name: client-request-id
        required: true
        schema:
          type: string
        style: simple
      - description: AWS temporary session token will be obtained by connecting to
          AmazonSecurityTokenService
        explode: false
        in: header
        name: x-amz-security-token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: GetPing 200 response
        "502":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Bad Gateway`: This error occurs when the server, acting as a gateway or proxy, received an invalid response from the upstream server.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this could be a temporary issue with the upstream service.
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Temporarily service is unavailable`: This error indicates that the server is currently unable to handle the request due to temporary overloading or maintenance.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this condition is likely to resolve itself.
        "504":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Network error communicating with endpoint`: This error occurs when the server did not receive a timely response from an upstream server or endpoint.
            **Retry Logic**: Yes, the client should retry the request, as this could be a temporary network issue.
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Too many requests`: This error occurs when the number of requests sent by the client exceeds the rate limit or violates the Service Level Agreement (SLA).
            **Retry Logic**: Retry with backoff. The client should wait before retrying, using an exponential backoff strategy to avoid further rate limit violations.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Forbidden`: This error occurs when the client's credentials are rejected or the client does not have permission to access the resource.
            **Retry Logic**: No, the client should not retry the request as it will likely continue to fail without changes to the request or credentials.
      x-amazon-apigateway-integration:
        requestTemplates:
          application/json: "{ \"statusCode\": 200 }"
        responses:
          "2\\d{2}":
            statusCode: "200"
        type: mock
    post:
      description: This API provides an endpoint to ping. It does nothing except return
        200.
      operationId: PostPing
      parameters:
      - description: This will be provided to your Amazon Pharmacy Account Manager.
          The identifier will be used by Amazon Pharmacy to determine configurations
          for a specific program or integration.
        explode: false
        in: header
        name: client-integration-id
        required: true
        schema:
          type: string
        style: simple
      - description: This can be provided by clients and is used to identify client's
          request. Clients can assign UUID and log it along with their response to
          track a particular API request.
        explode: false
        in: header
        name: client-request-id
        required: true
        schema:
          type: string
        style: simple
      - description: AWS temporary session token will be obtained by connecting to
          AmazonSecurityTokenService
        explode: false
        in: header
        name: x-amz-security-token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: PostPing 200 response
        "502":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Bad Gateway`: This error occurs when the server, acting as a gateway or proxy, received an invalid response from the upstream server.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this could be a temporary issue with the upstream service.
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Temporarily service is unavailable`: This error indicates that the server is currently unable to handle the request due to temporary overloading or maintenance.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this condition is likely to resolve itself.
        "504":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Network error communicating with endpoint`: This error occurs when the server did not receive a timely response from an upstream server or endpoint.
            **Retry Logic**: Yes, the client should retry the request, as this could be a temporary network issue.
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Too many requests`: This error occurs when the number of requests sent by the client exceeds the rate limit or violates the Service Level Agreement (SLA).
            **Retry Logic**: Retry with backoff. The client should wait before retrying, using an exponential backoff strategy to avoid further rate limit violations.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Forbidden`: This error occurs when the client's credentials are rejected or the client does not have permission to access the resource.
            **Retry Logic**: No, the client should not retry the request as it will likely continue to fail without changes to the request or credentials.
      x-amazon-apigateway-integration:
        requestTemplates:
          application/json: "{ \"statusCode\": 200 }"
        responses:
          "2\\d{2}":
            statusCode: "200"
        type: mock
    put:
      description: This API provides an endpoint to ping. It does nothing except return
        200.
      operationId: PutPing
      parameters:
      - description: This will be provided to your Amazon Pharmacy Account Manager.
          The identifier will be used by Amazon Pharmacy to determine configurations
          for a specific program or integration.
        explode: false
        in: header
        name: client-integration-id
        required: true
        schema:
          type: string
        style: simple
      - description: This can be provided by clients and is used to identify client's
          request. Clients can assign UUID and log it along with their response to
          track a particular API request.
        explode: false
        in: header
        name: client-request-id
        required: true
        schema:
          type: string
        style: simple
      - description: AWS temporary session token will be obtained by connecting to
          AmazonSecurityTokenService
        explode: false
        in: header
        name: x-amz-security-token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: PutPing 200 response
        "502":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Bad Gateway`: This error occurs when the server, acting as a gateway or proxy, received an invalid response from the upstream server.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this could be a temporary issue with the upstream service.
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Temporarily service is unavailable`: This error indicates that the server is currently unable to handle the request due to temporary overloading or maintenance.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this condition is likely to resolve itself.
        "504":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Network error communicating with endpoint`: This error occurs when the server did not receive a timely response from an upstream server or endpoint.
            **Retry Logic**: Yes, the client should retry the request, as this could be a temporary network issue.
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Too many requests`: This error occurs when the number of requests sent by the client exceeds the rate limit or violates the Service Level Agreement (SLA).
            **Retry Logic**: Retry with backoff. The client should wait before retrying, using an exponential backoff strategy to avoid further rate limit violations.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Forbidden`: This error occurs when the client's credentials are rejected or the client does not have permission to access the resource.
            **Retry Logic**: No, the client should not retry the request as it will likely continue to fail without changes to the request or credentials.
      x-amazon-apigateway-integration:
        requestTemplates:
          application/json: "{ \"statusCode\": 200 }"
        responses:
          "2\\d{2}":
            statusCode: "200"
        type: mock
  /prescription:
    put:
      callbacks:
        prescriptionEventCallback:
          '{$notificationMechanism}':
            post:
              operationId: PrescriptionEventCallbackPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/EventNotification"
                required: true
              responses:
                "200":
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/PutOrder_502_response"
                  description: Success response
              x-callback-request: true
      description: |
        Prescriptions are required to dispense medications to patients.
        This API is responsible for sending the patient's prescription to Amazon Pharmacy.
        If the patient does not exist, this request will be rejected.
        If the patient exists but in a failed state, the prescription will be ingested but set to failed as well, requiring a new version to be sent.
        For a successful request, the prescription will flow through into the patient's (Amazon customer's) dashboard.
        The prescription can be updated under select status conditions (PRESCRIPTION_FAILED).

        Please look at [notification onboarding document](https://github.com/AmazonHealthServices-External/AmazonPharmacyExternalAPISpecs/tree/main/onboarding/async-notification)
        for onboarding to prescription event notifications.
      operationId: PutPrescription
      parameters:
      - description: This will be provided to your Amazon Pharmacy Account Manager.
          The identifier will be used by Amazon Pharmacy to determine configurations
          for a specific program or integration.
        explode: false
        in: header
        name: client-integration-id
        required: true
        schema:
          type: string
        style: simple
      - description: This can be provided by clients and is used to identify client's
          request. Clients can assign UUID and log it along with their response to
          track a particular API request.
        explode: false
        in: header
        name: client-request-id
        required: true
        schema:
          type: string
        style: simple
      - description: AWS temporary session token will be obtained by connecting to
          AmazonSecurityTokenService
        explode: false
        in: header
        name: x-amz-security-token
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              PutPrescription_example1:
                description: ""
                summary: Example request for pharmacy-to-pharmacy New Prescription
                  transfers
                value:
                  partnerPrescriptionId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f3
                  partnerPatientId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f2
                  prescriber:
                    primaryTelephone: "9194713351"
                    npi: "1639384175"
                    deaNumber: BK2277780
                    prescriberName:
                      firstName: John
                      lastName: Kihm
                    prescriberAddress:
                      addressLine1: 3811 N Roxboro St
                      city: Durham
                      state: NC
                      zipCode: "27704"
                      countryCode: US
                    stateLicenseNumber: "55555555"
                    businessName: Joe and Janes
                    fax: "9194713351"
                  supervisingPhysician:
                    primaryTelephone: "9194713351"
                    npi: "1639384175"
                    deaNumber: BK2277780
                    prescriberName:
                      firstName: John
                      lastName: Kihm
                    prescriberAddress:
                      addressLine1: 3811 N Roxboro St
                      city: Durham
                      state: NC
                      zipCode: "27704"
                      countryCode: US
                    stateLicenseNumber: "55555555"
                    businessName: Joe and Janes
                    fax: "9194713351"
                  medicationPrescribed:
                    drugDescription: "INSULET CORP OMNIPOD 5 G6 INTRO KIT (GEN 5)\
                      \ (Box, 1.0 Each)"
                    quantity:
                      value: 1
                      quantityUnitOfMeasureCode: C120216
                      codeListQualifier: "38"
                    strength:
                      value: "200.0"
                      strengthFormCode: C29012
                      strengthUnitOfMeasureCode: C25301
                    daysSupply: 30
                    writtenDate: 2023-11-20
                    numberOfRefills: 0
                    directions: CHANGE POD EVERY 3 DAYS
                    ndc: "08508300001"
                    dispenseAsWritten: "1"
                    effectiveDate: 2023-11-23
                    medicalDiagnosis:
                      clinicalInformationQualifier: "1"
                      primary:
                        icd10Code: G47.33
                        description: Obstructive sleep apnea
                      secondary:
                        icd10Code: Z68.27
                        description: N/A
                  prescriptionTransferInDetails:
                    sendingPharmacy:
                      ncpdpId: "5729871"
                      npi: "1295193324"
                      pharmacyName: PartnerPharmacy
                      deaNumber: "0987"
                      pharmacistName:
                        firstName: Partner
                        lastName: Pharmacist
                      pharmacyAddress:
                        addressLine1: 1 Terry Ave
                        city: Seattle
                        state: WA
                        zipCode: "32694"
                        countryCode: US
                      primaryTelephone: "9048374076"
                      fax: "9048374076"
                    prescriptionTransferred:
                      prescriptionFillTransferInType: NEW_RX
                      refillsTransferred: 1
                      refillsRemaining: 1
                      quantityTransferred:
                        value: 1
                        quantityUnitOfMeasureCode: C120216
                        codeListQualifier: QT
                      quantityRemaining:
                        value: 1
                        quantityUnitOfMeasureCode: C120216
                        codeListQualifier: "40"
                      pharmacyRxNumber: "123456"
                  receivingPharmacy:
                    ncpdpId: "0362309"
                    npi: "1912499500"
                    pharmacyName: AZ Pharmacy LLC
                    pharmacistName:
                      firstName: Chris
                      lastName: Rochon
                    pharmacyAddress:
                      addressLine1: 3809 E Watkins St
                      city: Phoenix
                      state: AZ
                      zipCode: 85034-7264
                      countryCode: US
                    primaryTelephone: "8557455725"
                    fax: "8557455725"
                  observation:
                    measurement:
                    - vitalSign: HEIGHT
                      value: "180"
                      measurementUnitOfMeasure: cm
                      observationDate: 2023-11-11
                    - vitalSign: WEIGHT
                      value: "75"
                      measurementUnitOfMeasure: kg
                      observationDate: 2023-11-11
                    observationNotes: Patient's BMI is within normal range.
              PutPrescription_example2:
                description: ""
                summary: Example Request for pharmacy-to-pharmacy previously dispensed
                  Prescription transfers
                value:
                  partnerPrescriptionId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f3
                  partnerPatientId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f2
                  prescriber:
                    primaryTelephone: "9194713351"
                    npi: "1639384175"
                    deaNumber: BK2277780
                    prescriberName:
                      firstName: John
                      lastName: Kihm
                    prescriberAddress:
                      addressLine1: 3811 N Roxboro St
                      city: Durham
                      state: NC
                      zipCode: "27704"
                      countryCode: US
                    stateLicenseNumber: "55555555"
                    businessName: Joe and Janes
                    fax: "9194713351"
                  supervisingPhysician:
                    primaryTelephone: "9194713351"
                    npi: "1639384175"
                    deaNumber: BK2277780
                    prescriberName:
                      firstName: John
                      lastName: Kihm
                    prescriberAddress:
                      addressLine1: 3811 N Roxboro St
                      city: Durham
                      state: NC
                      zipCode: "27704"
                      countryCode: US
                    stateLicenseNumber: "55555555"
                    businessName: Joe and Janes
                    fax: "9194713351"
                  medicationPrescribed:
                    drugDescription: "INSULET CORP OMNIPOD 5 G6 INTRO KIT (GEN 5)\
                      \ (Box, 1.0 Each)"
                    quantity:
                      value: 1
                      quantityUnitOfMeasureCode: C120216
                      codeListQualifier: "38"
                    strength:
                      value: "1.0"
                      strengthFormCode: C29012
                      strengthUnitOfMeasureCode: C25301
                    daysSupply: 30
                    writtenDate: 2024-11-20
                    numberOfRefills: 1
                    directions: CHANGE POD EVERY 3 DAYS
                    ndc: "08508300001"
                    dispenseAsWritten: "1"
                    effectiveDate: 2024-11-23
                    medicalDiagnosis:
                      clinicalInformationQualifier: "1"
                      primary:
                        icd10Code: G47.33
                        description: Obstructive sleep apnea
                      secondary:
                        icd10Code: Z68.27
                        description: N/A
                  prescriptionTransferInDetails:
                    sendingPharmacy:
                      ncpdpId: "5729871"
                      npi: "1295193324"
                      pharmacyName: PartnerPharmacy
                      deaNumber: "0987"
                      pharmacistName:
                        firstName: Partner
                        lastName: Pharmacist
                      pharmacyAddress:
                        addressLine1: 1 Terry Ave
                        city: Seattle
                        state: WA
                        zipCode: "32694"
                        countryCode: US
                      primaryTelephone: "9048374076"
                      fax: "9048374076"
                    prescriptionTransferred:
                      prescriptionFillTransferInType: DISPENSED_BEFORE
                      firstFillDate: 2024-11-23
                      lastFillDate: 2024-11-23
                      refillsTransferred: 1
                      refillsRemaining: 1
                      quantityTransferred:
                        value: 1
                        quantityUnitOfMeasureCode: C120216
                        codeListQualifier: QT
                      quantityRemaining:
                        value: 1
                        quantityUnitOfMeasureCode: C120216
                        codeListQualifier: "40"
                      previousDispensedMedications:
                      - drugDescription: "INSULET CORP OMNIPOD 5 G6 INTRO KIT (GEN\
                          \ 5) (Box, 1.0 Each)"
                        quantity:
                          value: 1
                          quantityUnitOfMeasureCode: C120216
                          codeListQualifier: "38"
                        daysSupply: 30
                        directions: CHANGE POD EVERY 3 DAYS
                        ndc: "08508300001"
                        dispenseAsWritten: "1"
                        lastFillDate: 2024-11-23
                      pharmacyRxNumber: "123456"
                  receivingPharmacy:
                    ncpdpId: "0362309"
                    npi: "1912499500"
                    pharmacyName: AZ Pharmacy LLC
                    pharmacistName:
                      firstName: Chris
                      lastName: Rochon
                    pharmacyAddress:
                      addressLine1: 3809 E Watkins St
                      city: Phoenix
                      state: AZ
                      zipCode: 85034-7264
                      countryCode: US
                    primaryTelephone: "8557455725"
                    fax: "8557455725"
                  observation:
                    measurement:
                    - vitalSign: HEIGHT
                      value: "180"
                      measurementUnitOfMeasure: cm
                      observationDate: 2023-11-11
                    - vitalSign: WEIGHT
                      value: "75"
                      measurementUnitOfMeasure: kg
                      observationDate: 2023-11-11
                    observationNotes: Patient's BMI is within normal range.
              PutPrescription_example3:
                description: ""
                summary: Example Prescription Request for prescriber-direct prescriptions
                value:
                  partnerPrescriptionId: 5b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f3
                  partnerPatientId: 041594cb-8c62-44d6-b2c9-649601d7e798
                  prescriber:
                    primaryTelephone: "9194713351"
                    npi: "1639384175"
                    deaNumber: BK2277780
                    prescriberName:
                      firstName: John
                      lastName: Kihm
                    prescriberAddress:
                      addressLine1: 3811 N Roxboro St
                      city: Durham
                      state: NC
                      zipCode: "27704"
                      countryCode: US
                    stateLicenseNumber: "55555555"
                    businessName: Joe and Janes
                    fax: "9194713351"
                  supervisingPhysician:
                    primaryTelephone: "9194713351"
                    npi: "1639384175"
                    deaNumber: BK2277780
                    prescriberName:
                      firstName: John
                      lastName: Kihm
                    prescriberAddress:
                      addressLine1: 3811 N Roxboro St
                      city: Durham
                      state: NC
                      zipCode: "27704"
                      countryCode: US
                    stateLicenseNumber: "55555555"
                    businessName: Joe and Janes
                    fax: "9194713351"
                  medicationPrescribed:
                    drugDescription: "INSULET CORP OMNIPOD 5 G6 INTRO KIT (GEN 5)\
                      \ (Box, 1.0 Each)"
                    quantity:
                      value: 3
                      quantityUnitOfMeasureCode: C120216
                      codeListQualifier: "38"
                    strength:
                      value: "200.0"
                      strengthFormCode: C29012
                      strengthUnitOfMeasureCode: C25301
                    daysSupply: 30
                    writtenDate: 2023-11-20
                    numberOfRefills: 3
                    directions: CHANGE POD EVERY 3 DAYS
                    ndc: "08508300001"
                    dispenseAsWritten: "1"
                    effectiveDate: 2023-11-23
                    medicalDiagnosis:
                      clinicalInformationQualifier: "1"
                      primary:
                        icd10Code: G47.33
                        description: Obstructive sleep apnea
                      secondary:
                        icd10Code: Z68.27
                        description: N/A
                  receivingPharmacy:
                    ncpdpId: "0362309"
                    npi: "1912499500"
                    pharmacyName: AZ Pharmacy LLC
                    pharmacistName:
                      firstName: Chris
                      lastName: Rochon
                    pharmacyAddress:
                      addressLine1: 3809 E Watkins St
                      city: Phoenix
                      state: AZ
                      zipCode: 85034-7264
                      countryCode: US
                    primaryTelephone: "8557455725"
                    fax: "8557455725"
                  observation:
                    measurement:
                    - vitalSign: HEIGHT
                      value: "180"
                      measurementUnitOfMeasure: cm
                      observationDate: 2023-11-11
                    - vitalSign: WEIGHT
                      value: "75"
                      measurementUnitOfMeasure: kg
                      observationDate: 2023-11-11
                    observationNotes: Patient's BMI is within normal range.
              PutPrescription_example4:
                description: ""
                summary: "Example request for pharmacy-to-pharmacy transfer: Never\
                  \ Dispensed, No Refills"
                value:
                  partnerPrescriptionId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f5
                  partnerPatientId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f2
                  prescriber:
                    primaryTelephone: "9194713351"
                    npi: "1639384175"
                    deaNumber: BK2277780
                    prescriberName:
                      firstName: John
                      lastName: Kihm
                    prescriberAddress:
                      addressLine1: 3811 N Roxboro St
                      city: Durham
                      state: NC
                      zipCode: "27704"
                      countryCode: US
                    stateLicenseNumber: "55555555"
                    businessName: Joe and Janes
                    fax: "9194713351"
                  medicationPrescribed:
                    drugDescription: AMLODIPINE - ATORVASTATIN 10 MG - 10 MG TAB
                    quantity:
                      value: 30
                      quantityUnitOfMeasureCode: C48542
                      codeListQualifier: "38"
                    strength:
                      value: "10.0"
                      strengthFormCode: C42998
                      strengthUnitOfMeasureCode: C28253
                    daysSupply: 30
                    writtenDate: 2023-11-20
                    numberOfRefills: 0
                    directions: TAKE 1 TABLET BY MOUTH DAILY
                    ndc: "60505347903"
                    dispenseAsWritten: "0"
                    effectiveDate: 2023-11-23
                    medicalDiagnosis:
                      clinicalInformationQualifier: "1"
                      primary:
                        icd10Code: G47.33
                        description: Obstructive sleep apnea
                      secondary:
                        icd10Code: Z68.27
                        description: N/A
                  prescriptionTransferInDetails:
                    sendingPharmacy:
                      ncpdpId: "5729871"
                      npi: "1295193324"
                      pharmacyName: PartnerPharmacy
                      deaNumber: "0987"
                      pharmacistName:
                        firstName: Partner
                        lastName: Pharmacist
                      pharmacyAddress:
                        addressLine1: 1 Terry Ave
                        city: Seattle
                        state: WA
                        zipCode: "32694"
                        countryCode: US
                      primaryTelephone: "9048374076"
                      fax: "9048374076"
                    prescriptionTransferred:
                      prescriptionFillTransferInType: NEW_RX
                      refillsTransferred: 1
                      refillsRemaining: 1
                      quantityTransferred:
                        value: 30
                        quantityUnitOfMeasureCode: C48542
                        codeListQualifier: QT
                      quantityRemaining:
                        value: 30
                        quantityUnitOfMeasureCode: C48542
                        codeListQualifier: "40"
                      pharmacyRxNumber: "123456"
                  receivingPharmacy:
                    ncpdpId: "0362309"
                    npi: "1912499500"
                    pharmacyName: AZ Pharmacy LLC
                    pharmacistName:
                      firstName: Chris
                      lastName: Rochon
                    pharmacyAddress:
                      addressLine1: 3809 E Watkins St
                      city: Phoenix
                      state: AZ
                      zipCode: 85034-7264
                      countryCode: US
                    primaryTelephone: "8557455725"
                    fax: "8557455725"
                  observation:
                    measurement:
                    - vitalSign: HEIGHT
                      value: "180"
                      measurementUnitOfMeasure: cm
                      observationDate: 2023-11-11
                    - vitalSign: WEIGHT
                      value: "75"
                      measurementUnitOfMeasure: kg
                      observationDate: 2023-11-11
                    observationNotes: Patient's BMI is within normal range.
              PutPrescription_example5:
                description: ""
                summary: "Example request for pharmacy-to-pharmacy transfer: Never\
                  \ Dispensed, With Refills"
                value:
                  partnerPrescriptionId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f6
                  partnerPatientId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f2
                  prescriber:
                    primaryTelephone: "9194713351"
                    npi: "1639384175"
                    deaNumber: BK2277780
                    prescriberName:
                      firstName: John
                      lastName: Kihm
                    prescriberAddress:
                      addressLine1: 3811 N Roxboro St
                      city: Durham
                      state: NC
                      zipCode: "27704"
                      countryCode: US
                    stateLicenseNumber: "55555555"
                    businessName: Joe and Janes
                    fax: "9194713351"
                  medicationPrescribed:
                    drugDescription: AMLODIPINE - ATORVASTATIN 10 MG - 10 MG TAB
                    quantity:
                      value: 60
                      quantityUnitOfMeasureCode: C48542
                      codeListQualifier: "38"
                    strength:
                      value: "10.0"
                      strengthFormCode: C42998
                      strengthUnitOfMeasureCode: C28253
                    daysSupply: 30
                    writtenDate: 2023-11-15
                    numberOfRefills: 3
                    directions: TAKE 1 TABLET BY MOUTH TWICE DAILY
                    ndc: "60505347903"
                    dispenseAsWritten: "0"
                    effectiveDate: 2023-11-15
                    medicalDiagnosis:
                      clinicalInformationQualifier: "1"
                      primary:
                        icd10Code: G47.33
                        description: Obstructive sleep apnea
                      secondary:
                        icd10Code: Z68.27
                        description: N/A
                  prescriptionTransferInDetails:
                    sendingPharmacy:
                      ncpdpId: "5729871"
                      npi: "1295193324"
                      pharmacyName: PartnerPharmacy
                      deaNumber: "0987"
                      pharmacistName:
                        firstName: Partner
                        lastName: Pharmacist
                      pharmacyAddress:
                        addressLine1: 1 Terry Ave
                        city: Seattle
                        state: WA
                        zipCode: "32694"
                        countryCode: US
                      primaryTelephone: "9048374076"
                      fax: "9048374076"
                    prescriptionTransferred:
                      prescriptionFillTransferInType: NEW_RX
                      refillsTransferred: 4
                      refillsRemaining: 4
                      quantityTransferred:
                        value: 240
                        quantityUnitOfMeasureCode: C48542
                        codeListQualifier: QT
                      quantityRemaining:
                        value: 240
                        quantityUnitOfMeasureCode: C48542
                        codeListQualifier: "40"
                      pharmacyRxNumber: "789012"
                  receivingPharmacy:
                    ncpdpId: "0362309"
                    npi: "1912499500"
                    pharmacyName: AZ Pharmacy LLC
                    pharmacistName:
                      firstName: Chris
                      lastName: Rochon
                    pharmacyAddress:
                      addressLine1: 3809 E Watkins St
                      city: Phoenix
                      state: AZ
                      zipCode: 85034-7264
                      countryCode: US
                    primaryTelephone: "8557455725"
                    fax: "8557455725"
              PutPrescription_example6:
                description: ""
                summary: "Example request for pharmacy-to-pharmacy transfer: First\
                  \ Fill Dispensed, All Refills Transferring"
                value:
                  partnerPrescriptionId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f7
                  partnerPatientId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f2
                  prescriber:
                    primaryTelephone: "9194713351"
                    npi: "1639384175"
                    deaNumber: BK2277780
                    prescriberName:
                      firstName: John
                      lastName: Kihm
                    prescriberAddress:
                      addressLine1: 3811 N Roxboro St
                      city: Durham
                      state: NC
                      zipCode: "27704"
                      countryCode: US
                    stateLicenseNumber: "55555555"
                    businessName: Joe and Janes
                    fax: "9194713351"
                  medicationPrescribed:
                    drugDescription: LEVOTHYROXINE 50 MCG TABLET
                    quantity:
                      value: 30
                      quantityUnitOfMeasureCode: C48542
                      codeListQualifier: "38"
                    strength:
                      value: "50.0"
                      strengthFormCode: C42998
                      strengthUnitOfMeasureCode: C28254
                    daysSupply: 30
                    writtenDate: 2023-10-15
                    numberOfRefills: 3
                    directions: TAKE 1 TABLET BY MOUTH DAILY ON EMPTY STOMACH
                    ndc: "00378180301"
                    dispenseAsWritten: "0"
                    effectiveDate: 2023-10-20
                    medicalDiagnosis:
                      clinicalInformationQualifier: "1"
                      primary:
                        icd10Code: G47.33
                        description: Obstructive sleep apnea
                      secondary:
                        icd10Code: Z68.27
                        description: N/A
                  prescriptionTransferInDetails:
                    sendingPharmacy:
                      ncpdpId: "5729871"
                      npi: "1295193324"
                      pharmacyName: PartnerPharmacy
                      deaNumber: "0987"
                      pharmacistName:
                        firstName: Partner
                        lastName: Pharmacist
                      pharmacyAddress:
                        addressLine1: 1 Terry Ave
                        city: Seattle
                        state: WA
                        zipCode: "32694"
                        countryCode: US
                      primaryTelephone: "9048374076"
                      fax: "9048374076"
                    prescriptionTransferred:
                      prescriptionFillTransferInType: DISPENSED_BEFORE
                      firstFillDate: 2023-10-20
                      lastFillDate: 2023-10-20
                      refillsTransferred: 3
                      refillsRemaining: 3
                      quantityTransferred:
                        value: 90
                        quantityUnitOfMeasureCode: C48542
                        codeListQualifier: QT
                      quantityRemaining:
                        value: 90
                        quantityUnitOfMeasureCode: C48542
                        codeListQualifier: "40"
                      previousDispensedMedications:
                      - drugDescription: LEVOTHYROXINE 50 MCG TABLET
                        quantity:
                          value: 30
                          quantityUnitOfMeasureCode: C48542
                          codeListQualifier: "38"
                        daysSupply: 30
                        directions: TAKE 1 TABLET BY MOUTH DAILY ON EMPTY STOMACH
                        ndc: "00378180301"
                        dispenseAsWritten: "0"
                        lastFillDate: 2023-10-20
                      pharmacyRxNumber: "345678"
                  receivingPharmacy:
                    ncpdpId: "0362309"
                    npi: "1912499500"
                    pharmacyName: AZ Pharmacy LLC
                    pharmacistName:
                      firstName: Chris
                      lastName: Rochon
                    pharmacyAddress:
                      addressLine1: 3809 E Watkins St
                      city: Phoenix
                      state: AZ
                      zipCode: 85034-7264
                      countryCode: US
                    primaryTelephone: "8557455725"
                    fax: "8557455725"
              PutPrescription_example7:
                description: ""
                summary: "Example request for pharmacy-to-pharmacy transfer: First\
                  \ Fill + One Refill Dispensed, Remaining Refills Transferring"
                value:
                  partnerPrescriptionId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f8
                  partnerPatientId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f2
                  prescriber:
                    primaryTelephone: "9194713351"
                    npi: "1639384175"
                    deaNumber: BK2277780
                    prescriberName:
                      firstName: John
                      lastName: Kihm
                    prescriberAddress:
                      addressLine1: 3811 N Roxboro St
                      city: Durham
                      state: NC
                      zipCode: "27704"
                      countryCode: US
                    stateLicenseNumber: "55555555"
                    businessName: Joe and Janes
                    fax: "9194713351"
                  medicationPrescribed:
                    drugDescription: LISINOPRIL 10 MG TABLET
                    quantity:
                      value: 100
                      quantityUnitOfMeasureCode: C48542
                      codeListQualifier: "38"
                    strength:
                      value: "10.0"
                      strengthFormCode: C42998
                      strengthUnitOfMeasureCode: C28253
                    daysSupply: 30
                    writtenDate: 2023-09-15
                    numberOfRefills: 5
                    directions: TAKE 1 TABLET BY MOUTH THRICE DAILY
                    ndc: "68180051401"
                    dispenseAsWritten: "0"
                    effectiveDate: 2023-09-15
                    medicalDiagnosis:
                      clinicalInformationQualifier: "1"
                      primary:
                        icd10Code: G47.33
                        description: Obstructive sleep apnea
                      secondary:
                        icd10Code: Z68.27
                        description: N/A
                  prescriptionTransferInDetails:
                    sendingPharmacy:
                      ncpdpId: "5729871"
                      npi: "1295193324"
                      pharmacyName: PartnerPharmacy
                      deaNumber: "0987"
                      pharmacistName:
                        firstName: Partner
                        lastName: Pharmacist
                      pharmacyAddress:
                        addressLine1: 1 Terry Ave
                        city: Seattle
                        state: WA
                        zipCode: "32694"
                        countryCode: US
                      primaryTelephone: "9048374076"
                      fax: "9048374076"
                    prescriptionTransferred:
                      prescriptionFillTransferInType: DISPENSED_BEFORE
                      firstFillDate: 2023-09-20
                      lastFillDate: 2023-10-20
                      refillsTransferred: 4
                      refillsRemaining: 4
                      quantityTransferred:
                        value: 400
                        quantityUnitOfMeasureCode: C48542
                        codeListQualifier: QT
                      quantityRemaining:
                        value: 400
                        quantityUnitOfMeasureCode: C48542
                        codeListQualifier: "40"
                      previousDispensedMedications:
                      - drugDescription: LISINOPRIL 10 MG TABLET
                        quantity:
                          value: 100
                          quantityUnitOfMeasureCode: C48542
                          codeListQualifier: "38"
                        daysSupply: 30
                        directions: TAKE 1 TABLET BY MOUTH THRICE DAILY
                        ndc: "68180051401"
                        dispenseAsWritten: "0"
                        lastFillDate: 2023-09-20
                      - drugDescription: LISINOPRIL 10 MG TABLET
                        quantity:
                          value: 100
                          quantityUnitOfMeasureCode: C48542
                          codeListQualifier: "38"
                        daysSupply: 30
                        directions: TAKE 1 TABLET BY MOUTH THRICE DAILY
                        ndc: "68180051401"
                        dispenseAsWritten: "0"
                        lastFillDate: 2023-10-20
                      pharmacyRxNumber: "567890"
                  receivingPharmacy:
                    ncpdpId: "0362309"
                    npi: "1912499500"
                    pharmacyName: AZ Pharmacy LLC
                    pharmacistName:
                      firstName: Chris
                      lastName: Rochon
                    pharmacyAddress:
                      addressLine1: 3809 E Watkins St
                      city: Phoenix
                      state: AZ
                      zipCode: 85034-7264
                      countryCode: US
                    primaryTelephone: "8557455725"
                    fax: "8557455725"
            schema:
              $ref: "#/components/schemas/PutPrescriptionRequestContent"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                PutPrescription_example1:
                  description: ""
                  summary: Example request for pharmacy-to-pharmacy New Prescription
                    transfers
                  value:
                    partnerPrescriptionId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f3
                    receivingPharmacy:
                      ncpdpId: "0362309"
                      npi: "1912499500"
                      pharmacistName:
                        firstName: Chris
                        lastName: Rochon
                      pharmacyAddress:
                        addressLine1: 3809 E Watkins St
                        city: Phoenix
                        countryCode: US
                        state: AZ
                        zipCode: 85034-7264
                      pharmacyName: AZ Pharmacy LLC
                      primaryTelephone: "8557455725"
                PutPrescription_example2:
                  description: ""
                  summary: Example Request for pharmacy-to-pharmacy previously dispensed
                    Prescription transfers
                  value:
                    partnerPrescriptionId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f3
                    receivingPharmacy:
                      ncpdpId: "0362309"
                      npi: "1912499500"
                      pharmacistName:
                        firstName: Chris
                        lastName: Rochon
                      pharmacyAddress:
                        addressLine1: 3809 E Watkins St
                        city: Phoenix
                        countryCode: US
                        state: AZ
                        zipCode: 85034-7264
                      pharmacyName: AZ Pharmacy LLC
                      primaryTelephone: "8557455725"
                PutPrescription_example3:
                  description: ""
                  summary: Example Prescription Request for prescriber-direct prescriptions
                  value:
                    partnerPrescriptionId: 5b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f3
                    receivingPharmacy:
                      fax: "8557455725"
                      ncpdpId: "0362309"
                      npi: "1912499500"
                      pharmacistName:
                        firstName: Chris
                        lastName: Rochon
                      pharmacyAddress:
                        addressLine1: 3809 E Watkins St
                        city: Phoenix
                        countryCode: US
                        state: AZ
                        zipCode: 85034-7264
                      pharmacyName: AZ Pharmacy LLC
                      primaryTelephone: "8557455725"
                PutPrescription_example4:
                  description: ""
                  summary: "Example request for pharmacy-to-pharmacy transfer: Never\
                    \ Dispensed, No Refills"
                  value:
                    partnerPrescriptionId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f5
                    receivingPharmacy:
                      ncpdpId: "0362309"
                      npi: "1912499500"
                      pharmacistName:
                        firstName: Chris
                        lastName: Rochon
                      pharmacyAddress:
                        addressLine1: 3809 E Watkins St
                        city: Phoenix
                        countryCode: US
                        state: AZ
                        zipCode: 85034-7264
                      pharmacyName: AZ Pharmacy LLC
                      primaryTelephone: "8557455725"
                PutPrescription_example5:
                  description: ""
                  summary: "Example request for pharmacy-to-pharmacy transfer: Never\
                    \ Dispensed, With Refills"
                  value:
                    partnerPrescriptionId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f6
                    receivingPharmacy:
                      ncpdpId: "0362309"
                      npi: "1912499500"
                      pharmacistName:
                        firstName: Chris
                        lastName: Rochon
                      pharmacyAddress:
                        addressLine1: 3809 E Watkins St
                        city: Phoenix
                        countryCode: US
                        state: AZ
                        zipCode: 85034-7264
                      pharmacyName: AZ Pharmacy LLC
                      primaryTelephone: "8557455725"
                PutPrescription_example6:
                  description: ""
                  summary: "Example request for pharmacy-to-pharmacy transfer: First\
                    \ Fill Dispensed, All Refills Transferring"
                  value:
                    partnerPrescriptionId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f7
                    receivingPharmacy:
                      ncpdpId: "0362309"
                      npi: "1912499500"
                      pharmacistName:
                        firstName: Chris
                        lastName: Rochon
                      pharmacyAddress:
                        addressLine1: 3809 E Watkins St
                        city: Phoenix
                        countryCode: US
                        state: AZ
                        zipCode: 85034-7264
                      pharmacyName: AZ Pharmacy LLC
                      primaryTelephone: "8557455725"
                PutPrescription_example7:
                  description: ""
                  summary: "Example request for pharmacy-to-pharmacy transfer: First\
                    \ Fill + One Refill Dispensed, Remaining Refills Transferring"
                  value:
                    partnerPrescriptionId: 2b4f8e1a-9c3d-6f7b-8a2e-d5c1e0a3b2f8
                    receivingPharmacy:
                      ncpdpId: "0362309"
                      npi: "1912499500"
                      pharmacistName:
                        firstName: Chris
                        lastName: Rochon
                      pharmacyAddress:
                        addressLine1: 3809 E Watkins St
                        city: Phoenix
                        countryCode: US
                        state: AZ
                        zipCode: 85034-7264
                      pharmacyName: AZ Pharmacy LLC
                      primaryTelephone: "8557455725"
              schema:
                $ref: "#/components/schemas/PutPrescriptionResponseContent"
          description: PutPrescription 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_400_response"
          description: PreconditionFailedException or InvalidInputException 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundExceptionResponseContent"
          description: ResourceNotFoundException 404 response
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerExceptionResponseContent"
          description: InternalServerException 500 response
        "502":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Bad Gateway`: This error occurs when the server, acting as a gateway or proxy, received an invalid response from the upstream server.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this could be a temporary issue with the upstream service.
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Temporarily service is unavailable`: This error indicates that the server is currently unable to handle the request due to temporary overloading or maintenance.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this condition is likely to resolve itself.
        "504":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Network error communicating with endpoint`: This error occurs when the server did not receive a timely response from an upstream server or endpoint.
            **Retry Logic**: Yes, the client should retry the request, as this could be a temporary network issue.
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Too many requests`: This error occurs when the number of requests sent by the client exceeds the rate limit or violates the Service Level Agreement (SLA).
            **Retry Logic**: Retry with backoff. The client should wait before retrying, using an exponential backoff strategy to avoid further rate limit violations.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Forbidden`: This error occurs when the client's credentials are rejected or the client does not have permission to access the resource.
            **Retry Logic**: No, the client should not retry the request as it will likely continue to fail without changes to the request or credentials.
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri:
          Fn::Sub: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations"
        credentials:
          Fn::Sub: "${APIGatewayExecutionRole.Arn}"
  /prescription-transfer:
    post:
      description: |
        This API is responsible for requesting prescription transfer from Amazon Pharmacy.
        As of now, this request triggers an asynchronous operation.
        So, API clients are suggested to invoke GET /prescription API to monitor the status of the transfer request.
      operationId: PostPrescriptionTransfer
      parameters:
      - description: This will be provided to your Amazon Pharmacy Account Manager.
          The identifier will be used by Amazon Pharmacy to determine configurations
          for a specific program or integration.
        explode: false
        in: header
        name: client-integration-id
        required: true
        schema:
          type: string
        style: simple
      - description: This can be provided by clients and is used to identify client's
          request. Clients can assign UUID and log it along with their response to
          track a particular API request.
        explode: false
        in: header
        name: client-request-id
        required: true
        schema:
          type: string
        style: simple
      - description: AWS temporary session token will be obtained by connecting to
          AmazonSecurityTokenService
        explode: false
        in: header
        name: x-amz-security-token
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              PostPrescriptionTransfer_example1:
                description: ""
                summary: Transfer initiated scenario
                value:
                  partnerPrescriptionId: test-prescription-1
                  reasonForTransfer: test-reason
                  transferToPharmacy:
                    ncpdpId: "0362309"
                    npi: "1912499500"
                    pharmacistName:
                      firstName: FirstName
                      lastName: LastName
                    pharmacyAddress:
                      addressLine1: 3809 E Watkins St
                      city: Boston
                      countryCode: US
                      state: MA
                      zipCode: "02125"
                    deaNumber: BS7030707
                    pharmacyName: Test Pharmacy LLC
                    primaryTelephone: "8557455725"
                    fax: "8557455725"
            schema:
              $ref: "#/components/schemas/PostPrescriptionTransferRequestContent"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                PostPrescriptionTransfer_example1:
                  description: ""
                  summary: Transfer initiated scenario
                  value:
                    transferRequestStatus: TRANSFER_INITIATED
              schema:
                $ref: "#/components/schemas/PostPrescriptionTransferResponseContent"
          description: PostPrescriptionTransfer 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionFailedExceptionResponseContent"
          description: PreconditionFailedException 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundExceptionResponseContent"
          description: ResourceNotFoundException 404 response
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Too many requests`: This error occurs when the number of requests sent by the client exceeds the rate limit or violates the Service Level Agreement (SLA).
            **Retry Logic**: Retry with backoff. The client should wait before retrying, using an exponential backoff strategy to avoid further rate limit violations.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerExceptionResponseContent"
          description: InternalServerException 500 response
        "502":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Bad Gateway`: This error occurs when the server, acting as a gateway or proxy, received an invalid response from the upstream server.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this could be a temporary issue with the upstream service.
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Temporarily service is unavailable`: This error indicates that the server is currently unable to handle the request due to temporary overloading or maintenance.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this condition is likely to resolve itself.
        "504":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Network error communicating with endpoint`: This error occurs when the server did not receive a timely response from an upstream server or endpoint.
            **Retry Logic**: Yes, the client should retry the request, as this could be a temporary network issue.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Forbidden`: This error occurs when the client's credentials are rejected or the client does not have permission to access the resource.
            **Retry Logic**: No, the client should not retry the request as it will likely continue to fail without changes to the request or credentials.
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri:
          Fn::Sub: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations"
        credentials:
          Fn::Sub: "${APIGatewayExecutionRole.Arn}"
  /prescription/{partnerPrescriptionId}:
    get:
      description: |
        This API is responsible for getting status information regarding the creation of the prescription.
        The API will return status information about the latest version of the submitted prescription
        in case it is submitted multiple times.
      operationId: GetPrescription
      parameters:
      - description: A unique Prescription identifier provided by the partner to create
          the prescription.
        examples:
          GetPrescription_example1:
            description: ""
            summary: Standard success when API is invoked for active prescription
            value: test-rx-1
        explode: false
        in: path
        name: partnerPrescriptionId
        required: true
        schema:
          description: A unique Prescription identifier provided by the partner to
            create the prescription.
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
        style: simple
      - description: This will be provided to your Amazon Pharmacy Account Manager.
          The identifier will be used by Amazon Pharmacy to determine configurations
          for a specific program or integration.
        explode: false
        in: header
        name: client-integration-id
        required: true
        schema:
          type: string
        style: simple
      - description: This can be provided by clients and is used to identify client's
          request. Clients can assign UUID and log it along with their response to
          track a particular API request.
        explode: false
        in: header
        name: client-request-id
        required: true
        schema:
          type: string
        style: simple
      - description: AWS temporary session token will be obtained by connecting to
          AmazonSecurityTokenService
        explode: false
        in: header
        name: x-amz-security-token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                GetPrescription_example1:
                  description: ""
                  summary: Standard success when API is invoked for active prescription
                  value:
                    partnerPrescriptionId: test-rx-1
                    prescription:
                      status: PRESCRIPTION_ACTIVE
                      statusDescription: Prescription processing has started.
                      amazonPharmacy:
                        ncpdpId: "0362309"
                        npi: "1912499500"
                        pharmacistName:
                          firstName: Chris
                          lastName: Rochon
                        pharmacyAddress:
                          addressLine1: 3809 E Watkins St
                          city: Phoenix
                          countryCode: US
                          state: AZ
                          zipCode: 85034-7264
                        pharmacyName: AZ Pharmacy LLC
                        primaryTelephone: "8557455725"
                      drugUnits: EA
                      daysSupply: 60
                      rxNumber: "12345678"
                      ndc: "08508300021"
                      refillsAuthorized: 2
                      refillsRemaining: 1
                      fillsRemaining: 2
                      totalQuantityRemaining:
                        value: 30
                        unitOfMeasureCode: EA
                      fills:
                      - fillNumber: 0
                        dateCreated: 2023-12-11T22:09:05.687Z
                        datePurchased: 2023-12-14T23:33:03.301Z
                        dateComplete: 2023-12-15T23:33:03.301Z
                        status: COMPLETE
                        daysSupply: 30
                        quantity:
                          value: 30
                          unitOfMeasureCode: EA
                      - fillNumber: 1
                        dateCreated: 2023-12-11T22:09:05.687Z
                        status: PENDING
                        daysSupply: 30
                        quantity:
                          value: 30
                          unitOfMeasureCode: EA
                      prescriber:
                        primaryTelephone: "9194713351"
                        npi: "1639384175"
                        deaNumber: BK2277780
                        prescriberName:
                          firstName: John
                          lastName: Kihm
                        prescriberAddress:
                          addressLine1: 3811 N Roxboro St
                          city: Durham
                          state: NC
                          zipCode: "27704"
                          countryCode: US
                        stateLicenseNumber: "55555555"
                        businessName: Joe and Janes
                        fax: "9194713351"
              schema:
                $ref: "#/components/schemas/GetPrescriptionResponseContent"
          description: GetPrescription 200 response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputExceptionResponseContent"
          description: InvalidInputException 400 response
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundExceptionResponseContent"
          description: ResourceNotFoundException 404 response
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerExceptionResponseContent"
          description: InternalServerException 500 response
        "502":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Bad Gateway`: This error occurs when the server, acting as a gateway or proxy, received an invalid response from the upstream server.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this could be a temporary issue with the upstream service.
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Temporarily service is unavailable`: This error indicates that the server is currently unable to handle the request due to temporary overloading or maintenance.
            **Retry Logic**: Yes, the client should retry the request after a short delay, as this condition is likely to resolve itself.
        "504":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Network error communicating with endpoint`: This error occurs when the server did not receive a timely response from an upstream server or endpoint.
            **Retry Logic**: Yes, the client should retry the request, as this could be a temporary network issue.
        "429":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Too many requests`: This error occurs when the number of requests sent by the client exceeds the rate limit or violates the Service Level Agreement (SLA).
            **Retry Logic**: Retry with backoff. The client should wait before retrying, using an exponential backoff strategy to avoid further rate limit violations.
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrder_502_response"
          description: |
            `Forbidden`: This error occurs when the client's credentials are rejected or the client does not have permission to access the resource.
            **Retry Logic**: No, the client should not retry the request as it will likely continue to fail without changes to the request or credentials.
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri:
          Fn::Sub: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations"
        credentials:
          Fn::Sub: "${APIGatewayExecutionRole.Arn}"
components:
  schemas:
    AdditionalOrderDetails:
      description: "Contains additional, optional, details for an order. Fields in\
        \ this struct will be non-null in the right conditions."
      example:
        shippingDetails:
          carrier: carrier
          estimatedArrival: estimatedArrival
          trackingId: trackingId
        claimRejectedDetails:
          claimRejectionReasons:
          - rejectionTypeDescription: rejectionTypeDescription
            fieldErrors:
              demographicErrors:
              - DATE_OF_BIRTH
              - DATE_OF_BIRTH
              insuranceErrors:
              - BIN
              - BIN
            rejectedInsuranceDetails:
              payerType: COMMERCIAL
              binNumber: binNumber
              payerName: payerName
              pcn: pcn
              stateCode: stateCode
              groupNumber: groupNumber
            claimRejectionType: INVALID_CUSTOMER_DEMOGRAPHIC_INFORMATION
            daysSupplyDetails:
              maximumDaysSupply: 0.8008281904610115
          - rejectionTypeDescription: rejectionTypeDescription
            fieldErrors:
              demographicErrors:
              - DATE_OF_BIRTH
              - DATE_OF_BIRTH
              insuranceErrors:
              - BIN
              - BIN
            rejectedInsuranceDetails:
              payerType: COMMERCIAL
              binNumber: binNumber
              payerName: payerName
              pcn: pcn
              stateCode: stateCode
              groupNumber: groupNumber
            claimRejectionType: INVALID_CUSTOMER_DEMOGRAPHIC_INFORMATION
            daysSupplyDetails:
              maximumDaysSupply: 0.8008281904610115
        placeOrderOnDate: placeOrderOnDate
      properties:
        shippingDetails:
          $ref: "#/components/schemas/ShippingDetails"
        placeOrderOnDate:
          description: API attribute where orders are held till this date and sent
            for order placement only when the date is passed.
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        claimRejectedDetails:
          $ref: "#/components/schemas/ClaimRejectionDetails"
      type: object
    Address:
      description: Structure representing a physical address.
      example:
        zipCode: zipCode
        city: city
        countryCode: countryCode
        addressLine1: addressLine1
        addressLine2: addressLine2
        state: state
      properties:
        addressLine1:
          description: Address line 1 contains street name and number
          maxLength: 180
          minLength: 1
          pattern: ^\s*\S.*$
          type: string
        addressLine2:
          description: "Address line 2 contains Apt, company info etc"
          maxLength: 60
          minLength: 1
          pattern: ^\s*\S.*$
          type: string
        city:
          description: The city of the address.
          maxLength: 50
          pattern: ^\s*\S.*$
          type: string
        state:
          description: The state of the address.
          maxLength: 2
          minLength: 2
          type: string
        zipCode:
          description: The Zip code for the address.
          pattern: "^\\d{5}(-\\d{4})?$"
          type: string
        countryCode:
          description: The country code of the address.
          maxLength: 2
          minLength: 2
          type: string
      required:
      - addressLine1
      - city
      - countryCode
      - state
      - zipCode
      type: object
    AllergiesDescriptor:
      description: |-
        Enum representing the descriptor for the patient's allergies.

        `KNOWN_ALLERGIES_INCLUDED` - Patient's allergies are included in the allergies field.

        `PATIENT_HAS_NO_KNOWN_ALLERGIES` - Patient does not have any known allergies.

        `NOT_AVAILABLE` - This should be set when:
        1. Information is not available in the requested format.
        2. Information has not been collected from the patient.
        3. Patient did not provide the information.
        4. Information cannot be provided due to some other reason.
      enum:
      - KNOWN_ALLERGIES_INCLUDED
      - PATIENT_HAS_NO_KNOWN_ALLERGIES
      - NOT_AVAILABLE
      type: string
    Allergy:
      description: Structure representing an allergy of the patient.
      example:
        code: code
        codeType: SNOMEDCT
        textValue: textValue
      properties:
        code:
          description: "Patient's allergy code, Allergy code should follow the AllergyCodeType\
            \ input's standard code format."
          pattern: "^(([0-9]{6,18})|([0-9]{1,7}))$"
          type: string
        codeType:
          $ref: "#/components/schemas/AllergyCodeType"
        textValue:
          description: "A human-readable text value of the allergy. Eg, Peanut Allergy"
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
      required:
      - code
      - codeType
      - textValue
      type: object
    AllergyCodeType:
      description: |-
        Enum representing the type of allergy code.
        `SNOMEDCT` - SNOMED CT code is one of a suite of designated standards for use in U.S. Federal Government systems to support electronic exchange of clinical health information.

        `RXNORM` - RxNorm, a standardized nomenclature for clinical drugs, is produced and maintained by the National Library of Medicine.
      enum:
      - SNOMEDCT
      - RXNORM
      type: string
    AllergyDetails:
      description: Structure representing the allergy details of the patient.
      example:
        noKnownAllergies: true
        allergies:
        - code: code
          codeType: SNOMEDCT
          textValue: textValue
        - code: code
          codeType: SNOMEDCT
          textValue: textValue
        - code: code
          codeType: SNOMEDCT
          textValue: textValue
        - code: code
          codeType: SNOMEDCT
          textValue: textValue
        - code: code
          codeType: SNOMEDCT
          textValue: textValue
        allergiesDescriptor: KNOWN_ALLERGIES_INCLUDED
      properties:
        noKnownAllergies:
          deprecated: true
          description: |-
            Currently supported but on path to deprecation as we will plan to switch to allergiesDescriptor
            This shape is deprecated since 2024-05-15: Use allergiesDescriptor instead
          type: boolean
        allergies:
          description: "If noKnownAllergies is false, allergies is required"
          items:
            $ref: "#/components/schemas/Allergy"
          maxItems: 100
          minItems: 0
          type: array
        allergiesDescriptor:
          $ref: "#/components/schemas/AllergiesDescriptor"
      type: object
    CancelOrderRequestContent:
      description: Structure representing the request for cancelling an order.
      example:
        cancellationReason: cancellationReason
      properties:
        cancellationReason:
          description: The reason for cancelling this order.
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
      required:
      - cancellationReason
      type: object
    CancelOrderResponseContent:
      description: Structure representing the response for cancelling an order.
      example:
        partnerOrderId: partnerOrderId
      properties:
        partnerOrderId:
          description: The unique Order identifier provided during the creation of
            the order.
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
      required:
      - partnerOrderId
      type: object
    CardDetails:
      description: Structure representing the details of a payment card.
      example:
        expirationYear: 2068.808666991335
        encryptedCardNumber: encryptedCardNumber
        cardHolderName: cardHolderName
        expirationMonth: 1.8809110095071127
      properties:
        encryptedCardNumber:
          description: The encrypted card number.
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
        cardHolderName:
          description: The Name of Card Holder owner as it appears on the Card.
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
        expirationMonth:
          description: The expiration month of the card.
          maximum: 12
          minimum: 1
          type: number
        expirationYear:
          description: The expiration year of the card.
          maximum: 2099
          minimum: 2023
          type: number
      required:
      - cardHolderName
      - encryptedCardNumber
      - expirationMonth
      - expirationYear
      type: object
    ClaimRejectionDetails:
      description: Structure representing Claim rejected details for an order failure
        due to claim rejection
      example:
        claimRejectionReasons:
        - rejectionTypeDescription: rejectionTypeDescription
          fieldErrors:
            demographicErrors:
            - DATE_OF_BIRTH
            - DATE_OF_BIRTH
            insuranceErrors:
            - BIN
            - BIN
          rejectedInsuranceDetails:
            payerType: COMMERCIAL
            binNumber: binNumber
            payerName: payerName
            pcn: pcn
            stateCode: stateCode
            groupNumber: groupNumber
          claimRejectionType: INVALID_CUSTOMER_DEMOGRAPHIC_INFORMATION
          daysSupplyDetails:
            maximumDaysSupply: 0.8008281904610115
        - rejectionTypeDescription: rejectionTypeDescription
          fieldErrors:
            demographicErrors:
            - DATE_OF_BIRTH
            - DATE_OF_BIRTH
            insuranceErrors:
            - BIN
            - BIN
          rejectedInsuranceDetails:
            payerType: COMMERCIAL
            binNumber: binNumber
            payerName: payerName
            pcn: pcn
            stateCode: stateCode
            groupNumber: groupNumber
          claimRejectionType: INVALID_CUSTOMER_DEMOGRAPHIC_INFORMATION
          daysSupplyDetails:
            maximumDaysSupply: 0.8008281904610115
      properties:
        claimRejectionReasons:
          description: This field represents reasons for claim rejections
          items:
            $ref: "#/components/schemas/ClaimRejectionReason"
          type: array
      type: object
    ClaimRejectionReason:
      description: Structure representing detailed claim rejection reasons.
      example:
        rejectionTypeDescription: rejectionTypeDescription
        fieldErrors:
          demographicErrors:
          - DATE_OF_BIRTH
          - DATE_OF_BIRTH
          insuranceErrors:
          - BIN
          - BIN
        rejectedInsuranceDetails:
          payerType: COMMERCIAL
          binNumber: binNumber
          payerName: payerName
          pcn: pcn
          stateCode: stateCode
          groupNumber: groupNumber
        claimRejectionType: INVALID_CUSTOMER_DEMOGRAPHIC_INFORMATION
        daysSupplyDetails:
          maximumDaysSupply: 0.8008281904610115
      properties:
        claimRejectionType:
          $ref: "#/components/schemas/ClaimRejectionType"
        rejectionTypeDescription:
          description: This field contains the description explaining the claimRejectionType
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
        fieldErrors:
          $ref: "#/components/schemas/FieldErrors"
        rejectedInsuranceDetails:
          $ref: "#/components/schemas/RejectedInsuranceDetails"
        daysSupplyDetails:
          $ref: "#/components/schemas/DaysSupplyDetails"
      type: object
    ClaimRejectionType:
      description: |-
        `INVALID_CUSTOMER_DEMOGRAPHIC_INFORMATION` - Customer demographic information is invalid.

        `INVALID_INSURANCE_INFORMATION` - Customer insurance information is invalid.

        `INVALID_DAYS_SUPPLY` - Days supply value is invalid.

        `HARD_FAILURE` - Customer will not receive coverage, offer cash or transfer out.

        `NEEDS_PRIOR_AUTHORIZATION` - Prescription requires Prior Authorization.

        `REFILL TOO SOON` - Claim was rejected for refill too soon

        `MANUAL_ADJUDICATION` - Claim Rejection might be addressed with manual adjudication and does not fall under another rejection"
      enum:
      - INVALID_CUSTOMER_DEMOGRAPHIC_INFORMATION
      - INVALID_INSURANCE_INFORMATION
      - INVALID_DAYS_SUPPLY
      - HARD_FAILURE
      - NEEDS_PRIOR_AUTHORIZATION
      - REFILL_TOO_SOON
      - MANUAL_ADJUDICATION
      type: string
    ClinicalInformationQualifier:
      description: |-
        Qualifies how the PrimaryDiagnosis was obtained.

        `1` - Prescriber/Prescriber Supplied - The diagnosis was given or supplied by the prescriber.

        `2` - Pharmacy Inferred - The pharmacy inferred the diagnosis using their professional judgment.
      enum:
      - "1"
      - "2"
      type: string
    ConditionCodeType:
      description: |-
        Enum representing the type of condition code.

        `ICD10CM` - International Classification of Diseases, Tenth Revision, Clinical Modification (ICD-10-CM) is a
        standardized classification system of diagnosis codes that represent conditions and diseases, related health problems,
        abnormal findings, signs and symptoms, injuries, external causes of injuries and diseases, and social circumstances.
      enum:
      - ICD10CM
      type: string
    ContactInfo:
      description: Structure representing the contact information of the patient.
      example:
        phoneNumber: phoneNumber
        countryCode: 0.8008281904610115
        contactSystemType: Mobile
      properties:
        contactSystemType:
          $ref: "#/components/schemas/ContactSystemType"
        countryCode:
          description: Country code of the phone number
          type: number
        phoneNumber:
          description: Phone number of the patient.
          pattern: "^1?[2-9]\\d{2}[2-9]\\d{6}$"
          type: string
      required:
      - contactSystemType
      - countryCode
      - phoneNumber
      type: object
    ContactSystemType:
      description: |-
        Enum representing the type of contact system.

        `MOBILE` - Mobile phone contact system.

        `HOME` - Home phone contact system.
      enum:
      - Mobile
      - Home
      type: string
    DaysSupplyDetails:
      description: Structure representing the Days Supply details for a rejected claim
      example:
        maximumDaysSupply: 0.8008281904610115
      properties:
        maximumDaysSupply:
          description: This gives information about the maximum days supply allowed
            by Pharmacy Benefit Managers(PBM)
          type: number
      type: object
    DeaSchedule:
      description: |-
        Enum representing the schedule of controlled substances.

        `CLASS_I_DEA_SCHEDULE` - Class I DEA Schedule.

        `CLASS_II_DEA_SCHEDULE` - Class II DEA Schedule.

        `CLASS_III_DEA_SCHEDULE` - Class III DEA Schedule.

        `CLASS_IV_DEA_SCHEDULE` - Class IV DEA Schedule.

        `CLASS_V_DEA_SCHEDULE` - Class V DEA Schedule.
      enum:
      - C48672
      - C48675
      - C48676
      - C48677
      - C48679
      type: string
    Diagnosis:
      description: Structure representing a diagnosis.
      example:
        icd10Code: icd10Code
        description: description
      properties:
        icd10Code:
          description: International Classification of Diseases (ICD 10) Code of the
            diagnosis.
          pattern: "^[A-TV-Za-tv-z][0-9][0-9ABab](?:\\.[0-9A-KXZa-kxz](?:[0-9A-EXYZa-exyz](?:[0-9A-HXa-hx][0-59A-HJKMNP-Sa-hjkmnp-s]?)?)?)?|U07(?:\\\
            .[01])?$"
          type: string
        description:
          description: A human-readable description of the diagnosis.
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
      type: object
    DiagnosisCode:
      example:
        icd10Code: icd10Code
        description: description
      properties:
        icd10Code:
          description: International Classification of Diseases (ICD 10) Code of the
            diagnosis.
          pattern: "^[A-TV-Za-tv-z][0-9][0-9ABab](?:\\.[0-9A-KXZa-kxz](?:[0-9A-EXYZa-exyz](?:[0-9A-HXa-hx][0-59A-HJKMNP-Sa-hjkmnp-s]?)?)?)?|U07(?:\\\
            .[01])?$"
          type: string
        description:
          description: |-
            A string that must contain at least one non-whitespace character, potentially preceded by whitespace.

            Here's how it's checked:
            - '^' asserts the beginning of the string.
            - '\s*' allows any number of whitespace characters at the start of the string, including none.
            - '\S' ensures there is at least one non-whitespace character in the string.
            - '.*$' allows any characters to follow the non-whitespace character, extending to the end of the string.

            This ensures that the string is not entirely whitespace, although it can start with whitespace
            and can contain any characters after the first non-whitespace character.

            Note: This naturally enforces a minimum length of 1 due to 1 non-whitespace character requirement.
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
      required:
      - description
      - icd10Code
      type: object
    DrugDbCode:
      description: Coded Drug Structure used in Medication from alternative source
        databases.
      example:
        code: code
        qualifier: E
      properties:
        code:
          description: |-
            A string that must contain at least one non-whitespace character, potentially preceded by whitespace.

            Here's how it's checked:
            - '^' asserts the beginning of the string.
            - '\s*' allows any number of whitespace characters at the start of the string, including none.
            - '\S' ensures there is at least one non-whitespace character in the string.
            - '.*$' allows any characters to follow the non-whitespace character, extending to the end of the string.

            This ensures that the string is not entirely whitespace, although it can start with whitespace
            and can contain any characters after the first non-whitespace character.

            Note: This naturally enforces a minimum length of 1 due to 1 non-whitespace character requirement.
          pattern: ^\s*\S.*$
          type: string
        qualifier:
          $ref: "#/components/schemas/DrugDbCodeQualifier"
      required:
      - code
      - qualifier
      type: object
    DrugDbCodeQualifier:
      description: |-
        Enum representing the Drug Qualifier

        `E` - Truven/Micromedex Generic Formulation Code (GFC)

        `G` - Truven/Micromedex Generic Master (GM)

        `AF` - American Hospital Formulary Service (AHFS)

        `FG` - First DataBank Clinical Formulation ID Sequence Number(GCN_SEQNO)

        `FS` - First Databank Smartkey

        `MC` - Multum Drug ID

        `MD` - Medi Span's Drug Descriptor ID (DDID)

        `MG` - Medi Span's Generic Product Identifier (GPI)

        `MM` - Multum MMDC

        `FL` - First DataBank Ingredient List ID (HICL_SEQNO)

        `FM` - First DataBank Medication ID (FDB MedID)

        `FN` - First DataBank Medication Name ID (FDB Med Name ID)

        `FD` - First DataBank Routed Dosage Form ID (FDB Routed Dosage Form Med ID)

        `GPK` - RxNorm Generic Package (GPCK)

        `SCD` - RxNorm Semantic Clinical Drug (SCD)

        `BPK` - RxNorm Branded Package (BPCK)

        `SBD` - RxNorm Semantic Branded Drug (SBD)

        `FI` - First DataBank Medication ID (FDB MedID)

        `FR` - First DataBank Routed Medication ID (FDB Routed Med ID)

        `GS` - Gold Standard Product Item Collection

        `GMP` - Gold Standard Marketed Product Identifier (MPid)

        `GPI` - Gold Standard Product Identifier (ProdID)

        `GSP` - Gold Standard Specific Product Identifier (SPID)

        `US` - U.S. Pharmacopoeia (USP)
      enum:
      - E
      - G
      - AF
      - FG
      - FS
      - MC
      - MD
      - MG
      - MM
      - FL
      - FM
      - FN
      - FD
      - GPK
      - SCD
      - BPK
      - SBD
      - FI
      - FR
      - GS
      - GMP
      - GPI
      - GSP
      - US
      type: string
    EntityType:
      description: |-
        Enum representing the different entity types

        `PRESCRIPTION` - Represents the prescription entity

        `ORDER` - Represents the order entity

        `PATIENT` - Represents the patient entity
      enum:
      - prescription
      - order
      - patient
      type: string
    ErrorField:
      description: Structure contains the Error field and error message specific to
        the field.
      example:
        field: field
        message: message
      properties:
        field:
          description: Indicates the field name responsible for the error
          pattern: ^\s*\S.*$
          type: string
        message:
          description: Message describing why the field was invalid
          pattern: ^\s*\S.*$
          type: string
      required:
      - field
      type: object
    EventNotification:
      description: This represents the notification schema
      example:
        eventDatetime: eventDatetime
        entityType: prescription
        entityId: entityId
        eventType: status_change
      properties:
        eventType:
          $ref: "#/components/schemas/EventType"
        eventDatetime:
          description: The date and time of the event
          pattern: "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d{3,9})?(?:Z|[+-]\\\
            d{2}:\\d{2})$"
          type: string
        entityType:
          $ref: "#/components/schemas/EntityType"
        entityId:
          description: |-
            The entity Id of the entity. This will map to the IDs during the Put operation of the entity. For example
               this will map to the partnerPrescriptionId in the Prescription /PUT operation
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
      type: object
    EventType:
      description: |-
        Enum representing the type of event

        `STATUS_CHANGE` - Indicates a change in status of the entity
      enum:
      - status_change
      type: string
    ExistingMedicalConditionsDescriptor:
      description: |-
        Enum representing the descriptor for the patient's existing medical conditions.

        `KNOWN_MEDICAL_CONDITIONS_INCLUDED` - Patient's existing medical conditions are included in the existingMedicalConditions field.

        `PATIENT_HAS_NO_KNOWN_MEDICAL_CONDITIONS` - Patient does not have any known medical conditions.

        `NOT_AVAILABLE` - This should be set when:
        1. Information is not available in the requested format.
        2. Information has not been collected from the patient.
        3. Patient did not provide the information.
        4. Information cannot be provided due to some other reason.
      enum:
      - KNOWN_MEDICAL_CONDITIONS_INCLUDED
      - PATIENT_HAS_NO_KNOWN_MEDICAL_CONDITIONS
      - NOT_AVAILABLE
      type: string
    ExistingMedicalConditionsDetails:
      description: Structure representing the existing medical conditions of the patient.
      example:
        noKnownExistingMedicalConditions: true
        existingMedicalConditions:
        - code: code
          codeType: ICD10CM
          textValue: textValue
        - code: code
          codeType: ICD10CM
          textValue: textValue
        - code: code
          codeType: ICD10CM
          textValue: textValue
        - code: code
          codeType: ICD10CM
          textValue: textValue
        - code: code
          codeType: ICD10CM
          textValue: textValue
        existingMedicalConditionsDescriptor: KNOWN_MEDICAL_CONDITIONS_INCLUDED
      properties:
        noKnownExistingMedicalConditions:
          deprecated: true
          description: |-
            Currently supported but on path to deprecation as we will plan to switch to existingMedicalConditionsDescriptor
            This shape is deprecated since 2024-05-15: Use existingMedicalConditionsDescriptor instead
          type: boolean
        existingMedicalConditions:
          description: "If noKnownExistingConditions is false, conditions is required"
          items:
            $ref: "#/components/schemas/MedicalCondition"
          maxItems: 50
          minItems: 0
          type: array
        existingMedicalConditionsDescriptor:
          $ref: "#/components/schemas/ExistingMedicalConditionsDescriptor"
      type: object
    ExistingMedication:
      description: Structure representing an existing/current medication the patient
        is taking.
      example:
        quantity:
          quantityUnitOfMeasureCode: C62412
          codeListQualifier: "38"
          value: 6.027456183070403
          unitOfMeasureCode: unitOfMeasureCode
        strength:
          formCode: formCode
          strengthFormCode: C78746
          value: value
          unitOfMeasureCode: unitOfMeasureCode
          strengthUnitOfMeasureCode: C70518
        description: description
        ndc: ndc
        rxcui: rxcui
      properties:
        ndc:
          description: "The National Drug Code of the medication, without dashes or\
            \ spaces."
          pattern: "^\\d{11}$"
          type: string
        rxcui:
          description: RxNorm concept unique identifier
          pattern: "^\\d{1,10}$"
          type: string
        description:
          description: Name or description of the drug.
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
        strength:
          $ref: "#/components/schemas/Strength"
        quantity:
          $ref: "#/components/schemas/Quantity"
      required:
      - ndc
      type: object
    ExistingMedicationDetails:
      description: Structure representing the existing medications of the patient.
      example:
        existingMedications:
        - quantity:
            quantityUnitOfMeasureCode: C62412
            codeListQualifier: "38"
            value: 6.027456183070403
            unitOfMeasureCode: unitOfMeasureCode
          strength:
            formCode: formCode
            strengthFormCode: C78746
            value: value
            unitOfMeasureCode: unitOfMeasureCode
            strengthUnitOfMeasureCode: C70518
          description: description
          ndc: ndc
          rxcui: rxcui
        - quantity:
            quantityUnitOfMeasureCode: C62412
            codeListQualifier: "38"
            value: 6.027456183070403
            unitOfMeasureCode: unitOfMeasureCode
          strength:
            formCode: formCode
            strengthFormCode: C78746
            value: value
            unitOfMeasureCode: unitOfMeasureCode
            strengthUnitOfMeasureCode: C70518
          description: description
          ndc: ndc
          rxcui: rxcui
        - quantity:
            quantityUnitOfMeasureCode: C62412
            codeListQualifier: "38"
            value: 6.027456183070403
            unitOfMeasureCode: unitOfMeasureCode
          strength:
            formCode: formCode
            strengthFormCode: C78746
            value: value
            unitOfMeasureCode: unitOfMeasureCode
            strengthUnitOfMeasureCode: C70518
          description: description
          ndc: ndc
          rxcui: rxcui
        - quantity:
            quantityUnitOfMeasureCode: C62412
            codeListQualifier: "38"
            value: 6.027456183070403
            unitOfMeasureCode: unitOfMeasureCode
          strength:
            formCode: formCode
            strengthFormCode: C78746
            value: value
            unitOfMeasureCode: unitOfMeasureCode
            strengthUnitOfMeasureCode: C70518
          description: description
          ndc: ndc
          rxcui: rxcui
        - quantity:
            quantityUnitOfMeasureCode: C62412
            codeListQualifier: "38"
            value: 6.027456183070403
            unitOfMeasureCode: unitOfMeasureCode
          strength:
            formCode: formCode
            strengthFormCode: C78746
            value: value
            unitOfMeasureCode: unitOfMeasureCode
            strengthUnitOfMeasureCode: C70518
          description: description
          ndc: ndc
          rxcui: rxcui
        existingMedicationsDescriptor: EXISTING_MEDICATIONS_INCLUDED
      properties:
        existingMedications:
          description: List of existing medications for the patient.
          items:
            $ref: "#/components/schemas/ExistingMedication"
          maxItems: 100
          minItems: 0
          type: array
        existingMedicationsDescriptor:
          $ref: "#/components/schemas/ExistingMedicationsDescriptor"
      type: object
    ExistingMedicationsDescriptor:
      description: |-
        Enum representing the descriptor for the patient's existing medications.

        `EXISTING_MEDICATIONS_INCLUDED` - Patient's existing medications are included in the existingMedications field.

        `PATIENT_IS_NOT_ON_ANY_MEDICATIONS` - Patient is currently not on any medications.

        `NOT_AVAILABLE` - This should be set when:
        1. Information is not available in the requested format.
        2. Information has not been collected from the patient.
        3. Patient did not provide the information.
        4. Information cannot be provided due to some other reason.
      enum:
      - EXISTING_MEDICATIONS_INCLUDED
      - PATIENT_IS_NOT_ON_ANY_MEDICATIONS
      - NOT_AVAILABLE
      type: string
    FailedRule:
      description: Details of a failed rule
      example:
        ruleType: PAYER_TYPE_RESTRICTION
        message: message
      properties:
        ruleType:
          $ref: "#/components/schemas/InsuranceComplianceRuleType"
        message:
          description: Informational message about the failed rule
          type: string
      required:
      - ruleType
      type: object
    FieldErrors:
      description: |-
        Structure representing fields in error for a rejected claim

        `DemographicErrors` will be present when ClaimRejectionType is INVALID_CUSTOMER_DEMOGRAPHIC_INFORMATION.
        This is when there is mismatch with customer demographic and Insurance demographic data

        `InsuranceErrors` will be present when ClaimRejectionType is INVALID_INSURANCE_INFORMATION
      example:
        demographicErrors:
        - DATE_OF_BIRTH
        - DATE_OF_BIRTH
        insuranceErrors:
        - BIN
        - BIN
      properties:
        demographicErrors:
          description: List of PossibleDemographicFieldsInError enums
          items:
            $ref: "#/components/schemas/PossibleDemographicFieldsInError"
          type: array
        insuranceErrors:
          description: List of PossibleInsuranceFieldsInError enums
          items:
            $ref: "#/components/schemas/PossibleInsuranceFieldsInError"
          type: array
      type: object
    GetOrderResponseContent:
      description: Structure representing the response for getting an order.
      example:
        order:
          statusDescription: statusDescription
          quantityDispensed: 1.4658129805029452
          statusReasonCode: PARTNER_REQUESTED_CANCEL
          partnerPrescriptionId: partnerPrescriptionId
          shipDate: shipDate
          fillNumber: 6.027456183070403
          status: ORDER_CREATED
          additionalOrderDetails:
            shippingDetails:
              carrier: carrier
              estimatedArrival: estimatedArrival
              trackingId: trackingId
            claimRejectedDetails:
              claimRejectionReasons:
              - rejectionTypeDescription: rejectionTypeDescription
                fieldErrors:
                  demographicErrors:
                  - DATE_OF_BIRTH
                  - DATE_OF_BIRTH
                  insuranceErrors:
                  - BIN
                  - BIN
                rejectedInsuranceDetails:
                  payerType: COMMERCIAL
                  binNumber: binNumber
                  payerName: payerName
                  pcn: pcn
                  stateCode: stateCode
                  groupNumber: groupNumber
                claimRejectionType: INVALID_CUSTOMER_DEMOGRAPHIC_INFORMATION
                daysSupplyDetails:
                  maximumDaysSupply: 0.8008281904610115
              - rejectionTypeDescription: rejectionTypeDescription
                fieldErrors:
                  demographicErrors:
                  - DATE_OF_BIRTH
                  - DATE_OF_BIRTH
                  insuranceErrors:
                  - BIN
                  - BIN
                rejectedInsuranceDetails:
                  payerType: COMMERCIAL
                  binNumber: binNumber
                  payerName: payerName
                  pcn: pcn
                  stateCode: stateCode
                  groupNumber: groupNumber
                claimRejectionType: INVALID_CUSTOMER_DEMOGRAPHIC_INFORMATION
                daysSupplyDetails:
                  maximumDaysSupply: 0.8008281904610115
            placeOrderOnDate: placeOrderOnDate
          filledDate: filledDate
      properties:
        order:
          $ref: "#/components/schemas/Order"
      required:
      - order
      type: object
    GetPatientResponseContent:
      description: Structure representing the GetPatient API response.
      example:
        patient:
          statusDescription: statusDescription
          contactInfo:
          - phoneNumber: phoneNumber
            countryCode: 0.8008281904610115
            contactSystemType: Mobile
          - phoneNumber: phoneNumber
            countryCode: 0.8008281904610115
            contactSystemType: Mobile
          - phoneNumber: phoneNumber
            countryCode: 0.8008281904610115
            contactSystemType: Mobile
          - phoneNumber: phoneNumber
            countryCode: 0.8008281904610115
            contactSystemType: Mobile
          - phoneNumber: phoneNumber
            countryCode: 0.8008281904610115
            contactSystemType: Mobile
          statusReasonCode: INVALID_INSURANCE
          residentialAddress:
            zipCode: zipCode
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
          name:
            firstName: firstName
            lastName: lastName
            prefix: prefix
            middleName: middleName
            suffix: suffix
          sexAssignedAtBirth: Female
          dateOfBirth: dateOfBirth
          email: email
          status: PATIENT_RECEIVED
      properties:
        patient:
          $ref: "#/components/schemas/Patient"
      required:
      - patient
      type: object
    GetPrescriptionResponseContent:
      description: Structure representing the response for getting a prescription.
      example:
        prescription:
          rxNumber: rxNumber
          prescriber:
            primaryTelephone: primaryTelephone
            deaNumber: deaNumber
            npi: npi
            prescriberName:
              firstName: firstName
              lastName: lastName
              prefix: prefix
              middleName: middleName
              suffix: suffix
            businessName: businessName
            stateLicenseNumber: stateLicenseNumber
            fax: fax
            prescriberAddress:
              zipCode: zipCode
              city: city
              countryCode: countryCode
              addressLine1: addressLine1
              addressLine2: addressLine2
              state: state
          daysSupply: 5.962133916683182
          transferRequestStatus: TRANSFER_INITIATED
          ndc: ndc
          refillsRemaining: 6.027456183070403
          drugUnits: drugUnits
          refillsAuthorized: 0.8008281904610115
          statusDescription: statusDescription
          amazonPharmacy:
            pharmacyAddress:
              zipCode: zipCode
              city: city
              countryCode: countryCode
              addressLine1: addressLine1
              addressLine2: addressLine2
              state: state
            ncpdpId: ncpdpId
            primaryTelephone: primaryTelephone
            deaNumber: deaNumber
            npi: npi
            pharmacyName: pharmacyName
            pharmacistName:
              firstName: firstName
              lastName: lastName
              prefix: prefix
              middleName: middleName
              suffix: suffix
            fax: fax
          totalQuantityRemaining:
            quantityUnitOfMeasureCode: C62412
            codeListQualifier: "38"
            value: 6.027456183070403
            unitOfMeasureCode: unitOfMeasureCode
          fillsRemaining: 1.4658129805029452
          fills:
          - dateCreated: dateCreated
            quantity:
              quantityUnitOfMeasureCode: C62412
              codeListQualifier: "38"
              value: 6.027456183070403
              unitOfMeasureCode: unitOfMeasureCode
            dateComplete: dateComplete
            daysSupply: 2.3021358869347655
            datePurchased: datePurchased
            fillNumber: 5.637376656633329
            status: PENDING
          - dateCreated: dateCreated
            quantity:
              quantityUnitOfMeasureCode: C62412
              codeListQualifier: "38"
              value: 6.027456183070403
              unitOfMeasureCode: unitOfMeasureCode
            dateComplete: dateComplete
            daysSupply: 2.3021358869347655
            datePurchased: datePurchased
            fillNumber: 5.637376656633329
            status: PENDING
          status: PRESCRIPTION_RECEIVED
        partnerPrescriptionId: partnerPrescriptionId
      properties:
        prescription:
          $ref: "#/components/schemas/Prescription"
        partnerPrescriptionId:
          description: The partner Prescription ID of the requested prescription.
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
      required:
      - partnerPrescriptionId
      - prescription
      type: object
    Insurance:
      description: Structure representing insurance information associated with the
        patient.
      example:
        cardholderId: cardholderId
        encryptedCardholderId: encryptedCardholderId
        binNumber: binNumber
        relationshipCode: NOT_SPECIFIED
        groupNumber: groupNumber
        partnerInsuranceId: partnerInsuranceId
        personCode: personCode
        expiryDate: expiryDate
        payerType: COMMERCIAL
        payerName: payerName
        pcn: pcn
        stateCode: stateCode
        startDate: startDate
      properties:
        pcn:
          description: |-
            Processor Control Number assigned by the processor. PBMs use it to distinguish between plans.
            It's a secondary identifier used in addition to the binNumber.
          maxLength: 10
          minLength: 1
          pattern: "^[a-zA-Z0-9 ]+$"
          type: string
        groupNumber:
          description: The insurance group number found on the insurance card that
            signifies which group the cardholder belongs to.
          maxLength: 35
          pattern: ^\s*\S.*$
          type: string
        binNumber:
          description: A 6-digit number that identifies the Pharmacy Benefit Manager
            (PBM) that this insurance uses for pharmacy claims.
          maxLength: 6
          minLength: 6
          pattern: "^\\d{6}$"
          type: string
        payerType:
          $ref: "#/components/schemas/PayerType"
        payerName:
          description: The name of the payer associated with the insurance plan.
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
        stateCode:
          description: "Optional state code related to the insurance plan, used for\
            \ state-specific insurance information."
          maxLength: 2
          minLength: 2
          type: string
        personCode:
          description: |-
            Insurance coverages are shared between family members. Each person code identifies a covered individual family member.
            The primary insurance holder is often 01 or 001.
          maxLength: 3
          minLength: 1
          pattern: "^[0-9]*$"
          type: string
        relationshipCode:
          $ref: "#/components/schemas/PatientRelationship"
        startDate:
          description: Start date for the insurance coverage. This indicates when
            the insurance coverage begins.
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        expiryDate:
          description: Expiration date for the insurance coverage. This indicates
            when the insurance will no longer be valid.
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        cardholderId:
          description: |-
            The memberId of this person's insurance information.
            It includes their suffix and is the primary identifier for their insurance coverage.
            Must be alphanumeric and between 1 to 20 characters.
          maxLength: 20
          minLength: 1
          pattern: "^[a-zA-Z0-9-]*$"
          type: string
        partnerInsuranceId:
          description: A unique identifier to identify the partner-provided insurance.
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
        encryptedCardholderId:
          deprecated: true
          description: |-
            Deprecated, use cardholderId instead.
            One of unencrypted or encrypted cardholder is required.
            Insurance card number encrypted using the patient-information-encryption-key.
            The unencrypted value cannot exceed 20 characters.

            This shape is deprecated.
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
      required:
      - binNumber
      - partnerInsuranceId
      - personCode
      type: object
    InsuranceComplianceExceptionResponseContent:
      description: Exception thrown when insurance combination violates compliance
        rules
      example:
        message: message
        failedRules:
        - ruleType: PAYER_TYPE_RESTRICTION
          message: message
        - ruleType: PAYER_TYPE_RESTRICTION
          message: message
      properties:
        failedRules:
          description: List of specific rules that were violated
          items:
            $ref: "#/components/schemas/FailedRule"
          type: array
        message:
          description: Informational message about the insurance compliance exception
          maxLength: 1024
          pattern: ^\s*\S.*$
          type: string
      required:
      - failedRules
      - message
      type: object
    InsuranceComplianceRuleType:
      description: |-
        Compliance rules for validating insurance combinations and usage

        `PAYER_TYPE_RESTRICTION` - Validates allowed combinations of different insurance types. Enforces restrictions between:

                - Commercial and discount plans

                - Government insurances (Medicare, Medicaid, Other)

                - Discount and copay programs
        `GENERIC_DRUG_RESTRICTION` - Enforces copay card restrictions for generic drugs. Prevents copay card usage with generic medications. Applies to both primary and secondary positions

        `GOVERNMENT_INSURANCE_COPAY_RESTRICTION` - Prevents copay card usage when any government insurance exists. Applies to Medicare, Medicaid, and other government plans. Restricts copay cards in both primary and secondary positions
      enum:
      - PAYER_TYPE_RESTRICTION
      - GENERIC_DRUG_RESTRICTION
      - GOVERNMENT_INSURANCE_COPAY_RESTRICTION
      type: string
    InternalServerExceptionResponseContent:
      description: |-
        This exception is thrown when the service encounters an internal exception while processing the request.
        This is a retriable exception.
      example:
        message: message
      properties:
        message:
          description: A human-readable message describing the internal server exception
            usually due to an internal failure in the Amazon Pharmacy service.
          maxLength: 1024
          pattern: ^\s*\S.*$
          type: string
      required:
      - message
      type: object
    InvalidInputErrorCode:
      description: |-
        Enum representing the different error codes for the input invalid exception failures.

        `INVALID_BILLING_ADDRESS`: The provided billing address failed Amazon API address Validation
        `INCORRECT_COMBINATION_OF_INSURANCES_PROVIDED` : Incorrect combination of Insurance and co-pay cards have been provided.
      enum:
      - INVALID_BILLING_ADDRESS
      - INCORRECT_COMBINATION_OF_INSURANCES_PROVIDED
      type: string
    InvalidInputExceptionResponseContent:
      description: |-
        This exception is thrown on receiving an invalid request which cannot be processed by the service.
        The server cannot or will not process the request due to something that is perceived to be a client error.
      example:
        errorCode: INVALID_BILLING_ADDRESS
        errorFieldList:
        - field: field
          message: message
        - field: field
          message: message
        message: message
      properties:
        message:
          description: |-
            A human-readable message describing the invalid input exception.
            Usually this is due to invalid or out-of-range value was supplied for an input parameter
          maxLength: 1024
          pattern: ^\s*\S.*$
          type: string
        errorCode:
          $ref: "#/components/schemas/InvalidInputErrorCode"
        errorFieldList:
          description: "List of fields responsible for the error, if applicable."
          items:
            $ref: "#/components/schemas/ErrorField"
          type: array
      required:
      - message
      type: object
    Measurement:
      example:
        vitalSign: HEIGHT
        observationDate: observationDate
        measurementUnitOfMeasure: measurementUnitOfMeasure
        value: value
      properties:
        vitalSign:
          $ref: "#/components/schemas/VitalSign"
        value:
          description: The empirical value of the vital sign observed
          maxLength: 18
          minLength: 1
          pattern: "^([!-~]|[ ])*[!-~]([!-~]|[ ])*$"
          type: string
        measurementUnitOfMeasure:
          description: "The unit of measurement for the vital sign (e.g., kg, cm)"
          pattern: "^([!-~]|[ ])*[!-~]([!-~]|[ ])*$"
          type: string
        observationDate:
          description: Date on which observation was recorded
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
      required:
      - measurementUnitOfMeasure
      - observationDate
      - value
      - vitalSign
      type: object
    MedicalCondition:
      description: Structure representing a medical condition of the patient.
      example:
        code: code
        codeType: ICD10CM
        textValue: textValue
      properties:
        code:
          description: Patient's condition code. Condition code should follow the
            ConditionCodeType input's standard code format.
          pattern: "^[A-TV-Za-tv-z][0-9][0-9ABab](?:\\.[0-9A-KXZa-kxz](?:[0-9A-EXYZa-exyz](?:[0-9A-HXa-hx][0-59A-HJKMNP-Sa-hjkmnp-s]?)?)?)?|U07(?:\\\
            .[01])?$"
          type: string
        codeType:
          $ref: "#/components/schemas/ConditionCodeType"
        textValue:
          description: A human-readable text value of the medical condition.
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
      required:
      - code
      - codeType
      type: object
    MedicalDiagnosis:
      example:
        secondary:
          icd10Code: icd10Code
          description: description
        clinicalInformationQualifier: "1"
        primary:
          icd10Code: icd10Code
          description: description
      properties:
        clinicalInformationQualifier:
          $ref: "#/components/schemas/ClinicalInformationQualifier"
        primary:
          $ref: "#/components/schemas/DiagnosisCode"
        secondary:
          $ref: "#/components/schemas/DiagnosisCode"
      required:
      - clinicalInformationQualifier
      - primary
      type: object
    MedicationPrescribed:
      description: Structure representing the details of the medication prescribed.
      example:
        numberOfRefills: 6.027456183070403
        note: note
        quantity:
          quantityUnitOfMeasureCode: C62412
          codeListQualifier: "38"
          value: 6.027456183070403
          unitOfMeasureCode: unitOfMeasureCode
        strength:
          formCode: formCode
          strengthFormCode: C78746
          value: value
          unitOfMeasureCode: unitOfMeasureCode
          strengthUnitOfMeasureCode: C70518
        daysSupply: 0.8008281904610115
        firstFillDate: firstFillDate
        drugDbCode:
          code: code
          qualifier: E
        deaSchedule: C48672
        diagnosis:
        - icd10Code: icd10Code
          description: description
        - icd10Code: icd10Code
          description: description
        ndc: ndc
        medicalDiagnosis:
          secondary:
            icd10Code: icd10Code
            description: description
          clinicalInformationQualifier: "1"
          primary:
            icd10Code: icd10Code
            description: description
        drugDescription: drugDescription
        rxcui: rxcui
        lastFillDate: lastFillDate
        labelerName: labelerName
        directions: directions
        dispenseAsWritten: dispenseAsWritten
        writtenDate: writtenDate
        effectiveDate: effectiveDate
        expirationDate: expirationDate
      properties:
        drugDescription:
          description: Name or description of the medication being prescribed.
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
        labelerName:
          description: Drug labeler/manufacturer name.
          pattern: ^\s*\S.*$
          type: string
        quantity:
          $ref: "#/components/schemas/Quantity"
        strength:
          $ref: "#/components/schemas/Strength"
        daysSupply:
          description: Estimated number of days a prescription would last.
          format: double
          type: number
        writtenDate:
          description: "The date on which the prescriber wrote the prescription, quoted\
            \ in the format 'YYYY-MM-DD'."
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        numberOfRefills:
          description: The number of refills allowed for this prescription excluding
            the first fill.
          format: double
          type: number
        directions:
          description: "Clinical directions meaningful to the patient as written by\
            \ the prescriber, e.g., 'Take 1 tablet by mouth once weekly.'"
          type: string
        ndc:
          description: "The National Drug Code of the medication, without dashes or\
            \ spaces."
          pattern: "^\\d{11}$"
          type: string
        rxcui:
          deprecated: true
          description: |-
            RxNorm concept unique identifier.
            This shape is deprecated: RxNorm codes are included in drugDbCode field. This field will no longer be supported starting from 2025-03-12.
          pattern: "^\\d{1,10}$"
          type: string
        drugDbCode:
          $ref: "#/components/schemas/DrugDbCode"
        dispenseAsWritten:
          description: |-
            An indicator that the prescriber has instructed to dispense as written (DAW) code.
            This is typically used when a brand is chosen over a generic alternative based on the direction of the prescriber.
            0 means no DAW is specified
            1 means by prescriber
            2 means a patient/user request
            9 means other.
          pattern: "^[0-9]$"
          type: string
        effectiveDate:
          description: "The date on which the user is intended to start the prescription,\
            \ quoted in the format 'YYYY-MM-DD'."
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        expirationDate:
          description: "The date on which the prescription expires, quoted in the\
            \ format 'YYYY-MM-DD'."
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        deaSchedule:
          $ref: "#/components/schemas/DeaSchedule"
        diagnosis:
          deprecated: true
          description: |-
            Medical diagnosis information for which the patient is prescribed.
            First item is the Primary Diagnosis, second is Secondary.

            This shape is deprecated: This field will be replaced by `medicalDiagnosis`. This field will no longer be supported starting from 2025-03-12
          items:
            $ref: "#/components/schemas/Diagnosis"
          maxItems: 2
          minItems: 0
          type: array
        medicalDiagnosis:
          $ref: "#/components/schemas/MedicalDiagnosis"
        firstFillDate:
          deprecated: true
          description: |-
            The firstFillDate field is deprecated here and will be part of PrescriptionTransferred structure instead.
            The date on which the prescription was first filled by the pharmacy, in the format 'YYYY-MM-DD'.
            This date helps track the initial dispensing of the medication to the patient.

            This shape is deprecated: This field is moved to the `PrescriptionTransferred` data structure. It will no longer be available here.
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        lastFillDate:
          deprecated: true
          description: |-
            The lastFillDate field is deprecated here and will be part of PrescriptionTransferred structure instead.
            The date on which the prescription was most recently filled by the pharmacy, in the format 'YYYY-MM-DD'.
            This date helps track the latest dispensing of the medication and is useful for monitoring adherence and refill patterns.

            This shape is deprecated: This field is moved to the `PrescriptionTransferred` data structure. It will no longer be available here.
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        note:
          description: Additional information on the Patient or Prescription provided
            by the Prescriber.
          pattern: ^\s*\S.*$
          type: string
      required:
      - directions
      - dispenseAsWritten
      - drugDescription
      - ndc
      - numberOfRefills
      - quantity
      - writtenDate
      type: object
    Name:
      description: Structure representing the name of a person.
      example:
        firstName: firstName
        lastName: lastName
        prefix: prefix
        middleName: middleName
        suffix: suffix
      properties:
        firstName:
          description: The first name of the person.
          maxLength: 255
          pattern: "^(?=\\s*\\S)([\\sa-zA-Z0-9\\u00C0-\\u00FF.,/#!?$€￦￥￡₽¢^*;:{}=|\\\
            \\\\-\\[\\]+_`~()@']+)$"
          type: string
        middleName:
          description: The middle name of the person.
          maxLength: 255
          pattern: "^(?=\\s*\\S)([\\sa-zA-Z0-9\\u00C0-\\u00FF.,/#!?$€￦￥￡₽¢^*;:{}=|\\\
            \\\\-\\[\\]+_`~()@']+)$"
          type: string
        lastName:
          description: The last name of the person.
          maxLength: 255
          pattern: "^(?=\\s*\\S)([\\sa-zA-Z0-9\\u00C0-\\u00FF.,/#!?$€￦￥￡₽¢^*;:{}=|\\\
            \\\\-\\[\\]+_`~()@']+)$"
          type: string
        suffix:
          description: "The suffix of the person's name (e.g., Jr., Sr., III)."
          maxLength: 4
          pattern: ^\s*\S.*$
          type: string
        prefix:
          description: "The prefix of the person's name (e.g., Dr., Mr., Mrs.)."
          maxLength: 10
          pattern: ^\s*\S.*$
          type: string
      required:
      - firstName
      - lastName
      type: object
    Observation:
      example:
        observationNotes: observationNotes
        measurement:
        - vitalSign: HEIGHT
          observationDate: observationDate
          measurementUnitOfMeasure: measurementUnitOfMeasure
          value: value
        - vitalSign: HEIGHT
          observationDate: observationDate
          measurementUnitOfMeasure: measurementUnitOfMeasure
          value: value
        - vitalSign: HEIGHT
          observationDate: observationDate
          measurementUnitOfMeasure: measurementUnitOfMeasure
          value: value
        - vitalSign: HEIGHT
          observationDate: observationDate
          measurementUnitOfMeasure: measurementUnitOfMeasure
          value: value
        - vitalSign: HEIGHT
          observationDate: observationDate
          measurementUnitOfMeasure: measurementUnitOfMeasure
          value: value
      properties:
        measurement:
          description: Used to record patient's vital signs such as weight and height
          items:
            $ref: "#/components/schemas/Measurement"
          maxItems: 10
          type: array
        observationNotes:
          description: Additional notes or comments related to the vital sign observations
          maxLength: 140
          minLength: 1
          type: string
      type: object
    Order:
      description: Structure representing an order.
      example:
        statusDescription: statusDescription
        quantityDispensed: 1.4658129805029452
        statusReasonCode: PARTNER_REQUESTED_CANCEL
        partnerPrescriptionId: partnerPrescriptionId
        shipDate: shipDate
        fillNumber: 6.027456183070403
        status: ORDER_CREATED
        additionalOrderDetails:
          shippingDetails:
            carrier: carrier
            estimatedArrival: estimatedArrival
            trackingId: trackingId
          claimRejectedDetails:
            claimRejectionReasons:
            - rejectionTypeDescription: rejectionTypeDescription
              fieldErrors:
                demographicErrors:
                - DATE_OF_BIRTH
                - DATE_OF_BIRTH
                insuranceErrors:
                - BIN
                - BIN
              rejectedInsuranceDetails:
                payerType: COMMERCIAL
                binNumber: binNumber
                payerName: payerName
                pcn: pcn
                stateCode: stateCode
                groupNumber: groupNumber
              claimRejectionType: INVALID_CUSTOMER_DEMOGRAPHIC_INFORMATION
              daysSupplyDetails:
                maximumDaysSupply: 0.8008281904610115
            - rejectionTypeDescription: rejectionTypeDescription
              fieldErrors:
                demographicErrors:
                - DATE_OF_BIRTH
                - DATE_OF_BIRTH
                insuranceErrors:
                - BIN
                - BIN
              rejectedInsuranceDetails:
                payerType: COMMERCIAL
                binNumber: binNumber
                payerName: payerName
                pcn: pcn
                stateCode: stateCode
                groupNumber: groupNumber
              claimRejectionType: INVALID_CUSTOMER_DEMOGRAPHIC_INFORMATION
              daysSupplyDetails:
                maximumDaysSupply: 0.8008281904610115
          placeOrderOnDate: placeOrderOnDate
        filledDate: filledDate
      properties:
        status:
          $ref: "#/components/schemas/OrderStatus"
        partnerPrescriptionId:
          description: The partner ID of the prescription this order is associated
            with.
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
        statusReasonCode:
          $ref: "#/components/schemas/OrderStatusReasonCode"
        statusDescription:
          description: A more detailed explanation of the order's status.
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
        additionalOrderDetails:
          $ref: "#/components/schemas/AdditionalOrderDetails"
        filledDate:
          description: "The date the fill was created, in the format 'YYYY-MM-DD'."
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        shipDate:
          description: "The date the fill was shipped, in the format 'YYYY-MM-DD'."
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        fillNumber:
          description: The number of times this prescription has been filled.
          type: number
        quantityDispensed:
          description: The number of units in dispense.
          type: number
      required:
      - partnerPrescriptionId
      - status
      type: object
    OrderInsurance:
      description: Structure representing insurance information associated with the
        patient.
      example:
        expiryDate: expiryDate
        payerType: COMMERCIAL
        cardholderId: cardholderId
        binNumber: binNumber
        payerName: payerName
        pcn: pcn
        stateCode: stateCode
        relationshipCode: NOT_SPECIFIED
        groupNumber: groupNumber
        personCode: personCode
        startDate: startDate
      properties:
        pcn:
          description: |-
            Processor Control Number assigned by the processor. PBMs use it to distinguish between plans.
            It's a secondary identifier used in addition to the binNumber.
          maxLength: 10
          minLength: 1
          pattern: "^[a-zA-Z0-9 ]+$"
          type: string
        groupNumber:
          description: The insurance group number found on the insurance card that
            signifies which group the cardholder belongs to.
          maxLength: 35
          pattern: ^\s*\S.*$
          type: string
        binNumber:
          description: A 6-digit number that identifies the Pharmacy Benefit Manager
            (PBM) that this insurance uses for pharmacy claims.
          maxLength: 6
          minLength: 6
          pattern: "^\\d{6}$"
          type: string
        payerType:
          $ref: "#/components/schemas/PayerType"
        payerName:
          description: The name of the payer associated with the insurance plan.
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
        stateCode:
          description: "Optional state code related to the insurance plan, used for\
            \ state-specific insurance information."
          maxLength: 2
          minLength: 2
          type: string
        personCode:
          description: |-
            Insurance coverages are shared between family members. Each person code identifies a covered individual family member.
            The primary insurance holder is often 01 or 001.
          maxLength: 3
          minLength: 1
          pattern: "^[0-9]*$"
          type: string
        relationshipCode:
          $ref: "#/components/schemas/PatientRelationship"
        startDate:
          description: Start date for the insurance coverage. This indicates when
            the insurance coverage begins.
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        expiryDate:
          description: Expiration date for the insurance coverage. This indicates
            when the insurance will no longer be valid.
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        cardholderId:
          description: |-
            The memberId of this person's insurance information.
            It includes their suffix and is the primary identifier for their insurance coverage.
            Must be alphanumeric and between 1 to 20 characters.
          maxLength: 20
          minLength: 1
          pattern: "^[a-zA-Z0-9-]*$"
          type: string
      required:
      - binNumber
      - personCode
      type: object
    OrderInsuranceDetails:
      description: |-
        Structure containing primary and secondary insurance details for the patient.
            This structure is used in cases where the partner provides insurance information with the order request.
      example:
        secondary:
          expiryDate: expiryDate
          payerType: COMMERCIAL
          cardholderId: cardholderId
          binNumber: binNumber
          payerName: payerName
          pcn: pcn
          stateCode: stateCode
          relationshipCode: NOT_SPECIFIED
          groupNumber: groupNumber
          personCode: personCode
          startDate: startDate
        primary:
          expiryDate: expiryDate
          payerType: COMMERCIAL
          cardholderId: cardholderId
          binNumber: binNumber
          payerName: payerName
          pcn: pcn
          stateCode: stateCode
          relationshipCode: NOT_SPECIFIED
          groupNumber: groupNumber
          personCode: personCode
          startDate: startDate
      properties:
        primary:
          $ref: "#/components/schemas/OrderInsurance"
        secondary:
          $ref: "#/components/schemas/OrderInsurance"
      required:
      - primary
      type: object
    OrderStatus:
      description: |-
        Enum representing the order status.

        `ORDER_CREATED` - The order for the medication has been placed on Amazon.

        `ORDER_CANCELLED` - The order was cancelled by the partner using the CancelPartnerOrder API.

        `ORDER_FAILED` - The order has failed due to the reason specified in the OrderStatusReasonCode.

        `ORDER_ON_HOLD` - The payment for the order was soft-declined, and the payment processing will be retried after some time.

        `ORDER_PROCESSING` - The order is being actively worked on by the fulfillment team.

        `ORDER_RECEIVED` - The order request has been accepted by Amazon.

        `ORDER_SHIPPED` - The order has been shipped and is on its way to the customer.
      enum:
      - ORDER_CREATED
      - ORDER_CANCELLED
      - ORDER_FAILED
      - ORDER_ON_HOLD
      - ORDER_PROCESSING
      - ORDER_RECEIVED
      - ORDER_SHIPPED
      type: string
    OrderStatusReasonCode:
      description: |-
        Enum representing the OrderStatusReasonCodes associated with the partner order status.

        `PARTNER_REQUESTED_CANCEL` - The partner requested to cancel the order.

        `CUSTOMER_SERVICE_REQUESTED_CANCEL` - The customer service requested to cancel the order due to an issue during order processing.

        `COPAY_DISCREPANCY` - There was a discrepancy in the copay amount. The actual copay was greater than the quoted copay.

        `OUT_OF_STOCK` - The medication was out of stock.

        `CLAIM_REJECTED` - The claim for the order was rejected. The description will contain the NCPDP rejection code followed by a readable description of the reject code formatted as: {ncpdp-reject-code}: {reject_reason_description}.
        Check AdditionalOrderDetails to see Claim rejected details.

        `PHARMACY_PROFILE_INACTIVE` - The pharmacy profile for this order is inactive.

        `PHARMACY_PROFILE_INCOMPLETE` - The pharmacy profile for this order is incomplete.

        `NO_FILLABLE_PRESCRIPTION` - There is no fillable prescription for this order.

        `PAYMENT_DECLINED` - The payment for the order was hard-declined.

        `INVALID_DELIVERY_ADDRESS` - The address is not valid, e.g. Amazon Pharmacy does not deliver to PO Boxes.

        `INTERNAL_ERROR` - An internal error occurred during order processing.

        `MISSING_PAYMENT_METHOD` - The actual copay was greater than the quoted copay, and the payment method is missing.

        `PENDING_PAYMENT_METHOD_AND_CHECKOUT_FROM_CUSTOMER` - Pending payment method and checkout from the customer.

        `TAXABLE_STATE_WITH_NO_PAYMENT_METHOD` - Need a payment method for the prescription from taxable states even with zero copay.

        `COPAY_DISCREPANCY_DUE_TO_GOVERNMENT_INSURANCE_ON_FILE` - Copay card cannot not be applied as there exists a government insurance on file.

        `COPAY_DISCREPANCY_DUE_TO_POTENTIAL_GOVERNMENT_INSURANCE_ON_FILE` - Potential government insurance on file, Copay card cannot be applied.
      enum:
      - PARTNER_REQUESTED_CANCEL
      - CUSTOMER_SERVICE_REQUESTED_CANCEL
      - COPAY_DISCREPANCY
      - OUT_OF_STOCK
      - CLAIM_REJECTED
      - PHARMACY_PROFILE_INACTIVE
      - PHARMACY_PROFILE_INCOMPLETE
      - NO_FILLABLE_PRESCRIPTION
      - PAYMENT_DECLINED
      - INVALID_DELIVERY_ADDRESS
      - INTERNAL_ERROR
      - MISSING_PAYMENT_METHOD
      - PENDING_PAYMENT_METHOD_AND_CHECKOUT_FROM_CUSTOMER
      - TAXABLE_STATE_WITH_NO_PAYMENT_METHOD
      - COPAY_DISCREPANCY_DUE_TO_GOVERNMENT_INSURANCE_ON_FILE
      - COPAY_DISCREPANCY_DUE_TO_POTENTIAL_GOVERNMENT_INSURANCE_ON_FILE
      type: string
    Patient:
      description: Structure representing patient details surfaced via the GetPatient
        API response.
      example:
        statusDescription: statusDescription
        contactInfo:
        - phoneNumber: phoneNumber
          countryCode: 0.8008281904610115
          contactSystemType: Mobile
        - phoneNumber: phoneNumber
          countryCode: 0.8008281904610115
          contactSystemType: Mobile
        - phoneNumber: phoneNumber
          countryCode: 0.8008281904610115
          contactSystemType: Mobile
        - phoneNumber: phoneNumber
          countryCode: 0.8008281904610115
          contactSystemType: Mobile
        - phoneNumber: phoneNumber
          countryCode: 0.8008281904610115
          contactSystemType: Mobile
        statusReasonCode: INVALID_INSURANCE
        residentialAddress:
          zipCode: zipCode
          city: city
          countryCode: countryCode
          addressLine1: addressLine1
          addressLine2: addressLine2
          state: state
        name:
          firstName: firstName
          lastName: lastName
          prefix: prefix
          middleName: middleName
          suffix: suffix
        sexAssignedAtBirth: Female
        dateOfBirth: dateOfBirth
        email: email
        status: PATIENT_RECEIVED
      properties:
        status:
          $ref: "#/components/schemas/PatientStatus"
        statusReasonCode:
          $ref: "#/components/schemas/PatientStatusReasonCode"
        statusDescription:
          description: A human-readable description of the patient's status.
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
        name:
          $ref: "#/components/schemas/Name"
        dateOfBirth:
          description: Patient's date of birth in the format 'yyyy-mm-dd'.
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        sexAssignedAtBirth:
          $ref: "#/components/schemas/SexAssignedAtBirth"
        contactInfo:
          description: List of contact information of the patient.
          items:
            $ref: "#/components/schemas/ContactInfo"
          maxItems: 5
          minItems: 1
          type: array
        residentialAddress:
          $ref: "#/components/schemas/Address"
        email:
          description: Email address of the patient.
          maxLength: 255
          minLength: 5
          pattern: "^([a-zA-Z0-9_\\.\\-\\+])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$"
          type: string
      required:
      - contactInfo
      - dateOfBirth
      - name
      - residentialAddress
      - sexAssignedAtBirth
      - status
      type: object
    PatientDetails:
      description: Structure representing Patient details obtained via the PutPatient
        API request.
      example:
        existingMedicationDetails:
          existingMedications:
          - quantity:
              quantityUnitOfMeasureCode: C62412
              codeListQualifier: "38"
              value: 6.027456183070403
              unitOfMeasureCode: unitOfMeasureCode
            strength:
              formCode: formCode
              strengthFormCode: C78746
              value: value
              unitOfMeasureCode: unitOfMeasureCode
              strengthUnitOfMeasureCode: C70518
            description: description
            ndc: ndc
            rxcui: rxcui
          - quantity:
              quantityUnitOfMeasureCode: C62412
              codeListQualifier: "38"
              value: 6.027456183070403
              unitOfMeasureCode: unitOfMeasureCode
            strength:
              formCode: formCode
              strengthFormCode: C78746
              value: value
              unitOfMeasureCode: unitOfMeasureCode
              strengthUnitOfMeasureCode: C70518
            description: description
            ndc: ndc
            rxcui: rxcui
          - quantity:
              quantityUnitOfMeasureCode: C62412
              codeListQualifier: "38"
              value: 6.027456183070403
              unitOfMeasureCode: unitOfMeasureCode
            strength:
              formCode: formCode
              strengthFormCode: C78746
              value: value
              unitOfMeasureCode: unitOfMeasureCode
              strengthUnitOfMeasureCode: C70518
            description: description
            ndc: ndc
            rxcui: rxcui
          - quantity:
              quantityUnitOfMeasureCode: C62412
              codeListQualifier: "38"
              value: 6.027456183070403
              unitOfMeasureCode: unitOfMeasureCode
            strength:
              formCode: formCode
              strengthFormCode: C78746
              value: value
              unitOfMeasureCode: unitOfMeasureCode
              strengthUnitOfMeasureCode: C70518
            description: description
            ndc: ndc
            rxcui: rxcui
          - quantity:
              quantityUnitOfMeasureCode: C62412
              codeListQualifier: "38"
              value: 6.027456183070403
              unitOfMeasureCode: unitOfMeasureCode
            strength:
              formCode: formCode
              strengthFormCode: C78746
              value: value
              unitOfMeasureCode: unitOfMeasureCode
              strengthUnitOfMeasureCode: C70518
            description: description
            ndc: ndc
            rxcui: rxcui
          existingMedicationsDescriptor: EXISTING_MEDICATIONS_INCLUDED
        existingMedicalConditionDetails:
          noKnownExistingMedicalConditions: true
          existingMedicalConditions:
          - code: code
            codeType: ICD10CM
            textValue: textValue
          - code: code
            codeType: ICD10CM
            textValue: textValue
          - code: code
            codeType: ICD10CM
            textValue: textValue
          - code: code
            codeType: ICD10CM
            textValue: textValue
          - code: code
            codeType: ICD10CM
            textValue: textValue
          existingMedicalConditionsDescriptor: KNOWN_MEDICAL_CONDITIONS_INCLUDED
        contactInfo:
        - phoneNumber: phoneNumber
          countryCode: 0.8008281904610115
          contactSystemType: Mobile
        - phoneNumber: phoneNumber
          countryCode: 0.8008281904610115
          contactSystemType: Mobile
        - phoneNumber: phoneNumber
          countryCode: 0.8008281904610115
          contactSystemType: Mobile
        - phoneNumber: phoneNumber
          countryCode: 0.8008281904610115
          contactSystemType: Mobile
        - phoneNumber: phoneNumber
          countryCode: 0.8008281904610115
          contactSystemType: Mobile
        gender: gender
        smsConsent: true
        name:
          firstName: firstName
          lastName: lastName
          prefix: prefix
          middleName: middleName
          suffix: suffix
        sexAssignedAtBirth: Female
        pregnancyStatus: PREGNANT
        dateOfBirth: dateOfBirth
        allergyDetails:
          noKnownAllergies: true
          allergies:
          - code: code
            codeType: SNOMEDCT
            textValue: textValue
          - code: code
            codeType: SNOMEDCT
            textValue: textValue
          - code: code
            codeType: SNOMEDCT
            textValue: textValue
          - code: code
            codeType: SNOMEDCT
            textValue: textValue
          - code: code
            codeType: SNOMEDCT
            textValue: textValue
          allergiesDescriptor: KNOWN_ALLERGIES_INCLUDED
        email: email
      properties:
        name:
          $ref: "#/components/schemas/Name"
        dateOfBirth:
          description: Patient's date of birth in the format 'yyyy-mm-dd'.
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        sexAssignedAtBirth:
          $ref: "#/components/schemas/SexAssignedAtBirth"
        contactInfo:
          description: List of contact information of the patient.
          items:
            $ref: "#/components/schemas/ContactInfo"
          maxItems: 5
          minItems: 1
          type: array
        gender:
          description: Gender of the patient.
          type: string
        email:
          description: Email address of the patient.
          maxLength: 255
          minLength: 5
          pattern: "^([a-zA-Z0-9_\\.\\-\\+])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$"
          type: string
        smsConsent:
          description: Patient's consent to receive SMS notifications for signup and
            other communication.
          type: boolean
        allergyDetails:
          $ref: "#/components/schemas/AllergyDetails"
        existingMedicalConditionDetails:
          $ref: "#/components/schemas/ExistingMedicalConditionsDetails"
        pregnancyStatus:
          $ref: "#/components/schemas/PregnancyStatus"
        existingMedicationDetails:
          $ref: "#/components/schemas/ExistingMedicationDetails"
      required:
      - allergyDetails
      - contactInfo
      - dateOfBirth
      - existingMedicalConditionDetails
      - name
      - pregnancyStatus
      type: object
    PatientRelationship:
      description: |-
        The PatientRelationship enum represents the relationship between the patient and the cardholder, as per the NCPDP specification.
        It is used to indicate the patient's relationship to the insurance cardholder.

        `NOT_SPECIFIED` - Indicates patient relationship code of 0 with relationship not specified. This is applied by default if PatientRelationship is not set in the API request.

        `CARDHOLDER` - Indicates patient relationship code of 1, where the insurance is used for the cardholder themself, who is the patient.

        `SPOUSE` - Indicates patient relationship code of 2, where the insurance is used for the spouse of the cardholder, who is the patient.

        `CHILD` - Indicates patient relationship code of 3, where the insurance is used for the child of the cardholder, who is the patient.

        `OTHER` - Indicates patient relationship code of 4, where someone other than the cardholder, spouse, or child is the patient.

        `STUDENT` - Indicates patient relationship code of 5, where the insurance is used for a student who is the patient.

        `DISABLED_DEPENDENT` - Indicates patient relationship code of 6, where the insurance is used for a disabled dependent who is the patient.

        `ADULT_DEPENDENT` - Indicates patient relationship code of 7, where the insurance is used for an adult dependent who is the patient.

        `SIGNIFICANT_OTHER` - Indicates patient relationship code of 8, where the insurance is used for a significant other of the cardholder who is the patient.
      enum:
      - NOT_SPECIFIED
      - CARDHOLDER
      - SPOUSE
      - CHILD
      - OTHER
      - STUDENT
      - DISABLED_DEPENDENT
      - ADULT_DEPENDENT
      - SIGNIFICANT_OTHER
      type: string
    PatientStatus:
      description: |-
        Enum representing the external patient status surfaced to partners.

        `PATIENT_RECEIVED` - Represents that the Patient data has been received by Amazon Pharmacy and is pending further processing.

        `PATIENT_SUCCESS` - Represents that the Patient data has been successfully saved by Amazon Pharmacy.

        `PATIENT_FAILED` - Represents that the Patient data processing has failed due to the provided status reason code.
      enum:
      - PATIENT_RECEIVED
      - PATIENT_SUCCESS
      - PATIENT_FAILED
      type: string
    PatientStatusReasonCode:
      description: |-
        Enum of the different reasons a patient status can have.

        `INVALID_INSURANCE` - Patient data save failed as the insurance data provided was invalid.

        `INTERNAL_ERROR` - Patient data save failed due to an internal error.

        `NON_CONTRACTED_INSURANCE_PLAN` - The insurance plan is not contracted by Amazon Pharmacy.

        `INVALID_INSURANCE_PLAN_INPUT` - The insurance plan provided is invalid.
      enum:
      - INVALID_INSURANCE
      - INTERNAL_ERROR
      - NON_CONTRACTED_INSURANCE_PLAN
      - INVALID_INSURANCE_PLAN_INPUT
      type: string
    PayerType:
      description: |-
        Enum representing the type of payer system.

        `COMMERCIAL` - Commercial insurance system.

        `COPAY_CARD` - Co-pay card system.

        `DISCOUNT_CARD` - Discount card system.

        `EMPLOYER` - Employer-provided insurance system.

        `E_VOUCHER` - eVoucher payment system.

        `EXCHANGE_ACA` - Health exchange system under the Affordable Care Act (ACA).

        `FFS_MEDICAID` - Fee-for-service Medicaid system.

        `MANAGED_MEDICAID` - Managed Medicaid system.

        `MEDICARE_PART_D` - Medicare Part D system.

        `PART_B_AND_DME` - Medicare Part B and durable medical equipment (DME) system.

        `WORKERS_COMP` - Workers' compensation insurance system.

        `MEDICARE_MEDICAID` - Dual Medicare/Medicaid system.

        `TRIAL_CARD` - Trial card payment system.

        `PATIENT_ASSISTANCE_PROGRAM` - Patient assistance program system.

        `OTHER_GOVERNMENT_PAYER` - Other government-provided payer system.

        `FOUNDATION_501C` - 501(c) foundation system.
      enum:
      - COMMERCIAL
      - COPAY_CARD
      - DISCOUNT_CARD
      - EMPLOYER
      - E_VOUCHER
      - EXCHANGE_ACA
      - FFS_MEDICAID
      - MANAGED_MEDICAID
      - MEDICARE_PART_D
      - PART_B_AND_DME
      - WORKERS_COMP
      - MEDICARE_MEDICAID
      - TRIAL_CARD
      - PATIENT_ASSISTANCE_PROGRAM
      - OTHER_GOVERNMENT_PAYER
      - FOUNDATION_501C
      type: string
    PaymentMethod:
      description: |-
        Enum representing the type of payment method.

        `CARD` - Payment method is a card.
      enum:
      - CARD
      type: string
    Pharmacy:
      example:
        pharmacyAddress:
          zipCode: zipCode
          city: city
          countryCode: countryCode
          addressLine1: addressLine1
          addressLine2: addressLine2
          state: state
        ncpdpId: ncpdpId
        primaryTelephone: primaryTelephone
        deaNumber: deaNumber
        npi: npi
        pharmacyName: pharmacyName
        pharmacistName:
          firstName: firstName
          lastName: lastName
          prefix: prefix
          middleName: middleName
          suffix: suffix
        fax: fax
      properties:
        ncpdpId:
          description: An NCPDP-assigned national provider identification number that
            assists pharmacies in their interactions with federal agencies and third
            party providers.
          maxLength: 35
          pattern: ^\s*\S.*$
          type: string
        npi:
          description: A National Provider System (NPS) assigned identifier for health
            care providers.
          pattern: "^\\d{10}$"
          type: string
        pharmacyName:
          description: |-
            A string that must contain at least one non-whitespace character, potentially preceded by whitespace.

            Here's how it's checked:
            - '^' asserts the beginning of the string.
            - '\s*' allows any number of whitespace characters at the start of the string, including none.
            - '\S' ensures there is at least one non-whitespace character in the string.
            - '.*$' allows any characters to follow the non-whitespace character, extending to the end of the string.

            This ensures that the string is not entirely whitespace, although it can start with whitespace
            and can contain any characters after the first non-whitespace character.

            Note: This naturally enforces a minimum length of 1 due to 1 non-whitespace character requirement.
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
        deaNumber:
          description: |-
            The Drug Enforcement Administration (DEA) assigned number to all businesses that manufacture or distribute controlled pharmaceuticals,
                    all health professionals who dispense, administer, or prescribe controlled pharmaceuticals and all pharmacies that dispense prescriptions.
          maxLength: 35
          pattern: ^\s*\S.*$
          type: string
        pharmacistName:
          $ref: "#/components/schemas/Name"
        pharmacyAddress:
          $ref: "#/components/schemas/Address"
        primaryTelephone:
          description: Pharmacy telephone number.
          pattern: "^1?[2-9]\\d{2}[2-9]\\d{6}$"
          type: string
        fax:
          description: Pharmacy fax number.
          pattern: "^1?[2-9]\\d{2}[2-9]\\d{6}$"
          type: string
      required:
      - ncpdpId
      - npi
      - pharmacistName
      - pharmacyAddress
      - pharmacyName
      - primaryTelephone
      type: object
    PossibleDemographicFieldsInError:
      description: |-
        This represents Enums of possible demographic fields in error.

        `DATE_OF_BIRTH` - Date of birth of patient
      enum:
      - DATE_OF_BIRTH
      type: string
    PossibleInsuranceFieldsInError:
      description: |-
        This represents Enums of possible insurance fields in error.

           `BIN` - A 6-digit number that identifies the Pharmacy Benefit Manager (PBM) that this insurance uses for pharmacy claims.

           `PCN` - Processor Control Number assigned by the processor. PBMs use it to distinguish between plans.
            It's a secondary identifier used in addition to the binNumber.

           `GROUP_NUMBER` -  The insurance group number found on the insurance card that signifies which group the cardholder belongs to.

           `CARDHOLDER_ID` -  The cardholder ID on an insurance card is an unique number that identifies the cardholder to the insurance company.
      enum:
      - BIN
      - CARDHOLDER_ID
      - GROUP_NUMBER
      - PCN
      type: string
    PostPrescriptionTransferRequestContent:
      description: Structure representing the request for transferring a prescription.
      example:
        transferToPharmacy:
          pharmacyAddress:
            zipCode: zipCode
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
          ncpdpId: ncpdpId
          primaryTelephone: primaryTelephone
          deaNumber: deaNumber
          npi: npi
          pharmacyName: pharmacyName
          pharmacistName:
            firstName: firstName
            lastName: lastName
            prefix: prefix
            middleName: middleName
            suffix: suffix
          fax: fax
        reasonForTransfer: reasonForTransfer
        partnerPrescriptionId: partnerPrescriptionId
      properties:
        partnerPrescriptionId:
          description: A unique Prescription Identifier provided by the partner.
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
        transferToPharmacy:
          $ref: "#/components/schemas/TransferToPharmacy"
        reasonForTransfer:
          description: The reason for transferring out this prescription.
          maxLength: 255
          type: string
      required:
      - partnerPrescriptionId
      - transferToPharmacy
      type: object
    PostPrescriptionTransferResponseContent:
      description: Structure representing the response for a prescription transfer
        request.
      example:
        transferRequestStatus: TRANSFER_INITIATED
      properties:
        transferRequestStatus:
          $ref: "#/components/schemas/TransferRequestStatus"
      required:
      - transferRequestStatus
      type: object
    PreconditionErrorCode:
      description: |-
        Enum representing the different error codes for precondition validation failures.

        `FEATURE_NOT_ENABLED` - The requested feature is not enabled.

        `PRESCRIPTION_DISCONTINUED` - The prescription has been discontinued.

        `ORDER_COMPLETE` - The order is already complete.

        `PRESCRIPTION_ID_DOES_NOT_EXIST` - The provided prescription ID does not exist.

        `PRESCRIPTION_TRANSFER_ALREADY_INITIATED` - The prescription transfer has already been initiated.

        `PRESCRIPTION_TRANSFER_ALREADY_COMPLETE` - The prescription transfer is already complete.

        `NON_CONTRACTED_INSURANCE_PLAN` - The insurance plan is not contracted by Amazon Pharmacy.

        `INVALID_INSURANCE_PLAN_INPUT` - The insurance plan provided is invalid.

        `UNKNOWN_INSURANCE_PLAN_INPUT` - The insurance plan provided is unknown to Amazon Pharmacy.

        `INCORRECT_PRESCRIPTION_TRANSFERRED_IN_DETAILS` - The prescription transferred in details are missing or incorrect.

        `GOVERNMENT_INSURANCE_ON_FILE` - Patient already has an active government insurance listed with Amazon Pharmacy
      enum:
      - FEATURE_NOT_ENABLED
      - PRESCRIPTION_DISCONTINUED
      - ORDER_COMPLETE
      - PRESCRIPTION_ID_DOES_NOT_EXIST
      - PRESCRIPTION_TRANSFER_ALREADY_INITIATED
      - PRESCRIPTION_TRANSFER_ALREADY_COMPLETE
      - NON_CONTRACTED_INSURANCE_PLAN
      - INVALID_INSURANCE_PLAN_INPUT
      - UNKNOWN_INSURANCE_PLAN_INPUT
      - INCORRECT_PRESCRIPTION_TRANSFERRED_IN_DETAILS
      - GOVERNMENT_INSURANCE_ON_FILE
      type: string
    PreconditionFailedExceptionResponseContent:
      description: This exception is thrown when precondition validation failed for
        the request.
      example:
        errorCode: FEATURE_NOT_ENABLED
        errorFieldList:
        - field: field
          message: message
        - field: field
          message: message
        message: message
      properties:
        message:
          description: |-
            A human-readable message describing the precondition failure exception describing the precondition failure
            exception that was caught by the Amazon Pharmacy APIs
          maxLength: 1024
          pattern: ^\s*\S.*$
          type: string
        errorCode:
          $ref: "#/components/schemas/PreconditionErrorCode"
        errorFieldList:
          description: "List of fields responsible for the error, if applicable."
          items:
            $ref: "#/components/schemas/ErrorField"
          type: array
      required:
      - errorCode
      - message
      type: object
    PregnancyStatus:
      description: |-
        Enum representing the pregnancy status of the patient.

        `PREGNANT` - The patient is pregnant.

        `NOT_PREGNANT` - The patient is not pregnant.

        `NOT_AVAILABLE` - This should be set when:
        1. Information is not available in the requested format.
        2. Information has not been collected from the patient.
        3. Patient did not provide the information.
        4. Information cannot be provided due to some other reason.
      enum:
      - PREGNANT
      - NOT_PREGNANT
      - NOT_AVAILABLE
      type: string
    Prescriber:
      description: Structure representing the prescriber details.
      example:
        primaryTelephone: primaryTelephone
        deaNumber: deaNumber
        npi: npi
        prescriberName:
          firstName: firstName
          lastName: lastName
          prefix: prefix
          middleName: middleName
          suffix: suffix
        businessName: businessName
        stateLicenseNumber: stateLicenseNumber
        fax: fax
        prescriberAddress:
          zipCode: zipCode
          city: city
          countryCode: countryCode
          addressLine1: addressLine1
          addressLine2: addressLine2
          state: state
      properties:
        npi:
          description: A National Provider System (NPS) assigned identifier for the
            prescriber.
          maxLength: 35
          pattern: ^\s*\S.*$
          type: string
        prescriberName:
          $ref: "#/components/schemas/Name"
        prescriberAddress:
          $ref: "#/components/schemas/Address"
        primaryTelephone:
          description: The primary telephone number of the prescriber.
          pattern: "^1?[2-9]\\d{2}[2-9]\\d{6}$"
          type: string
        deaNumber:
          description: The Drug Enforcement Administration (DEA) assigned number to
            the prescriber.
          maxLength: 35
          pattern: ^\s*\S.*$
          type: string
        stateLicenseNumber:
          description: The prescriber's state license number.
          maxLength: 35
          pattern: ^\s*\S.*$
          type: string
        businessName:
          description: The business name associated with the prescriber.
          maxLength: 35
          pattern: ^\s*\S.*$
          type: string
        fax:
          description: The fax number of the prescriber.
          pattern: "^1?[2-9]\\d{2}[2-9]\\d{6}$"
          type: string
      required:
      - npi
      - prescriberAddress
      - prescriberName
      - primaryTelephone
      type: object
    Prescription:
      description: Structure representing a prescription.
      example:
        rxNumber: rxNumber
        prescriber:
          primaryTelephone: primaryTelephone
          deaNumber: deaNumber
          npi: npi
          prescriberName:
            firstName: firstName
            lastName: lastName
            prefix: prefix
            middleName: middleName
            suffix: suffix
          businessName: businessName
          stateLicenseNumber: stateLicenseNumber
          fax: fax
          prescriberAddress:
            zipCode: zipCode
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
        daysSupply: 5.962133916683182
        transferRequestStatus: TRANSFER_INITIATED
        ndc: ndc
        refillsRemaining: 6.027456183070403
        drugUnits: drugUnits
        refillsAuthorized: 0.8008281904610115
        statusDescription: statusDescription
        amazonPharmacy:
          pharmacyAddress:
            zipCode: zipCode
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
          ncpdpId: ncpdpId
          primaryTelephone: primaryTelephone
          deaNumber: deaNumber
          npi: npi
          pharmacyName: pharmacyName
          pharmacistName:
            firstName: firstName
            lastName: lastName
            prefix: prefix
            middleName: middleName
            suffix: suffix
          fax: fax
        totalQuantityRemaining:
          quantityUnitOfMeasureCode: C62412
          codeListQualifier: "38"
          value: 6.027456183070403
          unitOfMeasureCode: unitOfMeasureCode
        fillsRemaining: 1.4658129805029452
        fills:
        - dateCreated: dateCreated
          quantity:
            quantityUnitOfMeasureCode: C62412
            codeListQualifier: "38"
            value: 6.027456183070403
            unitOfMeasureCode: unitOfMeasureCode
          dateComplete: dateComplete
          daysSupply: 2.3021358869347655
          datePurchased: datePurchased
          fillNumber: 5.637376656633329
          status: PENDING
        - dateCreated: dateCreated
          quantity:
            quantityUnitOfMeasureCode: C62412
            codeListQualifier: "38"
            value: 6.027456183070403
            unitOfMeasureCode: unitOfMeasureCode
          dateComplete: dateComplete
          daysSupply: 2.3021358869347655
          datePurchased: datePurchased
          fillNumber: 5.637376656633329
          status: PENDING
        status: PRESCRIPTION_RECEIVED
      properties:
        status:
          $ref: "#/components/schemas/PrescriptionStatus"
        statusDescription:
          description: A more detailed explanation of the prescription's status.
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
        amazonPharmacy:
          $ref: "#/components/schemas/Pharmacy"
        drugUnits:
          description: "Unit of the drug quantity, e.g., Caps/Tabs/ML/Dev."
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
        ndc:
          description: "The National Drug Code of the medication, without dashes or\
            \ spaces."
          pattern: "^\\d{11}$"
          type: string
        refillsAuthorized:
          description: Number of refills authorized on the Prescription.
          type: number
        refillsRemaining:
          description: Number of refills remaining on the Prescription.
          type: number
        fillsRemaining:
          description: Number of total fills (first fill + refill) remaining on the
            Prescription.
          type: number
        daysSupply:
          description: "The number of days the authorizedQuantityPerFill will supply,\
            \ mapped to Prescription's daysSupply."
          type: number
        rxNumber:
          description: The pharmacy-assigned number for this prescription.
          pattern: ^\s*\S.*$
          type: string
        transferRequestStatus:
          $ref: "#/components/schemas/TransferRequestStatus"
        totalQuantityRemaining:
          $ref: "#/components/schemas/Quantity"
        fills:
          description: A list of fills for this prescription
          items:
            $ref: "#/components/schemas/PrescriptionFill"
          type: array
        prescriber:
          $ref: "#/components/schemas/Prescriber"
      required:
      - amazonPharmacy
      - status
      - statusDescription
      type: object
    PrescriptionFill:
      description: Structure representing a fill of the prescription.
      example:
        dateCreated: dateCreated
        quantity:
          quantityUnitOfMeasureCode: C62412
          codeListQualifier: "38"
          value: 6.027456183070403
          unitOfMeasureCode: unitOfMeasureCode
        dateComplete: dateComplete
        daysSupply: 2.3021358869347655
        datePurchased: datePurchased
        fillNumber: 5.637376656633329
        status: PENDING
      properties:
        fillNumber:
          description: |-
            A positive integer representing the position of this fill in a
                                sequence of fills for a given prescription, starts with 0 and incremented from 1.
          type: number
        dateCreated:
          description: The date-time that this record was created.
          pattern: "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d{3,9})?(?:Z|[+-]\\\
            d{2}:\\d{2})$"
          type: string
        datePurchased:
          description: The date-time that this fill was purchased.
          pattern: "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d{3,9})?(?:Z|[+-]\\\
            d{2}:\\d{2})$"
          type: string
        dateComplete:
          description: The date-time that this order was shipped and status changed
            to COMPLETE.
          pattern: "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d{3,9})?(?:Z|[+-]\\\
            d{2}:\\d{2})$"
          type: string
        status:
          $ref: "#/components/schemas/PrescriptionFillStatus"
        daysSupply:
          description: The number of days supply for this fill.
          type: number
        quantity:
          $ref: "#/components/schemas/Quantity"
      required:
      - fillNumber
      - status
      type: object
    PrescriptionFillStatus:
      description: |-
        Enum representing the status for the fill associated with prescription.

        `PENDING` - Indicates fill has been created and waiting to be processed.

        `PURCHASED` - Indicates that customer has completed check out if needed.

        `CANCELED` - Indicates that the order the fill was associated with was canceled.

        `COMPLETE` - Indicates that the fill has been dispensed as part of fulfilling the order.
      enum:
      - PENDING
      - PURCHASED
      - CANCELED
      - COMPLETE
      type: string
    PrescriptionFillTransferInType:
      description: |-
        Enum representing whether the prescription is previously dispensed or not before transferring to Amazon Pharmacy.

        `NEW_RX` - Represents the prescription is new and not dispensed by any other pharmacy before sending to Amazon Pharmacy.

        `DISPENSED_BEFORE` - Represent the prescription was dispensed at least once before transferring to Amazon Pharmacy.
      enum:
      - NEW_RX
      - DISPENSED_BEFORE
      type: string
    PrescriptionStatus:
      description: |-
        Enum representing the prescription status that will be surfaced to partners.

        `PRESCRIPTION_RECEIVED` - The prescription has been received after the API call has been accepted.

        `PRESCRIPTION_CREATED` - The prescription has been created but not active. This state is before data entry.

        `PRESCRIPTION_FAILED` - The prescription has failed. Please correct any issues and send with a new ID.
        After received, we check for failures such as missing data, incorrect formatting, etc.
        The prescription can be resubmitted under this state.

        `PRESCRIPTION_PRE_PV1` - The prescription is in the pre-PV1 state, waiting to be typed.

        `PRESCRIPTION_PV1` - The prescription is in the PV1 state, waiting to be verified by a pharmacist after data-entry completion.

        `PRESCRIPTION_PV1_FOLLOW_UP` - Prescription requires additional information before data entry can be completed to
        resolve missing or unclear information. This is applied during Data Entry, requires additional intervention by
        pharmacist to patient or prescriber.

        `PRESCRIPTION_ACTIVE` - The prescription is active post Pharmacist verification and approval.

        `PRESCRIPTION_DISCONTINUED` - The prescription has been discontinued and no longer available for usage Pharmacist has
        determined that we cannot fulfill this prescription. This could be due to multiple reasons, one of them being
        prescription being transferred.

        `PRESCRIPTION_INVALID` - The prescription is invalid due to insufficient information and cannot be typed.
      enum:
      - PRESCRIPTION_RECEIVED
      - PRESCRIPTION_CREATED
      - PRESCRIPTION_FAILED
      - PRESCRIPTION_PRE_PV1
      - PRESCRIPTION_PV1
      - PRESCRIPTION_PV1_FOLLOW_UP
      - PRESCRIPTION_ACTIVE
      - PRESCRIPTION_DISCONTINUED
      - PRESCRIPTION_INVALID
      type: string
    PrescriptionTransferInDetails:
      description: |-
        Structure containing transfer details when a prescription is transferred from a pharmacy to Amazon Pharmacy,
        regardless of whether sending pharmacy is dispensing or non-dispensing pharmacy.

        Required: Only for pharmacy-to-pharmacy transfers
        Optional: When prescription comes directly from a prescriber

        This structure captures:
        - Sending pharmacy information (identification, contact details)
        - Transfer-specific data (fill history, remaining refills, quantities)

        Do not include this structure for prescriber-direct prescriptions.
      example:
        sendingPharmacy:
          pharmacyAddress:
            zipCode: zipCode
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
          ncpdpId: ncpdpId
          primaryTelephone: primaryTelephone
          deaNumber: deaNumber
          npi: npi
          pharmacyName: pharmacyName
          pharmacistName:
            firstName: firstName
            lastName: lastName
            prefix: prefix
            middleName: middleName
            suffix: suffix
          fax: fax
        prescriptionTransferred:
          lastFillDate: lastFillDate
          refillsTransferred: 5.962133916683182
          prescriptionFillTransferInType: NEW_RX
          firstFillDate: firstFillDate
          quantityRemaining:
            quantityUnitOfMeasureCode: C62412
            codeListQualifier: "38"
            value: 6.027456183070403
            unitOfMeasureCode: unitOfMeasureCode
          pharmacyRxNumber: pharmacyRxNumber
          previousDispensedMedications:
          - lastFillDate: lastFillDate
            quantity:
              quantityUnitOfMeasureCode: C62412
              codeListQualifier: "38"
              value: 6.027456183070403
              unitOfMeasureCode: unitOfMeasureCode
            directions: directions
            daysSupply: 5.637376656633329
            drugDbCode:
              code: code
              qualifier: E
            dispenseAsWritten: dispenseAsWritten
            ndc: ndc
            drugDescription: drugDescription
          - lastFillDate: lastFillDate
            quantity:
              quantityUnitOfMeasureCode: C62412
              codeListQualifier: "38"
              value: 6.027456183070403
              unitOfMeasureCode: unitOfMeasureCode
            directions: directions
            daysSupply: 5.637376656633329
            drugDbCode:
              code: code
              qualifier: E
            dispenseAsWritten: dispenseAsWritten
            ndc: ndc
            drugDescription: drugDescription
          - lastFillDate: lastFillDate
            quantity:
              quantityUnitOfMeasureCode: C62412
              codeListQualifier: "38"
              value: 6.027456183070403
              unitOfMeasureCode: unitOfMeasureCode
            directions: directions
            daysSupply: 5.637376656633329
            drugDbCode:
              code: code
              qualifier: E
            dispenseAsWritten: dispenseAsWritten
            ndc: ndc
            drugDescription: drugDescription
          - lastFillDate: lastFillDate
            quantity:
              quantityUnitOfMeasureCode: C62412
              codeListQualifier: "38"
              value: 6.027456183070403
              unitOfMeasureCode: unitOfMeasureCode
            directions: directions
            daysSupply: 5.637376656633329
            drugDbCode:
              code: code
              qualifier: E
            dispenseAsWritten: dispenseAsWritten
            ndc: ndc
            drugDescription: drugDescription
          - lastFillDate: lastFillDate
            quantity:
              quantityUnitOfMeasureCode: C62412
              codeListQualifier: "38"
              value: 6.027456183070403
              unitOfMeasureCode: unitOfMeasureCode
            directions: directions
            daysSupply: 5.637376656633329
            drugDbCode:
              code: code
              qualifier: E
            dispenseAsWritten: dispenseAsWritten
            ndc: ndc
            drugDescription: drugDescription
          refillsRemaining: 1.4658129805029452
          quantityTransferred:
            quantityUnitOfMeasureCode: C62412
            codeListQualifier: "38"
            value: 6.027456183070403
            unitOfMeasureCode: unitOfMeasureCode
      properties:
        sendingPharmacy:
          $ref: "#/components/schemas/Pharmacy"
        prescriptionTransferred:
          $ref: "#/components/schemas/PrescriptionTransferred"
      required:
      - prescriptionTransferred
      - sendingPharmacy
      type: object
    PrescriptionTransferred:
      description: Structure capturing details about fills and quantity for the prescription
        being transferred.
      example:
        lastFillDate: lastFillDate
        refillsTransferred: 5.962133916683182
        prescriptionFillTransferInType: NEW_RX
        firstFillDate: firstFillDate
        quantityRemaining:
          quantityUnitOfMeasureCode: C62412
          codeListQualifier: "38"
          value: 6.027456183070403
          unitOfMeasureCode: unitOfMeasureCode
        pharmacyRxNumber: pharmacyRxNumber
        previousDispensedMedications:
        - lastFillDate: lastFillDate
          quantity:
            quantityUnitOfMeasureCode: C62412
            codeListQualifier: "38"
            value: 6.027456183070403
            unitOfMeasureCode: unitOfMeasureCode
          directions: directions
          daysSupply: 5.637376656633329
          drugDbCode:
            code: code
            qualifier: E
          dispenseAsWritten: dispenseAsWritten
          ndc: ndc
          drugDescription: drugDescription
        - lastFillDate: lastFillDate
          quantity:
            quantityUnitOfMeasureCode: C62412
            codeListQualifier: "38"
            value: 6.027456183070403
            unitOfMeasureCode: unitOfMeasureCode
          directions: directions
          daysSupply: 5.637376656633329
          drugDbCode:
            code: code
            qualifier: E
          dispenseAsWritten: dispenseAsWritten
          ndc: ndc
          drugDescription: drugDescription
        - lastFillDate: lastFillDate
          quantity:
            quantityUnitOfMeasureCode: C62412
            codeListQualifier: "38"
            value: 6.027456183070403
            unitOfMeasureCode: unitOfMeasureCode
          directions: directions
          daysSupply: 5.637376656633329
          drugDbCode:
            code: code
            qualifier: E
          dispenseAsWritten: dispenseAsWritten
          ndc: ndc
          drugDescription: drugDescription
        - lastFillDate: lastFillDate
          quantity:
            quantityUnitOfMeasureCode: C62412
            codeListQualifier: "38"
            value: 6.027456183070403
            unitOfMeasureCode: unitOfMeasureCode
          directions: directions
          daysSupply: 5.637376656633329
          drugDbCode:
            code: code
            qualifier: E
          dispenseAsWritten: dispenseAsWritten
          ndc: ndc
          drugDescription: drugDescription
        - lastFillDate: lastFillDate
          quantity:
            quantityUnitOfMeasureCode: C62412
            codeListQualifier: "38"
            value: 6.027456183070403
            unitOfMeasureCode: unitOfMeasureCode
          directions: directions
          daysSupply: 5.637376656633329
          drugDbCode:
            code: code
            qualifier: E
          dispenseAsWritten: dispenseAsWritten
          ndc: ndc
          drugDescription: drugDescription
        refillsRemaining: 1.4658129805029452
        quantityTransferred:
          quantityUnitOfMeasureCode: C62412
          codeListQualifier: "38"
          value: 6.027456183070403
          unitOfMeasureCode: unitOfMeasureCode
      properties:
        prescriptionFillTransferInType:
          $ref: "#/components/schemas/PrescriptionFillTransferInType"
        firstFillDate:
          description: |-
            The date on which the prescription was first filled by the pharmacy, in the format 'YYYY-MM-DD'.
            This date helps track the initial dispensing of the medication to the patient.
            This field is required if prescription is previously dispensed (PrescriptionFillTransferInType.DISPENSED_BEFORE).
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        lastFillDate:
          description: |-
            The date on which the prescription was most recently filled by the pharmacy, in the format 'YYYY-MM-DD'.
            This date helps track the latest dispensing of the medication and is useful for monitoring adherence and refill patterns.
            This field is required if prescription is previously dispensed (PrescriptionFillTransferInType.DISPENSED_BEFORE).
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        refillsRemaining:
          description: |-
            The number of refills left on the prescription including the first fill.
            This field will be marked as required for both NewRx and previously dispensed Rx starting from 2025-03-12.
          format: double
          type: number
        refillsTransferred:
          description: The number of refills being transferred to Amazon Pharmacy
            including the first fill.
          format: double
          type: number
        quantityTransferred:
          $ref: "#/components/schemas/Quantity"
        quantityRemaining:
          $ref: "#/components/schemas/Quantity"
        previousDispensedMedications:
          description: |-
            Contains information about previous medication dispenses for the prescription.
            Each entry represents a medication dispensed by the sending pharmacy.
            This provides details about actual dispensing when the filled medication differs from what was prescribed.
            When PrescriptionFillTransferInType.DISPENSED_BEFORE is true, this object must contain either at least one aggregate dispense detail or a list of unique previous dispenses.
            This field will be marked as required for previously dispensed Rx starting from 2025-03-12.
          items:
            $ref: "#/components/schemas/PreviousDispensedMedication"
          maxItems: 300
          minItems: 0
          type: array
        pharmacyRxNumber:
          description: |-
            Prescription number assigned by the sending pharmacy.
            This field will be marked as required starting from 2025-03-12.
          pattern: ^\s*\S.*$
          type: string
      required:
      - prescriptionFillTransferInType
      type: object
    PreviousDispensedMedication:
      example:
        lastFillDate: lastFillDate
        quantity:
          quantityUnitOfMeasureCode: C62412
          codeListQualifier: "38"
          value: 6.027456183070403
          unitOfMeasureCode: unitOfMeasureCode
        directions: directions
        daysSupply: 5.637376656633329
        drugDbCode:
          code: code
          qualifier: E
        dispenseAsWritten: dispenseAsWritten
        ndc: ndc
        drugDescription: drugDescription
      properties:
        drugDescription:
          description: Name or description of the medication being prescribed.
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
        ndc:
          description: "The National Drug Code of the medication, without dashes or\
            \ spaces."
          pattern: "^\\d{11}$"
          type: string
        drugDbCode:
          $ref: "#/components/schemas/DrugDbCode"
        quantity:
          $ref: "#/components/schemas/Quantity"
        daysSupply:
          description: Estimated number of days a prescription would last.
          type: number
        directions:
          description: "Clinical directions meaningful to the patient as written by\
            \ the prescriber, e.g., 'Take 1 tablet by mouth once weekly.'"
          type: string
        lastFillDate:
          description: A string representing a date in the format 'YYYY-MM-DD'.
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        dispenseAsWritten:
          description: |-
            An indicator that the prescriber has instructed to dispense as written (DAW) code.
            This is typically used when a brand is chosen over a generic alternative based on the direction of the prescriber.
            0 means no DAW is specified
            1 means by prescriber
            2 means a patient/user request
            9 means other.
          pattern: "^[0-9]$"
          type: string
      required:
      - drugDescription
      - lastFillDate
      - ndc
      type: object
    PutOrderRequestContent:
      description: Structure representing the request for placing an order.
      example:
        quotedCopay: quotedCopay
        partnerPaymentInstrumentId: partnerPaymentInstrumentId
        partnerOrderId: partnerOrderId
        partnerPrescriptionId: partnerPrescriptionId
        shippingAddress:
          zipCode: zipCode
          city: city
          countryCode: countryCode
          addressLine1: addressLine1
          addressLine2: addressLine2
          state: state
        placeOrderOnDate: placeOrderOnDate
        orderInsuranceDetails:
          secondary:
            expiryDate: expiryDate
            payerType: COMMERCIAL
            cardholderId: cardholderId
            binNumber: binNumber
            payerName: payerName
            pcn: pcn
            stateCode: stateCode
            relationshipCode: NOT_SPECIFIED
            groupNumber: groupNumber
            personCode: personCode
            startDate: startDate
          primary:
            expiryDate: expiryDate
            payerType: COMMERCIAL
            cardholderId: cardholderId
            binNumber: binNumber
            payerName: payerName
            pcn: pcn
            stateCode: stateCode
            relationshipCode: NOT_SPECIFIED
            groupNumber: groupNumber
            personCode: personCode
            startDate: startDate
      properties:
        partnerOrderId:
          description: A unique Order identifier provided by the partner.
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
        partnerPrescriptionId:
          description: A unique Prescription Identifier provided by the partner.
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
        shippingAddress:
          $ref: "#/components/schemas/Address"
        partnerPaymentInstrumentId:
          description: |-
            Customer's payment instrument ID, previously created using the payment-instrument API.
            This field is required when the quoted copay amount is greater than zero and placeOrderOnDate is null.
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
        quotedCopay:
          description: |-
            An estimated copay for the customer. If the actual copay is higher than the estimated copay by a certain amount($XX)
                or percentage (XX%), the shipment will be put on hold.
          pattern: "^([0-9]*[.])?[0-9]+$"
          type: string
        placeOrderOnDate:
          description: |-
            Order will be held until this date and sent for order placement only when the date is passed.
                It is quoted in the format 'YYYY-MM-DD'.
          pattern: "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$"
          type: string
        orderInsuranceDetails:
          $ref: "#/components/schemas/OrderInsuranceDetails"
      required:
      - partnerOrderId
      - partnerPrescriptionId
      - shippingAddress
      type: object
    PutOrderResponseContent:
      description: Structure representing the response for placing an order.
      example:
        partnerOrderId: partnerOrderId
      properties:
        partnerOrderId:
          description: The partner Order ID of the placed order.
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
      required:
      - partnerOrderId
      type: object
    PutPatientRequestContent:
      description: Structure representing the PutPatient API request.
      example:
        insurances:
        - cardholderId: cardholderId
          encryptedCardholderId: encryptedCardholderId
          binNumber: binNumber
          relationshipCode: NOT_SPECIFIED
          groupNumber: groupNumber
          partnerInsuranceId: partnerInsuranceId
          personCode: personCode
          expiryDate: expiryDate
          payerType: COMMERCIAL
          payerName: payerName
          pcn: pcn
          stateCode: stateCode
          startDate: startDate
        - cardholderId: cardholderId
          encryptedCardholderId: encryptedCardholderId
          binNumber: binNumber
          relationshipCode: NOT_SPECIFIED
          groupNumber: groupNumber
          partnerInsuranceId: partnerInsuranceId
          personCode: personCode
          expiryDate: expiryDate
          payerType: COMMERCIAL
          payerName: payerName
          pcn: pcn
          stateCode: stateCode
          startDate: startDate
        - cardholderId: cardholderId
          encryptedCardholderId: encryptedCardholderId
          binNumber: binNumber
          relationshipCode: NOT_SPECIFIED
          groupNumber: groupNumber
          partnerInsuranceId: partnerInsuranceId
          personCode: personCode
          expiryDate: expiryDate
          payerType: COMMERCIAL
          payerName: payerName
          pcn: pcn
          stateCode: stateCode
          startDate: startDate
        - cardholderId: cardholderId
          encryptedCardholderId: encryptedCardholderId
          binNumber: binNumber
          relationshipCode: NOT_SPECIFIED
          groupNumber: groupNumber
          partnerInsuranceId: partnerInsuranceId
          personCode: personCode
          expiryDate: expiryDate
          payerType: COMMERCIAL
          payerName: payerName
          pcn: pcn
          stateCode: stateCode
          startDate: startDate
        - cardholderId: cardholderId
          encryptedCardholderId: encryptedCardholderId
          binNumber: binNumber
          relationshipCode: NOT_SPECIFIED
          groupNumber: groupNumber
          partnerInsuranceId: partnerInsuranceId
          personCode: personCode
          expiryDate: expiryDate
          payerType: COMMERCIAL
          payerName: payerName
          pcn: pcn
          stateCode: stateCode
          startDate: startDate
        residentialAddress:
          zipCode: zipCode
          city: city
          countryCode: countryCode
          addressLine1: addressLine1
          addressLine2: addressLine2
          state: state
        patientDetails:
          existingMedicationDetails:
            existingMedications:
            - quantity:
                quantityUnitOfMeasureCode: C62412
                codeListQualifier: "38"
                value: 6.027456183070403
                unitOfMeasureCode: unitOfMeasureCode
              strength:
                formCode: formCode
                strengthFormCode: C78746
                value: value
                unitOfMeasureCode: unitOfMeasureCode
                strengthUnitOfMeasureCode: C70518
              description: description
              ndc: ndc
              rxcui: rxcui
            - quantity:
                quantityUnitOfMeasureCode: C62412
                codeListQualifier: "38"
                value: 6.027456183070403
                unitOfMeasureCode: unitOfMeasureCode
              strength:
                formCode: formCode
                strengthFormCode: C78746
                value: value
                unitOfMeasureCode: unitOfMeasureCode
                strengthUnitOfMeasureCode: C70518
              description: description
              ndc: ndc
              rxcui: rxcui
            - quantity:
                quantityUnitOfMeasureCode: C62412
                codeListQualifier: "38"
                value: 6.027456183070403
                unitOfMeasureCode: unitOfMeasureCode
              strength:
                formCode: formCode
                strengthFormCode: C78746
                value: value
                unitOfMeasureCode: unitOfMeasureCode
                strengthUnitOfMeasureCode: C70518
              description: description
              ndc: ndc
              rxcui: rxcui
            - quantity:
                quantityUnitOfMeasureCode: C62412
                codeListQualifier: "38"
                value: 6.027456183070403
                unitOfMeasureCode: unitOfMeasureCode
              strength:
                formCode: formCode
                strengthFormCode: C78746
                value: value
                unitOfMeasureCode: unitOfMeasureCode
                strengthUnitOfMeasureCode: C70518
              description: description
              ndc: ndc
              rxcui: rxcui
            - quantity:
                quantityUnitOfMeasureCode: C62412
                codeListQualifier: "38"
                value: 6.027456183070403
                unitOfMeasureCode: unitOfMeasureCode
              strength:
                formCode: formCode
                strengthFormCode: C78746
                value: value
                unitOfMeasureCode: unitOfMeasureCode
                strengthUnitOfMeasureCode: C70518
              description: description
              ndc: ndc
              rxcui: rxcui
            existingMedicationsDescriptor: EXISTING_MEDICATIONS_INCLUDED
          existingMedicalConditionDetails:
            noKnownExistingMedicalConditions: true
            existingMedicalConditions:
            - code: code
              codeType: ICD10CM
              textValue: textValue
            - code: code
              codeType: ICD10CM
              textValue: textValue
            - code: code
              codeType: ICD10CM
              textValue: textValue
            - code: code
              codeType: ICD10CM
              textValue: textValue
            - code: code
              codeType: ICD10CM
              textValue: textValue
            existingMedicalConditionsDescriptor: KNOWN_MEDICAL_CONDITIONS_INCLUDED
          contactInfo:
          - phoneNumber: phoneNumber
            countryCode: 0.8008281904610115
            contactSystemType: Mobile
          - phoneNumber: phoneNumber
            countryCode: 0.8008281904610115
            contactSystemType: Mobile
          - phoneNumber: phoneNumber
            countryCode: 0.8008281904610115
            contactSystemType: Mobile
          - phoneNumber: phoneNumber
            countryCode: 0.8008281904610115
            contactSystemType: Mobile
          - phoneNumber: phoneNumber
            countryCode: 0.8008281904610115
            contactSystemType: Mobile
          gender: gender
          smsConsent: true
          name:
            firstName: firstName
            lastName: lastName
            prefix: prefix
            middleName: middleName
            suffix: suffix
          sexAssignedAtBirth: Female
          pregnancyStatus: PREGNANT
          dateOfBirth: dateOfBirth
          allergyDetails:
            noKnownAllergies: true
            allergies:
            - code: code
              codeType: SNOMEDCT
              textValue: textValue
            - code: code
              codeType: SNOMEDCT
              textValue: textValue
            - code: code
              codeType: SNOMEDCT
              textValue: textValue
            - code: code
              codeType: SNOMEDCT
              textValue: textValue
            - code: code
              codeType: SNOMEDCT
              textValue: textValue
            allergiesDescriptor: KNOWN_ALLERGIES_INCLUDED
          email: email
        partnerPatientId: partnerPatientId
      properties:
        partnerPatientId:
          description: A unique Patient Identifier provided while creating the patient
            profile.
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
        patientDetails:
          $ref: "#/components/schemas/PatientDetails"
        residentialAddress:
          $ref: "#/components/schemas/Address"
        insurances:
          description: List of insurances for this patient.
          items:
            $ref: "#/components/schemas/Insurance"
          maxItems: 27
          minItems: 0
          type: array
      required:
      - partnerPatientId
      - patientDetails
      - residentialAddress
      type: object
    PutPatientResponseContent:
      description: Structure representing the PutPatient API response.
      example:
        partnerPatientId: partnerPatientId
      properties:
        partnerPatientId:
          description: A unique partner-provided identifier that will be used to identify
            the patient.
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
      required:
      - partnerPatientId
      type: object
    PutPaymentInstrumentRequestContent:
      description: Structure representing the request for adding a payment instrument.
      example:
        partnerPaymentInstrumentId: partnerPaymentInstrumentId
        cardDetails:
          expirationYear: 2068.808666991335
          encryptedCardNumber: encryptedCardNumber
          cardHolderName: cardHolderName
          expirationMonth: 1.8809110095071127
        paymentMethod: CARD
        partnerPatientId: partnerPatientId
        billingAddress:
          zipCode: zipCode
          city: city
          countryCode: countryCode
          addressLine1: addressLine1
          addressLine2: addressLine2
          state: state
      properties:
        partnerPatientId:
          description: Identifier of the Patient who owns the Payment Instrument.
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
        partnerPaymentInstrumentId:
          description: "A unique identifier provided by the partner that identifies\
            \ the payment instrument, this can be used later for placing orders."
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
        paymentMethod:
          $ref: "#/components/schemas/PaymentMethod"
        cardDetails:
          $ref: "#/components/schemas/CardDetails"
        billingAddress:
          $ref: "#/components/schemas/Address"
      required:
      - billingAddress
      - cardDetails
      - partnerPatientId
      - partnerPaymentInstrumentId
      - paymentMethod
      type: object
    PutPaymentInstrumentResponseContent:
      description: Structure representing the response for adding a payment instrument.
      example:
        partnerPaymentInstrumentId: partnerPaymentInstrumentId
      properties:
        partnerPaymentInstrumentId:
          description: The partner payment instrument ID of the added payment instrument.
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
      required:
      - partnerPaymentInstrumentId
      type: object
    PutPrescriptionRequestContent:
      description: Structure representing the request for adding a prescription.
      example:
        prescriber:
          primaryTelephone: primaryTelephone
          deaNumber: deaNumber
          npi: npi
          prescriberName:
            firstName: firstName
            lastName: lastName
            prefix: prefix
            middleName: middleName
            suffix: suffix
          businessName: businessName
          stateLicenseNumber: stateLicenseNumber
          fax: fax
          prescriberAddress:
            zipCode: zipCode
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
        prescriptionTransferInDetails:
          sendingPharmacy:
            pharmacyAddress:
              zipCode: zipCode
              city: city
              countryCode: countryCode
              addressLine1: addressLine1
              addressLine2: addressLine2
              state: state
            ncpdpId: ncpdpId
            primaryTelephone: primaryTelephone
            deaNumber: deaNumber
            npi: npi
            pharmacyName: pharmacyName
            pharmacistName:
              firstName: firstName
              lastName: lastName
              prefix: prefix
              middleName: middleName
              suffix: suffix
            fax: fax
          prescriptionTransferred:
            lastFillDate: lastFillDate
            refillsTransferred: 5.962133916683182
            prescriptionFillTransferInType: NEW_RX
            firstFillDate: firstFillDate
            quantityRemaining:
              quantityUnitOfMeasureCode: C62412
              codeListQualifier: "38"
              value: 6.027456183070403
              unitOfMeasureCode: unitOfMeasureCode
            pharmacyRxNumber: pharmacyRxNumber
            previousDispensedMedications:
            - lastFillDate: lastFillDate
              quantity:
                quantityUnitOfMeasureCode: C62412
                codeListQualifier: "38"
                value: 6.027456183070403
                unitOfMeasureCode: unitOfMeasureCode
              directions: directions
              daysSupply: 5.637376656633329
              drugDbCode:
                code: code
                qualifier: E
              dispenseAsWritten: dispenseAsWritten
              ndc: ndc
              drugDescription: drugDescription
            - lastFillDate: lastFillDate
              quantity:
                quantityUnitOfMeasureCode: C62412
                codeListQualifier: "38"
                value: 6.027456183070403
                unitOfMeasureCode: unitOfMeasureCode
              directions: directions
              daysSupply: 5.637376656633329
              drugDbCode:
                code: code
                qualifier: E
              dispenseAsWritten: dispenseAsWritten
              ndc: ndc
              drugDescription: drugDescription
            - lastFillDate: lastFillDate
              quantity:
                quantityUnitOfMeasureCode: C62412
                codeListQualifier: "38"
                value: 6.027456183070403
                unitOfMeasureCode: unitOfMeasureCode
              directions: directions
              daysSupply: 5.637376656633329
              drugDbCode:
                code: code
                qualifier: E
              dispenseAsWritten: dispenseAsWritten
              ndc: ndc
              drugDescription: drugDescription
            - lastFillDate: lastFillDate
              quantity:
                quantityUnitOfMeasureCode: C62412
                codeListQualifier: "38"
                value: 6.027456183070403
                unitOfMeasureCode: unitOfMeasureCode
              directions: directions
              daysSupply: 5.637376656633329
              drugDbCode:
                code: code
                qualifier: E
              dispenseAsWritten: dispenseAsWritten
              ndc: ndc
              drugDescription: drugDescription
            - lastFillDate: lastFillDate
              quantity:
                quantityUnitOfMeasureCode: C62412
                codeListQualifier: "38"
                value: 6.027456183070403
                unitOfMeasureCode: unitOfMeasureCode
              directions: directions
              daysSupply: 5.637376656633329
              drugDbCode:
                code: code
                qualifier: E
              dispenseAsWritten: dispenseAsWritten
              ndc: ndc
              drugDescription: drugDescription
            refillsRemaining: 1.4658129805029452
            quantityTransferred:
              quantityUnitOfMeasureCode: C62412
              codeListQualifier: "38"
              value: 6.027456183070403
              unitOfMeasureCode: unitOfMeasureCode
        sendingPharmacy:
          pharmacyAddress:
            zipCode: zipCode
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
          ncpdpId: ncpdpId
          primaryTelephone: primaryTelephone
          deaNumber: deaNumber
          npi: npi
          pharmacyName: pharmacyName
          pharmacistName:
            firstName: firstName
            lastName: lastName
            prefix: prefix
            middleName: middleName
            suffix: suffix
          fax: fax
        medicationPrescribed:
          numberOfRefills: 6.027456183070403
          note: note
          quantity:
            quantityUnitOfMeasureCode: C62412
            codeListQualifier: "38"
            value: 6.027456183070403
            unitOfMeasureCode: unitOfMeasureCode
          strength:
            formCode: formCode
            strengthFormCode: C78746
            value: value
            unitOfMeasureCode: unitOfMeasureCode
            strengthUnitOfMeasureCode: C70518
          daysSupply: 0.8008281904610115
          firstFillDate: firstFillDate
          drugDbCode:
            code: code
            qualifier: E
          deaSchedule: C48672
          diagnosis:
          - icd10Code: icd10Code
            description: description
          - icd10Code: icd10Code
            description: description
          ndc: ndc
          medicalDiagnosis:
            secondary:
              icd10Code: icd10Code
              description: description
            clinicalInformationQualifier: "1"
            primary:
              icd10Code: icd10Code
              description: description
          drugDescription: drugDescription
          rxcui: rxcui
          lastFillDate: lastFillDate
          labelerName: labelerName
          directions: directions
          dispenseAsWritten: dispenseAsWritten
          writtenDate: writtenDate
          effectiveDate: effectiveDate
          expirationDate: expirationDate
        receivingPharmacy:
          pharmacyAddress:
            zipCode: zipCode
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
          ncpdpId: ncpdpId
          primaryTelephone: primaryTelephone
          deaNumber: deaNumber
          npi: npi
          pharmacyName: pharmacyName
          pharmacistName:
            firstName: firstName
            lastName: lastName
            prefix: prefix
            middleName: middleName
            suffix: suffix
          fax: fax
        observation:
          observationNotes: observationNotes
          measurement:
          - vitalSign: HEIGHT
            observationDate: observationDate
            measurementUnitOfMeasure: measurementUnitOfMeasure
            value: value
          - vitalSign: HEIGHT
            observationDate: observationDate
            measurementUnitOfMeasure: measurementUnitOfMeasure
            value: value
          - vitalSign: HEIGHT
            observationDate: observationDate
            measurementUnitOfMeasure: measurementUnitOfMeasure
            value: value
          - vitalSign: HEIGHT
            observationDate: observationDate
            measurementUnitOfMeasure: measurementUnitOfMeasure
            value: value
          - vitalSign: HEIGHT
            observationDate: observationDate
            measurementUnitOfMeasure: measurementUnitOfMeasure
            value: value
        supervisingPhysician:
          primaryTelephone: primaryTelephone
          deaNumber: deaNumber
          npi: npi
          prescriberName:
            firstName: firstName
            lastName: lastName
            prefix: prefix
            middleName: middleName
            suffix: suffix
          businessName: businessName
          stateLicenseNumber: stateLicenseNumber
          fax: fax
          prescriberAddress:
            zipCode: zipCode
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
        partnerPrescriptionId: partnerPrescriptionId
        partnerPatientId: partnerPatientId
      properties:
        partnerPrescriptionId:
          description: A unique Prescription Identifier provided by the partner.
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
        partnerPatientId:
          description: A unique Patient Identifier provided by the partner.
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
        prescriber:
          $ref: "#/components/schemas/Prescriber"
        supervisingPhysician:
          $ref: "#/components/schemas/Prescriber"
        medicationPrescribed:
          $ref: "#/components/schemas/MedicationPrescribed"
        sendingPharmacy:
          $ref: "#/components/schemas/Pharmacy"
        prescriptionTransferInDetails:
          $ref: "#/components/schemas/PrescriptionTransferInDetails"
        receivingPharmacy:
          $ref: "#/components/schemas/Pharmacy"
        observation:
          $ref: "#/components/schemas/Observation"
      required:
      - medicationPrescribed
      - partnerPatientId
      - partnerPrescriptionId
      - prescriber
      - receivingPharmacy
      type: object
    PutPrescriptionResponseContent:
      description: Structure representing the response for adding a prescription.
      example:
        receivingPharmacy:
          pharmacyAddress:
            zipCode: zipCode
            city: city
            countryCode: countryCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
          ncpdpId: ncpdpId
          primaryTelephone: primaryTelephone
          deaNumber: deaNumber
          npi: npi
          pharmacyName: pharmacyName
          pharmacistName:
            firstName: firstName
            lastName: lastName
            prefix: prefix
            middleName: middleName
            suffix: suffix
          fax: fax
        partnerPrescriptionId: partnerPrescriptionId
      properties:
        receivingPharmacy:
          $ref: "#/components/schemas/Pharmacy"
        partnerPrescriptionId:
          description: The partner Prescription ID of the added prescription.
          pattern: "^[0-9a-zA-Z-]{1,40}$"
          type: string
      required:
      - partnerPrescriptionId
      - receivingPharmacy
      type: object
    Quantity:
      description: Structure representing the quantity of a medication.
      example:
        quantityUnitOfMeasureCode: C62412
        codeListQualifier: "38"
        value: 6.027456183070403
        unitOfMeasureCode: unitOfMeasureCode
      properties:
        value:
          description: Total quantity of the prescription.
          format: double
          type: number
        unitOfMeasureCode:
          deprecated: true
          description: |-
            A NCI Code, NCPDP Drug QuantityUnitOfMeasure Terminology, e.g., C48542.
            This shape is deprecated: This field will be replaced by `quantityUnitOfMeasureCode`. This field will no longer be supported starting from 2025-03-12.
          maxLength: 10
          pattern: ^\s*\S.*$
          type: string
        quantityUnitOfMeasureCode:
          $ref: "#/components/schemas/QuantityUnitOfMeasureCode"
        codeListQualifier:
          $ref: "#/components/schemas/QuantityCodeListQualifier"
      required:
      - value
      type: object
    QuantityCodeListQualifier:
      description: |-
        Qualifies the different types of QuantityValue.

        `38` - Original Quantity

        `40` - Remaining Quantity

        `87` - Quantity Received

        `QS` - Quantity sufficient as determined by the dispensing pharmacy. Quantity to be based on established dispensing protocols between the prescriber and pharmacy/pharmacist.

        `CF` - Compound Final Quantity

        `UQ` - Central Fill Unit of Use Quantity

        `QT` - Quantity Transferred
      enum:
      - "38"
      - "40"
      - "87"
      - QS
      - CF
      - UQ
      - QT
      type: string
    QuantityUnitOfMeasureCode:
      description: |-
        Quantity Unit of Measure Code (Reference: https://evs.nci.nih.gov/ftp1/NCPDP/NCPDP.txt)

        `C62412` - A dosing unit equal to the amount of active ingredient(s) contained in a single applicator.

        `C54564` - A dosing unit equal to the amount of active ingredient(s) contained in a blister.

        `C64696` - A dosing unit equal to the amount of active ingredient(s) contained in a caplet.

        `C48480` - A dosing unit equal to the amount of active ingredient(s) contained in a capsule.

        `C64933` - Used to refer to every member of a group of people or things, considered individually.

        `C53499` - A dosing unit equal to the amount of active ingredient(s) contained in a film.

        `C48155` - The metric unit of mass equal to one thousandth of a kilogram. One gram equals approximately 15.432 grains or 0.035 273 966 ounce.

        `C69124` - A dosing unit equal to the amount of active ingredient(s) contained in a gum.

        `C48499` - A dosing unit equal to the amount of active ingredient(s) contained in an implant.

        `C62276` - A dosing unit equal to the amount of active ingredient(s) contained in an insert.

        `C48504` - A dosing unit equal to the amount of active ingredient(s) contained in a kit.

        `C120263` - A small, sharp, needle-like instrument that is used to puncture the skin.

        `C48506` - A dosing unit equal to the amount of active ingredient(s) contained in a lozenge.

        `C28254` - A unit of volume equal to one millionth (10E-6) of a cubic meter, one thousandth of a liter, one cubic centimeter, or 0.061023 7 cubic inch. A cubic centimeter is the CGS unit of volume.

        `C48521` - A dosing unit equal to the amount of active ingredient(s) contained in a packet.

        `C65032` - A dosing unit equal to the amount of active ingredient(s) contained in a pad.

        `C48524` - A dosing unit equal to the amount of active ingredient(s) contained in a patch.

        `C120216` - A single use, hollow needle embedded in a plastic hub, which is then attached to a preloaded syringe (pen) to facilitate the delivery of medication.

        `C62609` - A dosing unit equal to the amount of active ingredient(s) contained in a ring.

        `C53502` - A dosing unit equal to the amount of active ingredient(s) contained in a sponge.

        `C53503` - A dosing unit equal to the amount of active ingredient(s) contained in a stick.

        `C48538` - A dosing unit equal to the amount of active ingredient(s) contained in a strip.

        `C48539` - A dosing unit equal to the amount of active ingredient(s) contained in a suppository.

        `C53504` - A dosing unit equal to the amount of active ingredient(s) contained in a swab.

        `C48542` - A dosing unit equal to the amount of active ingredient(s) contained in a tablet.

        `C48548` - A dosing unit equal to the amount of active ingredient(s) contained in a troche.

        `C38046` - Not stated explicitly or in detail.

        `C48552` - A dosing unit equal to the amount of active ingredient(s) contained in a wafer.
      enum:
      - C62412
      - C54564
      - C64696
      - C48480
      - C64933
      - C53499
      - C48155
      - C69124
      - C48499
      - C62276
      - C48504
      - C120263
      - C48506
      - C28254
      - C48521
      - C65032
      - C48524
      - C120216
      - C62609
      - C53502
      - C53503
      - C48538
      - C48539
      - C53504
      - C48542
      - C48548
      - C38046
      - C48552
      type: string
    RejectedInsuranceDetails:
      description: Structure representing Insurance details used for a rejected claim
      example:
        payerType: COMMERCIAL
        binNumber: binNumber
        payerName: payerName
        pcn: pcn
        stateCode: stateCode
        groupNumber: groupNumber
      properties:
        pcn:
          description: |-
            Processor Control Number assigned by the processor. PBMs use it to distinguish between plans.
            It's a secondary identifier used in addition to the binNumber.
          maxLength: 10
          minLength: 1
          pattern: "^[a-zA-Z0-9 ]+$"
          type: string
        groupNumber:
          description: The insurance group number found on the insurance card that
            signifies which group the cardholder belongs to.
          maxLength: 35
          pattern: ^\s*\S.*$
          type: string
        binNumber:
          description: A 6-digit number that identifies the Pharmacy Benefit Manager
            (PBM) that this insurance uses for pharmacy claims.
          maxLength: 6
          minLength: 6
          pattern: "^\\d{6}$"
          type: string
        payerType:
          $ref: "#/components/schemas/PayerType"
        payerName:
          description: The name of the payer associated with the insurance plan.
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
        stateCode:
          description: "Optional state code related to the insurance plan, used for\
            \ state-specific insurance information."
          maxLength: 2
          minLength: 2
          type: string
      required:
      - binNumber
      type: object
    ResourceNotFoundExceptionResponseContent:
      description: "This exception is thrown when a patient, prescription, or order\
        \ cannot be found."
      example:
        message: message
      properties:
        message:
          description: A human-readable message describing the resource not found
            exception.
          maxLength: 1024
          pattern: ^\s*\S.*$
          type: string
      required:
      - message
      type: object
    SexAssignedAtBirth:
      description: |-
        Enum representing the sex assigned at birth.

        `FEMALE` - Female sex assigned at birth.

        `MALE` - Male sex assigned at birth.
      enum:
      - Female
      - Male
      type: string
    ShippingDetails:
      description: Structure representing the shipping details of an order.
      example:
        carrier: carrier
        estimatedArrival: estimatedArrival
        trackingId: trackingId
      properties:
        trackingId:
          description: The tracking ID associated with the shipment.
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
        carrier:
          description: The name of the carrier fulfilling the delivery of the shipment.
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
        estimatedArrival:
          description: "The estimated arrival date in the format 'YYYY-MM-DDDD' in\
            \ UTC, e.g., 2023-04-17T03:00:00.000Z."
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
      type: object
    Strength:
      description: Structure representing the strength of a medication.
      example:
        formCode: formCode
        strengthFormCode: C78746
        value: value
        unitOfMeasureCode: unitOfMeasureCode
        strengthUnitOfMeasureCode: C70518
      properties:
        value:
          description: "Dosage Strength, e.g., 120."
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
        formCode:
          deprecated: true
          description: |-
            NCI Code that specifies the strength form code, e.g., C42998.
            This shape is deprecated: This field will be replaced by `strengthFormCode`. This field will no longer be supported starting from 2025-03-12.
          maxLength: 10
          pattern: ^\s*\S.*$
          type: string
        strengthFormCode:
          $ref: "#/components/schemas/StrengthFormCode"
        unitOfMeasureCode:
          deprecated: true
          description: |-
            A NCI Code that specifies the strength unit, e.g., C48152.
            This shape is deprecated: This field will be replaced by `strengthUnitOfMeasureCode`. This field will no longer be supported starting from 2025-03-12.
          maxLength: 10
          pattern: ^\s*\S.*$
          type: string
        strengthUnitOfMeasureCode:
          $ref: "#/components/schemas/StrengthUnitOfMeasureCode"
      type: object
    StrengthFormCode:
      description: |-
        Strength Form Code (Reference: https://evs.nci.nih.gov/ftp1/NCPDP/NCPDP.txt)

        `C78746` - A drug pack that contains a 21 day supply of tablets, composed of a mixture of active and/or inert ingredient(s) that are pressed or compacted into a solid round, square or oval shaped form.

        `C78747` - A drug pack that contains a 28 day supply of tablets, composed of a mixture of active and/or inert ingredient(s) that are pressed or compacted into a solid round, square or oval shaped form.

        `C107670` - A syringe with a measured dose of medication that has an apparatus that enables the user to specify the amount of the medication to deliver in an injection.

        `C64886` - A suppository intended for administration to adults.

        `C42887` - Contents packaged under pressure that are released upon activation of an appropriate valve system.

        `C42888` - A foam that is packaged under pressure and released upon activation of an appropriate valve system.

        `C68935` - A mist that is packaged under pressure and released upon activation of an appropriate valve system.

        `C69030` - A homogenous solution comingled with a propellant and packaged under pressure. Upon activation of an appropriate valve system, the liquid is expelled into the air, the propellant is vaporized and the ingredients are dispersed.

        `C42889` - A spray that is packaged under pressure and released upon activation of an appropriate valve system.

        `C60897` - A cream that is modified to enhance the release of active and/or inert ingredient(s).

        `C91136` - A gel that is modified to enhance the release of active and/or inert ingredient(s).

        `C60957` - A lotion that is modified to enhance the release of active and/or inert ingredient(s).

        `C60984` - An ointment that is modified to enhance the release of active and/or inert ingredient(s).

        `C91227` - Active and/or inert ingredient(s) in a device that is automated to deliver a designated dose.

        `C69012` - A solid composed of single or multilayered strips of permeable material.

        `C68950` - A solid or semi-solid in a singular unit that is rectangular or oval in shape.

        `C91137` - A solid in the shape of a bar composed of active and/or inert ingredient(s) in an anionic surfactant, for cleansing.

        `C42890` - A solid in the shape of a small sphere.

        `C64875` - A capsule designed to be bitten to release the active and/or inert ingredient(s).

        `C42891` - A solid or semi-solid in the shape of a square or rectangle.

        `C64874` - A capsule intended for administration between the cheek and gum of the oral cavity. The active and/or inert ingredient(s) are usually absorbed through the oral mucosa.

        `C91138` - A thin layer of water soluble or insoluble polymer intended to coat the inner surface of the cheek.

        `C42755` - A tablet intended for administration between the cheek and gum of the oral cavity. The active and/or inert ingredient(s) are usually absorbed through the oral mucosa.

        `C64878` - A solid composed of dry powdered active and/or inert ingredient(s) covered by an edible shell. The shell consists of two concave pieces of wafer made of flour and water.

        `C68951` - A solid composed of active ingredient(s), excipients (usually electrolytes and bulking agents), and a solvent system which are lyophilized to yield a compressed solid with uniform ingredient distribution.

        `C64880` - A solid or semi-solid with a sweet taste and intended for oral administration.

        `C25158` - A solid contained within either a hard or soft soluble shell, usually prepared from gelatin.

        `C68943` - A capsule designed to release active and/or inert ingredient(s) slowly so as to achieve a constant circulating concentration of the ingredient over a 12 hour time interval.

        `C68944` - A capsule designed to release active and/or inert ingredient(s) slowly so as to achieve a constant circulating concentration of the ingredient over a 24 hour time interval.

        `C45414` - A base composed of bonding agents intermingled with active and/or inert ingredient(s), which rapidly hardens into a firm mass upon application.

        `C42892` - A bar designed to be chewed to release active and/or inert ingredient(s).

        `C64876` - A capsule designed to be chewed to release the active and/or inert ingredient(s).

        `C42893` - A tablet that must be chewed to release the active and/or inert ingredient(s).

        `C42894` - A semi-solid composed of synthetic, polymerized polysaccharide and flavorings, intended to be chewed to release active and/or inert ingredient(s).

        `C42678` - A solid composed of active and/or inert ingredient(s) wrapped in a paper cylinder whereby one end is burned. The ingredient is released in a smoke form, which is inhaled.

        `C60884` - A solid composed active and/or inert ingredient(s) in a woven absorbent material.

        `C42895` - A capsule that contains an additional outer layer over the capsule shell.

        `C42896` - A capsule composed of small globular masses covered with an outer shell.

        `C42897` - A tablet whose outer shell is covered with a substance.

        `C69002` - A tablet that has been compacted into capsule shape and covered in sugar.

        `C60891` - A solution or suspension composed of active and/or inert ingredient(s) with increased strength in a reduced volume, which is usually diluted prior to administration.

        `C42899` - A concentrate which is usually diluted prior to administration by injection.

        `C69001` - A concentrate that usually requires dilution prior to oral administration.

        `C42898` - A concentrate which is usually diluted prior to administration and exists as a solution in its final form.

        `C42900` - A solid with a shape bounded by a circular base converging upon a single vertex.

        `C42731` - A solid, semi-solid, solution or suspension designed to release active and/or inert ingredient(s) at a controlled rate.

        `C69024` - A capsule designed to release active and/or inert ingredient(s) at a controlled rate.

        `C69026` - A solution or suspension designed to release active and/or inert ingredient(s) at a controlled rate.

        `C69025` - A tablet designed to release active and/or inert ingredient(s) at a controlled rate.

        `C28944` - A semi-solid composed of an emulsion of lipids, hydrocarbons, waxes, or polyols in water.

        `C42901` - A solid that consists of naturally produced angular solids composed of singular, repeating units that are systematically arranged in an evenly spaced lattice.

        `C64881` - A solid or semi-solid in the shape of a three dimensional square.

        `C45415` - A solution, suspension or semi-solid composed of media conducive to microbial growth.

        `C68949` - A capsule designed to dissolve after releasing the active and/or inert ingredient(s) at a controlled rate.

        `C42730` - A solid, semi-solid, solution or suspension that has been coated with a substance that is designed to impede the immediate release of the active and/or inert ingredient(s) after administration.

        `C42902` - A capsule covered with a substance that is designed to impede the immediate release of the active and/or inert ingredient(s) after administration.

        `C42903` - A solid composed of small particles or grains and have been coated with a substance that is designed to impede the immediate release of the active and/or inert ingredient(s) after administration.

        `C42997` - A tablet composed of individual fragments have been coated with a substance that is designed to impede the immediate release of the active and/or inert ingredient(s) after administration.

        `C42904` - A capsule composed of active and/or inert ingredient(s) small, spherical structures that have been coated with a substance that is designed to impede the immediate release of the active and/or inert ingredient(s) after administration.

        `C42905` - A tablet that has been coated with a substance that is designed to impede the immediate release of the active and/or inert ingredient(s) after administration.

        `C69059` - An substance intended for use on the teeth or gingiva in the oral cavity.

        `C68954` - A solid bounded by a circular base converging upon a single vertex and intended for administration to the teeth and gingiva in the oral cavity.

        `C45413` - A resinous film-forming agent dissolved in a solvent or a calcium hydroxide suspension within a synthetic resin solution, which rapidly hardens into a firm mass upon administration.

        `C42906` - A gel intended for use in the oral cavity to clean the teeth and maintain oral hygiene.

        `C42907` - A paste of mild abrasives, detergents, flavoring agents, binders, fluoride, and other active and/or inert ingredient(s).

        `C42908` - A powder composed of a mild abrasives, detergents, flavoring agents, binders, fluoride, and other active and/or inert ingredient(s).

        `C42740` - A solid, semi-solid, solution or suspension covered with an outer permeable polymeric membrane designed to release active and/or inert ingredient(s) at a controlled, prolonged rate so as to reduce dosing frequency.

        `C43525` - A flat, circular shaped form composed of a solid or powder that contains active and/or inert ingredient(s).

        `C69071` - A tablet that dissolves or melts quickly (usually within a matter of seconds) when it comes into contact with a liquid.

        `C42756` - A tablet composed of a large amount of active and/or inert ingredient(s) that can be used in compounding prescriptions to ensure accurate quantity of ingredient within the final, compounded form.

        `C42741` - A solid, semi-solid, solution or suspension composed of active and/or inert ingredient(s) covered with or contained within a polymeric matrix such that dissolution is determined by the solubility rate of the given polymer.

        `C42679` - A substance intended for use as a vaginal irrigant.

        `C69033` - A powder which may be mixed with a liquid, intended for administration as a vaginal irrigant.

        `C69032` - A solution intended for use as a vaginal irrigant.

        `C42763` - A substance intended for administration in or on a wound.

        `C29012` - A substance intended for administration in a drop-wise fashion.

        `C60992` - A solution intended for administration in a drop-wise fashion.

        `C60995` - A suspension intended for administration in a drop-wise fashion.

        `C68997` - A suspension prepared immediately prior to dispensing or administration in a drop-wise fashion.

        `C64883` - A powder intended to be dusted over the outer surface of the body.

        `C42909` - A granule composed of active and/or inert ingredient(s), and a mixture of acids and sodium bicarbonate, which release carbon dioxide when dissolved in water.

        `C64884` - A powder composed of active and/or inert ingredient(s), and a mixture of acids and sodium bicarbonate, which release carbon dioxide when dissolved in water.

        `C42910` - A tablet composed of active and/or inert ingredient(s), and a mixture of acids and sodium bicarbonate, which release carbon dioxide when dissolved in water.

        `C42911` - A patch that composed of active and/or inert ingredient(s) whose release is controlled by electronic impulses that release ingredients at a controlled, prolonged rate so as to reduce dosing frequency.

        `C42912` - A solution composed of a clear, sweetened hydroalcoholic liquid in which active and/or inert ingredient(s) are dissolved.

        `C42913` - A semi-solid composed of at least two immiscible liquids, one of which is dispersed as droplets within the other liquid, and stabilized with one or more emulsifying agents.

        `C42914` - An emulsion intended for injection.

        `C42915` - A solution or suspension intended for administration into the rectum.

        `C64885` - A powder that is suspended in liquid prior to administration to the rectum.

        `C64871` - A tablet that is suspended in liquid prior to administration to the rectum.

        `C68945` - A capsule covered with a substance that is designed to delay the release of active and/or inert ingredient(s) until the capsule passes into the intestines.

        `C42758` - A tablet covered with a substance that is designed to delay the release of active and/or inert ingredient(s) until the tablet passes into the intestines.

        `C42742` - A solid, semi-solid, solution or suspension in which active and/or inert ingredient(s) release is controlled by the erosion rate of a carrier matrix.

        `C42713` - A solid, semi-solid, solution or suspension designed to release active and/or inert ingredient(s) at a controlled, prolonged rate so as to reduce dosing frequency.

        `C43451` - A solid in the shape of a small sphere intended to be embedded securely in the body and designed to release active and/or inert ingredient(s) at a controlled, prolonged rate.

        `C42916` - A capsule designed to release active and/or inert ingredient(s) at a controlled, prolonged rate so as to reduce dosing frequency.

        `C42917` - A capsule covered with a thin layer of substance and designed to release active and/or inert ingredient(s) at a controlled, prolonged rate.

        `C42918` - A pellet covered with a thin layer of substance designed to release active and/or inert ingredient(s) at a controlled, prolonged rate.

        `C42919` - A solid or liquid core composed of active and/or inert ingredient(s) enclosed by a polymer coated shell for controlled release.

        `C91140` - An extended release capsule covered with a substance designed to delay release until the capsule passes into the intestines.

        `C91141` - An extended release tablet covered with a substance designed to delay release until the tablet passes into the intestines.

        `C60926` - A solid in the shape of a slender, elongated thread designed for controlled release.

        `C42920` - A film designed to release active and/or inert ingredient(s) at a controlled, prolonged rate.

        `C42928` - A capsule covered with a thin layer of water soluble or insoluble polymer for controlled release.

        `C60929` - A substance that forms a suspension upon reconstitution for controlled release.

        `C42935` - A solution that becomes gelatinous upon administration for controlled release.

        `C69067` - A solid in the shape of a small particle or grain designed for controlled release.

        `C42921` - A granule intended for administration as a suspension for controlled release.

        `C42922` - An insert designed for controlled release.

        `C60934` - A solution or suspension designed for controlled release.

        `C42923` - A patch designed for controlled release.

        `C42924` - A suppository designed for controlled release.

        `C42925` - A suspension designed for controlled release.

        `C42927` - A tablet designed for controlled release.

        `C42929` - A distillate composed of active and/or inert ingredient(s) extracted from plant or animal matter.

        `C42932` - A thin layer of water soluble or insoluble polymer for site administration.

        `C42930` - A tablet covered with a thin layer of water soluble or insoluble polymer for controlled release.

        `C42931` - A tablet covered with a thin layer of water soluble or insoluble polymer.

        `C68982` - A solid composed of active and/or inert ingredient(s) resembling small, thin chips.

        `C68991` - A solution or suspension distillate extracted from plant or animal matter with alcohol as solvent/preservative.

        `C64898` - An aerated solution or suspension.

        `C64899` - A solution or suspension that produces dense bubbles when combined with water.

        `C60927` - A substance intended for administration as a solution.

        `C60928` - A substance intended for administration as a suspension.

        `C68966` - A solution reconstituted from frozen pre-mixed form for intravenous administration.

        `C78748` - A solution or suspension for oral gargling.

        `C42933` - An elastic aeriform fluid with separated molecules having freedom of movement.

        `C42934` - A semi-solid composed of a cross-linked matrix of polymers within a liquid.

        `C60994` - A solution for drop-wise administration that becomes gelatinous.

        `C68973` - A solution that becomes gelatinous after administration.

        `C42936` - A capsule covered with a thin layer of gelatin.

        `C64872` - A tablet covered with a layer of gelatin.

        `C48193` - An apparatus that converts substances into vapor or gas by heat or chemical reaction.

        `C42937` - A solid composed of polysaccharide pellets impregnated with active/inert ingredient(s).

        `C45416` - A solid composed of tissue for implantation.

        `C42938` - A solid composed of small particles or grains.

        `C69066` - A solid particle/grain mixed with liquid for solution/suspension.

        `C42939` - A granule for solution administration.

        `C42940` - A granule for suspension administration.

        `C42941` - A semi-solid composed of sticky, mucilaginous polysaccharide.

        `C64904` - A capsule covered with a rigid outer shell.

        `C64882` - A solid composed of uniform homeopathic polysaccharide pellets.

        `C42752` - A tablet for hypodermic injection.

        `C42669` - A form designed for immediate release upon administration.

        `C42942` - A solid for secure body insertion.

        `C42943` - A pellet for secure body insertion.

        `C42944` - Vaporized ingredients for inhalation.

        `C91142` - Powdered medication for measured dose inhalation.

        `C91143` - Liquid medication for inhalation.

        `C64879` - A capsule of powders for oral inhalation.

        `C42946` - A substance for injection.

        `C42926` - A suspension for injection with controlled release.

        `C42950` - A substance with lipid-complexed ingredients for injection.

        `C42951` - A suspension with liposome-encapsulated ingredients for injection.

        `C69037` - A freeze-dried powder for injection after reconstitution.

        `C42945` - A solution for injection.

        `C42988` - A sonicated suspension for injection.

        `C42995` - A suspension for injection.

        `C60933` - A solid or semi-solid intended for administration within the body.

        `C78793` - A powder intended for use within the body.

        `C68971` - A solution intended for administration into the intraperitoneal cavity.

        `C47915` - A solid intended for placement within the uterine cavity where active and/or inert ingredient(s) are released from an apparatus at a controlled rate.

        `C68967` - A solution intended for intravenous administration simultaneously with an established compatible maintenance infusion drug by a mutual intravenous access.

        `C68965` - A solution composed of a homogenous liquid that contains active and/or inert ingredient(s) dissolved in a suitable solvent or mixture of mutually miscible solvents.

        `C42947` - A solution or suspension used to bathe or flush open wounds or body cavities.

        `C42948` - A semi-solid composed of suspensions of active and/or inert ingredient(s) in any type of highly viscous material, including gelatin or gel. The structural matrix of the jelly contains high levels of liquid.

        `C47916` - A collection of unrelated materials that are used together to orchestrate dosage administration.

        `C42949` - A semi-solid with viscosity similar to that of a lotion, which is intended for topical use and must be rubbed into the site of administration to release the active and/or inert ingredient(s).

        `C60931` - A substance composed of active and/or inert ingredient(s) encapsulated in liposomes and intended for injection.

        `C42952` - A solid or semi-solid with a waxy consistency in the shape of a stick and intended for use on the lips.

        `C42953` - A substance in the fluid state of matter having no fixed shape but a fixed volume.

        `C42954` - A capsule composed of liquid covered with an outer shell, which is usually prepared from gelatin.

        `C68953` - A solution or suspension composed of an anionic surfactant used for cleansing.

        `C69068` - A solid composed of a sugared, medicated candy mounted to a stick, which can be held while sucking or chewing on the candy.

        `C29167` - A semi-solid composed of an oil in water emulsion, with lower viscosity than cream or gel.

        `C60958` - A lotion composed of anionic surfactant intended for administration to the hair or scalp.

        `C42955` - A solid composed of active and/or inert ingredient(s), sweeteners, other flavorings and mucilage, intended for oral administration.

        `C42956` - A freeze dried powder intended for injection following reconstitution with a suitable solvent to form a suspension that is designed to release active and/or inert ingredient(s) at a controlled, prolonged rate so as to reduce dosing frequency.

        `C42959` - A freeze dried powder composed of active and/or inert ingredient(s) encapsulated in liposomes and intended for injection following reconstitution with a suitable solvent to form a suspension.

        `C42957` - A freeze dried powder intended for injection following reconstitution with a suitable solvent to form a solution.

        `C42958` - A freeze dried powder intended for injection following reconstitution with a suitable solvent to form a suspension.

        `C68988` - A solid composed of an impermeable occlusive backing, a formulation matrix in which the active and/or inert ingredient(s) are dissolved or dispersed and an adhesive layer. It is intended for external application.

        `C91144` - A solid in the shape of a bar composed of active and inert ingredient(s) in an anionic surfactant, for cleansing.

        `C68958` - A film composed of active and/or inert ingredient(s).

        `C91145` - A liquid composed of active and inert ingredient(s) in an anionic surfactant, for cleansing.

        `C68957` - A solid composed of active and/or inert ingredient(s) in a soft, non-adhesive and absorbent piece of fabric or other material.

        `C91146` - A solution or suspension composed of active and inert ingredient(s) in an anionic surfactant and intended for administration to the hair and/or scalp.

        `C68952` - A substance composed of active and/or inert ingredient(s) in an anionic surfactant, for cleansing.

        `C64901` - A solid composed of a porous, interlacing, absorbent, usually shape retaining material that contains active and/or inert ingredient(s).

        `C68955` - A solid composed of active and/or inert ingredient(s) on a small piece of absorbent material attached to one end of a stick.

        `C91147` - A fabric or a narrow extruded synthetic material usually with an adhesive on one or both sides, impregnated with active and inert ingredient(s).

        `C64877` - A capsule covered with a semipermeable film.

        `C64873` - A tablet covered with a semipermeable film.

        `C42960` - An aerosol contained in a device with valves that permits the release of a specified quantity of active and/or inert ingredient(s) upon activation.

        `C91148` - A liquid medication delivered as a mist to be inhaled as a measured dose

        `C60930` - A gel contained in a device with valves that permits the release of a uniform dose of gel that composed of active and/or inert ingredient(s) upon activation.

        `C42961` - A powder contained in a device with valves that permits the dispensing of active and/or inert ingredient(s) upon activation.

        `C42962` - A spray contained in a device with valves that permits the dispensing of a specified quantity of active and/or inert ingredient(s) upon activation.

        `C64888` - A solution or suspension present in a small volume or mass, intended for administration to the rectum.

        `C42712` - A solid, semi-solid, solution or suspension exhibiting an altered inherent rate of release of active and/or inert ingredient(s).

        `C29269` - A solution or suspension intended for oral administration, for its deodorizing or antiseptic effects in the oral cavity. Usually, the mouthwash is swished around the mouth and expelled.

        `C91149` - A spray intended for administration to the mucosa.

        `C91150` - A solution intended for administration to the surface of the mucosa membranes.

        `C42963` - A tablet composed of active and/or inert ingredient(s) that have been compressed into multiple layers and is designed to release active and/or inert ingredient(s) at a controlled, prolonged rate so as to reduce dosing frequency.

        `C42964` - A tablet composed of active and/or inert ingredient(s) that have been compressed to form a tablet that contains multiple layers.

        `C69064` - A substance intended for administration in the nares.

        `C91151` - A cream intended for administration to the mucosa of the nose.

        `C91152` - A gel intended for administration to the mucosa of the nose.

        `C91153` - An inhalant intended for administration through the nose.

        `C91154` - A medication delivered as a mist to be inhaled through the nose as a measured dose

        `C91155` - An ointment intended for administration to the mucosa of the nose.

        `C91156` - A solution intended for administration to the mucosa of the nose.

        `C91157` - A spray intended for administration to the mucosa of the nose.

        `C91158` - A suspension intended for administration to the mucosa of the nose.

        `C68941` - A spray composed of active and/or inert ingredient(s) that are expelled from a delivery device without the use of a propellant.

        `C69017` - A solid composed of a small piece of absorbent material that does not contain active ingredient(s), attached to one end of a small stick.

        `C48624` - An indication that the dosage form is not relevant or appropriate.

        `C69031` - A system that is placed in the eye, usually under the lower eyelid, from which the active and/or inert ingredient(s) diffuses through a membrane at a controlled rate.

        `C42965` - A solution or suspension that is hydrophobic, soluble in organic solvents, and liquid at ambient temperature.

        `C42966` - A semi-solid, viscous in texture, that may be composed of a variety of bases including hydrocarbons, emulsifiers or vegetable oils, and mixed with active and/or inert ingredient(s).

        `C69039` - A substance intended for administration in or around the eye.

        `C91159` - A cream intended for administration in or around the eye.

        `C91160` - A gel intended for administration in or around the eye.

        `C91161` - A solution intended for irrigation of the eye.

        `C69038` - A solution or suspension intended for administration in the eye.

        `C91162` - A ointment intended for administration in or around the eye.

        `C91163` - A solution intended for administration in or around the eye.

        `C91164` - A suspension intended for administration in or around the eye.

        `C42744` - A substance intended for administration through the mouth.

        `C91165` - A capsule intended for administration through the mouth.

        `C91166` - A cream intended for administration through the mouth.

        `C91167` - A foam intended for administration through the mouth.

        `C91168` - A gel intended for administration through the mouth.

        `C91169` - An ointment intended for administration through the mouth.

        `C91170` - A paste intended for administration through the mouth.

        `C91171` - A powder intended for administration through the mouth.

        `C68981` - A suspension composed of active and/or inert ingredient(s) that requires reconstitution and is intended oral administration.

        `C68996` - A solution intended for oral administration.

        `C91172` - A spray intended for administration into the mouth.

        `C91173` - A strip intended for administration through the mouth.

        `C68992` - A suspension intended for oral administration.

        `C68993` - A suspension composed of a suspension that has been prepared immediately prior to dispensing or oral administration.

        `C43243` - A tablet intended for oral administration.

        `C61006` - A tablet that disintegrates rapidly, usually within a matter of seconds, when placed upon the tongue but is also designed to impede the immediate release of the active and/or inert ingredient(s) after administration.

        `C42999` - A tablet which disintegrates and dissolves quickly (usually within a matter of seconds) in the mouth. Additional water to complete dissolution is not necessary.

        `C69008` - A tablet with a semi-permeable membrane composed of active and/or inert ingredient(s) and an osmotic agent with a laser drilled central core. Upon ingestion, water permeates the core and the ingredient is dissolved and released.

        `C42760` - A solid designed to release active and/or inert ingredient(s) at a controlled, prolonged rate so as to reduce dosing frequency, based on osmotic pressure between the inside of the dosage form and the external environment.

        `C69040` - A substance intended for administration either on the outer ear or into the auditory canal.

        `C91174` - A cream intended for administration either on the outer ear or into the auditory canal.

        `C91175` - An ointment intended for administration either on the outer ear or into the auditory canal.

        `C91176` - A solution intended for administration either on the outer ear or into the auditory canal.

        `C91177` - A suspension intended for administration either on the outer ear or into the auditory canal.

        `C62653` - A number of individual items packaged as a unit.

        `C47887` - A solid composed of a material that contains active and/or inert ingredient(s) which is intended to be placed in a cavity or depression within the body.

        `C69016` - A solid composed of a soft, non-adhesive and absorbent piece of fabric or other material.

        `C42746` - A substance intended for administration by injection.

        `C42967` - A semi-solid composed of a large proportion of solids and finely dispersed active and/or inert ingredient(s) in a fat-based vehicle.

        `C60985` - A solid or semi-solid composed of a lozenge, that contains active and/or inert ingredient(s) that dissolves when sucked in the mouth.

        `C42968` - A solid composed of an impermeable occlusive backing and a formulation matrix in which the active and/or inert ingredient(s) are dissolved or dispersed; possibly includes an adhesive layer.

        `C69042` - A solution or suspension intended for use in children.

        `C64887` - A suppository intended for administration to children.

        `C42969` - A solid composed of a small granular or compressed mass that contains highly purified active and/or inert ingredient(s).

        `C42636` - The form in which active and/or inert ingredient(s) are physically presented.

        `C25394` - A solid composed of a small, round object composed of active and/or inert ingredient(s).

        `C42970` - A semi-solid composed of a soft, smooth mass with relatively thick consistency and strong adhesiveness that becomes solid when dry.

        `C42736` - Polymeric microspheres composed of biocompatible polymer that contains active and/or inert ingredient(s) designed for release at a controlled rate.

        `C47913` - A semi-solid composed of a soft, moist mass that is made by wetting an absorbent solid substance.

        `C42972` - A solid composed of a mixture of dry, finely divided active and/or inert ingredient(s).

        `C42971` - A powder composed of active and/or inert ingredient(s) and packaged under pressure. Ingredients are released upon activation of an appropriate valve system.

        `C42977` - A powder intended for injection following reconstitution to form a suspension that is designed to release active and/or inert ingredient(s) at a controlled, prolonged rate so as to reduce dosing frequency.

        `C42974` - A powder intended for injection following reconstitution to form a solution.

        `C42976` - A powder intended for injection following reconstitution to form a suspension.

        `C69069` - A powder intended for injection following reconstitution to form a solution or suspension.

        `C64907` - A powder that yields a solution intended for oral administration following reconstitution.

        `C64908` - A powder that yields a suspension intended for oral administration following reconstitution.

        `C69070` - A powder mixed with a liquid to form a solution or suspension before administration.

        `C42973` - A powder that yields a solution following reconstitution with an appropriate liquid.

        `C42975` - A powder that forms a suspension when reconstituted with a liquid solution.

        `C91139` - Powder intended for oral inhalation.

        `C68983` - A granule composed of a mixture of small (powder like), dry particles or grains, which does not have the ability to release gas upon contact with water.

        `C91179` - Active and/or inert ingredients in an applicator delivered as a single measured dose.

        `C97717` - A syringe that lacks a conventional plunger, resembles a writing pen, and is designed to dispense a pre-loaded dose of a drug. It may be designed to deliver a single dose or be designed for repeated use.

        `C91180` - A solution or suspension intended to be injected in a syringe, cartridge or pen.

        `C68972` - A semi-solid, having a relatively thick consistency, intended for oral administration to facilitate ease of swallowing.

        `C68984` - A substance that requires reconstitution with a suitable solvent and is intended for oral administration in a drop-wise fashion.

        `C68985` - A solution that requires reconstitution with a suitable solvent, and is intended for oral administration.

        `C69046` - A substance intended for administration in or around the rectum.

        `C69045` - A cream intended for administration in or around the rectum.

        `C91181` - A foam intended for administration to the rectum.

        `C91182` - A gel intended for administration to the rectum.

        `C69047` - An ointment intended for administration in or around the rectum.

        `C91183` - A powder intended for administration to the rectum.

        `C91184` - A spray intended for administration to the rectum.

        `C68989` - A suppository intended for administration within the rectum.

        `C42978` - A semi-solid composed of a mixture of gum and a plant based hydrocarbon.

        `C60988` - A solid composed active and/or inert ingredient(s) of in the shape of a hoop.

        `C42979` - A solution or suspension intended for irrigation purposes.

        `C42980` - A semi-solid composed of a thick, fat or wax-based ointment or cerate with a consistency somewhere between an ointment and a plaster.

        `C45244` - A substance with properties of both a solid and a liquid in terms of viscosity and rigidity. Semi-solids include, but are not limited to, ointments, creams, pastes and gels.

        `C42981` - A solution or suspension composed of an anionic surfactant and intended for administration to the hair and/or scalp.

        `C42982` - A suspension composed of anionic surfactant and intended for administration to the hair and/or scalp.

        `C28276` - A patch intended for administration to the skin.

        `C42983` - An anionic surfactant for cleansing.

        `C64909` - A capsule composed of active and/or inert ingredient(s) covered with a soft outer shell, which is usually prepared from gelatin.

        `C45235` - A substance having definite shape and volume manufactured for the administration of active and/or inert ingredient(s). Solids include tablets, capsules, powders, granules and certain suppositories.

        `C42984` - A film that will dissolve in a liquid solvent to form a solution.

        `C42985` - A tablet that will dissolve in a liquid solvent to form a solution.

        `C42986` - A clear, homogeneous liquid composed of one or more chemical substances dissolved in a solvent or mixture of mutually miscible solvents.

        `C69028` - A solution intended for reconstitution before administration.

        `C42987` - A solution composed of an iced saline slurry with or without active and/or inert ingredient(s) intended to induce regional hypothermia from the point of administration.

        `C47912` - A solid composed of a porous, interlacing, absorbent, usually shape retaining material, such as cellulose wood fibers or plastic polymer form.

        `C42989` - A solution or suspension composed of active and/or inert ingredient(s) in oil or water, typically dispensed from an atomizer or nebulizer.

        `C42990` - A spray composed of a suspension that contains active and/or inert ingredient(s).

        `C68946` - A capsule composed active and/or inert ingredient(s) of as small pellet-like granules. The capsule is intended to be broken open, facilitating the scattering of the granules into soft foods, although it may also be swallowed whole.

        `C42991` - A solid composed active and/or inert ingredient(s) in a long, slender cylindrical shape.

        `C47914` - A solid composed of active and/or inert ingredient(s) in a long narrow piece of material.

        `C42751` - A tablet intended for administration under the tongue.

        `C42992` - A tablet covered with sugar.

        `C42993` - A solid or semi-solid composed of active and/or inert ingredient(s) in a wax, fat or a glycerin gelatin jelly and that is conical or oval in shape. It is intended to be inserted into a body orifice.

        `C42994` - Insoluble solid particles composed of active and/or inert ingredient(s) that are dispersed in a liquid.

        `C68986` - A suspension designed to release active and/or inert ingredient(s) slowly so as to achieve a constant circulating concentration of the ingredient over a 12 hour time interval.

        `C69027` - A suspension mixed with a liquid to form a solution or suspension before administration.

        `C42672` - A dosage form designed to release active and/or inert ingredient(s) slowly so as to achieve a constant circulating concentration of the ingredient over a period of time.

        `C69007` - A tablet intended for administration between the cheek and gum of the oral cavity. The active and/or inert ingredient(s) are usually absorbed through the oral mucosa and designed to be released slowly over a period of time.

        `C69043` - A capsule designed to release active and/or inert ingredient(s) slowly so as to achieve a constant circulating concentration of the ingredient over a period of time.

        `C69044` - A solution or suspension intended for oral administration and designed to release active and/or inert ingredient(s) slowly so as to achieve a constant circulating concentration of the ingredient over a period of time.

        `C69036` - An injectable solution or suspension designed to release active and/or inert ingredient(s) slowly so as to achieve a constant circulating concentration of the ingredient over a period of time.

        `C68947` - A capsule composed of active and/or inert ingredient(s) small, spherical structures that contain active and/or inert ingredient(s) encased within a shell. It is designed to release ingredients slowly so as to achieve a constant circulating concentration of the ingredient over a period of time.

        `C78751` - A tablet designed to release active and/or inert ingredient(s) slowly so as to achieve a constant circulating concentration of the ingredient over a period of time.

        `C47889` - A solid composed of fibrous strands of material that are used to bind wound edges together.

        `C47898` - A solid composed of a small piece of absorbent material attached to one end of a small stick.

        `C42996` - A solution or suspension composed of a viscid vehicle that contains a high concentration of sucrose or other sugars and active and/or inert ingredient(s).

        `C42998` - A solid composed of a mixture of that active and/or inert ingredient(s) are pressed or compacted together, usually in the form of a relatively flat and round, square or oval shape.

        `C69004` - A tablet designed to release active and/or inert ingredient(s) slowly so as to achieve a constant circulating concentration of the ingredient over a 12 hour time interval.

        `C69003` - A tablet designed to release active and/or inert ingredient(s) slowly so as to achieve a constant circulating concentration of the ingredient over a 24 hour time interval.

        `C60997` - A tablet composed of a conglomerate of particles that contains active and/or inert ingredient(s) that have been individually covered with a coating.

        `C61004` - A tablet that changes into a solution when added to a liquid solvent.

        `C61005` - A tablet that changes into a suspension when added to a liquid solution.

        `C69006` - A tablet composed of small fragments of singular, repeating units of that are systematically arranged over an evenly spaced lattice.

        `C42759` - A compressed cylindrical tablet composed of medicated powder and dispersed with a mixture of lactose, powdered sucrose and a moistening agent.

        `C47892` - A solid composed of a plug made from absorbent material.

        `C47897` - A solid composed of narrow woven fabric or a narrow extruded synthetic material, usually with an adhesive on one or both sides.

        `C78749` - A semi-solid that is oily and viscous and composed of a hydrocarbon based resin formed from the breakdown and distillation of organic substances.

        `C69063` - A spray intended for administration to the mucosa of the throat.

        `C43000` - A solution composed of an alcoholic extract or solution of nonvolatile active and/or inert ingredient(s).

        `C91186` - A paste intended for administration to the teeth.

        `C42747` - A substance intended for administration to a body surface.

        `C91187` - A cream intended for administration to a body surface.

        `C91188` - A foam intended for administration to a body surface.

        `C91189` - A gel intended for administration to a body surface.

        `C91190` - A lotion intended for administration to a body surface.

        `C91191` - A oil intended for administration to a body surface.

        `C91192` - A ointment intended for administration to a body surface.

        `C91193` - A powder intended for administration to a body surface.

        `C91178` - A powder spray intended for administration to the skin.

        `C64905` - A solution intended for administration to a body surface.

        `C91194` - A spray intended for topical administration.

        `C68998` - A suspension intended for administration to a body surface.

        `C43001` - A solid discoid composed of active and/or inert ingredient(s) in a suitably flavored base, that dissolves when sucked in the mouth.

        `C43002` - An indication that the dosage form has yet to be assigned.

        `C64902` - A solid composed of a porous, interlacing, absorbent, usually shape retaining material that does not contain active ingredient(s).

        `C38046` - Not stated explicitly or in detail.

        `C69052` - A substance intended for administration into the urethra.

        `C91195` - A gel intended for administration into the urethra.

        `C69053` - A suppository intended for administration within the urethra.

        `C69048` - A substance intended for administration in or around the vagina.

        `C69050` - A cream intended for administration in or around the vagina.

        `C47890` - A dome-shaped insert with a springy, flexible rim intended to be inserted into the vagina and positioned behind the pelvic bone to completely cover the cervix.

        `C69051` - A foam composed of active and/or inert ingredient(s), intended for administration in or around the vagina.

        `C91197` - A gel composed of active and/or inert ingredient(s), intended for administration in or around the vagina.

        `C69054` - An ointment intended for administration in or around the vagina.

        `C91198` - A powder composed of active and/or inert ingredient(s), intended for administration in or around the vagina.

        `C91199` - A ring composed of active and/or inert ingredient(s), intended for administration in or around the vagina.

        `C91200` - A spray composed of active and/or inert ingredient(s), intended for administration in or around the vagina.

        `C68990` - A suppository intended for administration within the vagina.

        `C69049` - A tablet intended for vaginal administration.

        `C43003` - A solid composed of a thin slice of material that contain active and/or inert ingredient(s).

        `C64903` - A solution or suspension composed of active and/or inert ingredient(s) and intended for administration as an irrigant and cleanser.

        `C78750` - A semi-solid composed of lipids made up of hydrocarbons or esters of fatty acids; active and/or inert ingredient(s) are commonly suspended within the wax matrix layer.

        `C64910` - A relatively long and often cylindrical solid composed of active and/or inert ingredient(s) intended for wound application.
      enum:
      - C78746
      - C78747
      - C107670
      - C64886
      - C42887
      - C42888
      - C68935
      - C69030
      - C42889
      - C60897
      - C91136
      - C60957
      - C60984
      - C91227
      - C69012
      - C68950
      - C91137
      - C42890
      - C64875
      - C42891
      - C64874
      - C91138
      - C42755
      - C64878
      - C68951
      - C64880
      - C25158
      - C68943
      - C68944
      - C45414
      - C42892
      - C64876
      - C42893
      - C42894
      - C42678
      - C60884
      - C42895
      - C42896
      - C42897
      - C69002
      - C60891
      - C42899
      - C69001
      - C42898
      - C42900
      - C42731
      - C69024
      - C69026
      - C69025
      - C28944
      - C42901
      - C64881
      - C45415
      - C68949
      - C42730
      - C42902
      - C42903
      - C42997
      - C42904
      - C42905
      - C69059
      - C68954
      - C45413
      - C42906
      - C42907
      - C42908
      - C42740
      - C43525
      - C69071
      - C42756
      - C42741
      - C42679
      - C69033
      - C69032
      - C42763
      - C29012
      - C60992
      - C60995
      - C68997
      - C64883
      - C42909
      - C64884
      - C42910
      - C42911
      - C42912
      - C42913
      - C42914
      - C42915
      - C64885
      - C64871
      - C68945
      - C42758
      - C42742
      - C42713
      - C43451
      - C42916
      - C42917
      - C42918
      - C42919
      - C91140
      - C91141
      - C60926
      - C42920
      - C42928
      - C60929
      - C42935
      - C69067
      - C42921
      - C42922
      - C60934
      - C42923
      - C42924
      - C42925
      - C42927
      - C42929
      - C42932
      - C42930
      - C42931
      - C68982
      - C68991
      - C64898
      - C64899
      - C60927
      - C60928
      - C68966
      - C78748
      - C42933
      - C42934
      - C60994
      - C68973
      - C42936
      - C64872
      - C48193
      - C42937
      - C45416
      - C42938
      - C69066
      - C42939
      - C42940
      - C42941
      - C64904
      - C64882
      - C42752
      - C42669
      - C42942
      - C42943
      - C42944
      - C91142
      - C91143
      - C64879
      - C42946
      - C42926
      - C42950
      - C42951
      - C69037
      - C42945
      - C42988
      - C42995
      - C60933
      - C78793
      - C68971
      - C47915
      - C68967
      - C68965
      - C42947
      - C42948
      - C47916
      - C42949
      - C60931
      - C42952
      - C42953
      - C42954
      - C68953
      - C69068
      - C29167
      - C60958
      - C42955
      - C42956
      - C42959
      - C42957
      - C42958
      - C68988
      - C91144
      - C68958
      - C91145
      - C68957
      - C91146
      - C68952
      - C64901
      - C68955
      - C91147
      - C64877
      - C64873
      - C42960
      - C91148
      - C60930
      - C42961
      - C42962
      - C64888
      - C42712
      - C29269
      - C91149
      - C91150
      - C42963
      - C42964
      - C69064
      - C91151
      - C91152
      - C91153
      - C91154
      - C91155
      - C91156
      - C91157
      - C91158
      - C68941
      - C69017
      - C48624
      - C69031
      - C42965
      - C42966
      - C69039
      - C91159
      - C91160
      - C91161
      - C69038
      - C91162
      - C91163
      - C91164
      - C42744
      - C91165
      - C91166
      - C91167
      - C91168
      - C91169
      - C91170
      - C91171
      - C68981
      - C68996
      - C91172
      - C91173
      - C68992
      - C68993
      - C43243
      - C61006
      - C42999
      - C69008
      - C42760
      - C69040
      - C91174
      - C91175
      - C91176
      - C91177
      - C62653
      - C47887
      - C69016
      - C42746
      - C42967
      - C60985
      - C42968
      - C69042
      - C64887
      - C42969
      - C42636
      - C25394
      - C42970
      - C42736
      - C47913
      - C42972
      - C42971
      - C42977
      - C42974
      - C42976
      - C69069
      - C64907
      - C64908
      - C69070
      - C42973
      - C42975
      - C91139
      - C68983
      - C91179
      - C97717
      - C91180
      - C68972
      - C68984
      - C68985
      - C69046
      - C69045
      - C91181
      - C91182
      - C69047
      - C91183
      - C91184
      - C68989
      - C42978
      - C60988
      - C42979
      - C42980
      - C45244
      - C42981
      - C42982
      - C28276
      - C42983
      - C64909
      - C45235
      - C42984
      - C42985
      - C42986
      - C69028
      - C42987
      - C47912
      - C42989
      - C42990
      - C68946
      - C42991
      - C47914
      - C42751
      - C42992
      - C42993
      - C42994
      - C68986
      - C69027
      - C42672
      - C69007
      - C69043
      - C69044
      - C69036
      - C68947
      - C78751
      - C47889
      - C47898
      - C42996
      - C42998
      - C69004
      - C69003
      - C60997
      - C61004
      - C61005
      - C69006
      - C42759
      - C47892
      - C47897
      - C78749
      - C69063
      - C43000
      - C91186
      - C42747
      - C91187
      - C91188
      - C91189
      - C91190
      - C91191
      - C91192
      - C91193
      - C91178
      - C64905
      - C91194
      - C68998
      - C43001
      - C43002
      - C64902
      - C38046
      - C69052
      - C91195
      - C69053
      - C69048
      - C69050
      - C47890
      - C69051
      - C91197
      - C69054
      - C91198
      - C91199
      - C91200
      - C68990
      - C69049
      - C43003
      - C64903
      - C78750
      - C64910
      type: string
    StrengthUnitOfMeasureCode:
      description: |-
        Strength Unit of Measure Code (Reference: https://evs.nci.nih.gov/ftp1/NCPDP/NCPDP.txt)

        `C70518` - A unit of radioactivity defined as 3.7E-8 atomic disintegrations or other nuclear transformations per second or one quintillionth of curie (10E-18 curie).

        `C42562` - A SI derived unit of activity of a radionuclide, equal to one nuclear disintegration or other nuclear transition from a particular energy state occurring in an amount of a radionuclide during one second-long time interval.

        `C70515` - A unit of radioactivity defined as 3.7 E8 atomic disintegrations or other nuclear transformations per second. One centicurie is equal to 0.37 gigabecquerel.

        `C48466` - A unit of radioactivity in the CGS system, defined as 3.7 E10 atomic disintegrations or other nuclear transformations per second. One curie is equal to 37 gigabecquerels.

        `C25301` - The time for Earth to make a complete rotation on its axis; ordinarily divided into twenty-four hours, equal to 86 400 seconds. This also refers to a specific day.

        `C70514` - A unit of radioactivity defined as 3.7 E9 atomic disintegrations or other nuclear transformations per second. One decicurie is equal to 3.7 gigabecquerels.

        `C70517` - A unit of radioactivity defined as 3.7E-5 atomic disintegrations or other nuclear transformations per second or one quadrillionth of curie (10E-15 curie).

        `C70513` - A unit of radioactivity equal to 10E9 nuclear disintegrations or other nuclear transformations per second, or to 10E9 becquerels.

        `C48155` - The metric unit of mass equal to one thousandth of a kilogram. One gram equals approximately 15.432 grains or 0.035 273 966 ounce.

        `C48579` - The unitage assigned by the WHO to International Biological Standards - substances, classed as biological according to the criteria provided by WHO Expert Committee on Biological Standardization (e.g. hormones, enzymes, and vaccines), to enable the results of biological and immunological assay procedures to be expressed in the same way throughout the world. The definition of an international unit is generally arbitrary and technical, and has to be officially approved by the International Conference for Unification of Formulae.

        `C70511` - A unit of radioactivity equal to 10E3 nuclear disintegrations or other nuclear transformations per second, or to 10E3 becquerels.

        `C28252` - A basic SI unit of mass. It is defined as the mass of an international prototype in the form of a platinum-iridium cylinder kept at Sevres in France. A kilogram is equal to 1,000 grams and 2.204 622 6 pounds.

        `C48505` - The non-SI unit of volume accepted for use with the SI. One liter is equal to cubic decimeter, or one thousandth of cubic meter, or 1000 cubic centimeters, or approximately 61.023 744 cubic inches.

        `C70512` - A unit of radioactivity equal to 10E6 nuclear disintegrations or other nuclear transformations per second, or to 10E6 becquerels.

        `C42576` - A SI derived unit of mass concentration defined as the concentration of one kilogram of a substance per unit volume of the mixture equal to one cubic meter, or the concentration of one milligram of a substance per unit volume of the mixture equal to one milliliter, or one gram of a substance per one liter of the mixture. It is also a unit of mass density (volumic mass) defined as the density of substance which mass equal to one milligram occupies the volume one milliliter.

        `C48507` - A unit of radioactivity equal to one millionth of a curie or 37 kilobecquerels, and corresponding to a radioactivity of 37 000 atomic disintegrations per second.

        `C48152` - A metric unit of mass equal to one millionth of a gram or one thousandth of a milligram.

        `C71205` - A unit of mass flow rate equivalent to the rate at which one millionth of a gram of matter crosses a given surface or is delivered to a given object or space over a period of time equal to twenty four hours. Microgram per 24 hours is also a dose administration rate unit equal to the rate at which one millionth of a gram of a product is administered per unit of time equal to twenty four hours.

        `C91132` - The quantity of micrograms in a volume of fifteen milliliters of a substance.

        `C67394` - A unit of mass flow rate equivalent to the rate at which one millionth of a gram of matter crosses a given surface or is delivered to a given object or space over a period of time equal to one hour.

        `C64572` - A metric unit of mass concentration defined as the concentration of one gram of a substance per unit volume of the mixture equal to one cubic meter. The concept also refers to the metric unit of mass density (volumic mass) defined as the density of a substance which mass equal to one gram occupies the volume of one cubic meter.

        `C91135` - The quantity of micrograms prescribed or delivered in three days.

        `C48511` - A unit of radioactivity equal to one thousandth of a curie or 37 megabecquerels, and corresponding to a radioactivity of 37 millions of atomic disintegrations per second.

        `C48512` - A unit of relative amount of a substance equal to one thousandth of an equivalent weight.

        `C28253` - A metric unit of mass equal to one thousandth of a gram or 1000 micrograms. One milligram equals approximately 0.015 432 grain or 35.274 x 10E-6 ounce.

        `C91131` - The quantity of milligrams in a volume of five milliliters of a substance.

        `C28254` - A unit of volume equal to one millionth (10E-6) of a cubic meter, one thousandth of a liter, one cubic centimeter, or 0.061023 7 cubic inch. A cubic centimeter is the CGS unit of volume.

        `C48513` - A unit of amount of substance equal to 0.001 mole.

        `C67310` - A quantity equivalent to one million units (10E6 units).

        `C67352` - A unit of radioactivity equal to one billionth of a curie or 37 becquerels, and corresponding to radioactivity of 37 atomic disintegrations per second.

        `C25613` - A fraction or ratio with 100 understood as the denominator.

        `C70516` - A unit of radioactivity defined as 0.037 atomic disintegrations or other nuclear transformations per second or one trillionth of curie (10E-12 curie). One picocurie is equal to 37 millibecquerels.

        `C44278` - A single undivided thing occurring in the composition of something else.

        `C38046` - Not stated explicitly or in detail.

        `C70520` - A unit of radioactivity defined as 3.7E-14 atomic disintegrations or other nuclear transformations per second or one septillionth of curie (10E-24 curie).

        `C70519` - A unit of radioactivity defined as 3.7E-11 atomic disintegrations or other nuclear transformations per second or one sextillionth of curie (10E-21 curie).
      enum:
      - C70518
      - C42562
      - C70515
      - C48466
      - C25301
      - C70514
      - C70517
      - C70513
      - C48155
      - C48579
      - C70511
      - C28252
      - C48505
      - C70512
      - C42576
      - C48507
      - C48152
      - C71205
      - C91132
      - C67394
      - C64572
      - C91135
      - C48511
      - C48512
      - C28253
      - C91131
      - C28254
      - C48513
      - C67310
      - C67352
      - C25613
      - C70516
      - C44278
      - C38046
      - C70520
      - C70519
      type: string
    ThrottlingExceptionResponseContent:
      description: This exception is thrown when the user has sent too many requests
        in a given amount of time.
      properties:
        message:
          description: A human-readable message describing the throttling exception.
          maxLength: 1024
          pattern: ^\s*\S.*$
          type: string
      required:
      - message
      type: object
    TransferRequestStatus:
      description: |-
        Enum representing the status of a transfer request.

        `TRANSFER_INITIATED` - Prescription transfer has been initialized by Amazon Pharmacy and is under internal processing.

        `TRANSFER_COMPLETE` - Prescription transfer is legally complete from Amazon Pharmacy.

        `TRANSFER_DENIED` - Prescription transfer has been denied by Pharmacists.
      enum:
      - TRANSFER_INITIATED
      - TRANSFER_COMPLETE
      - TRANSFER_DENIED
      type: string
    TransferToPharmacy:
      example:
        pharmacyAddress:
          zipCode: zipCode
          city: city
          countryCode: countryCode
          addressLine1: addressLine1
          addressLine2: addressLine2
          state: state
        ncpdpId: ncpdpId
        primaryTelephone: primaryTelephone
        deaNumber: deaNumber
        npi: npi
        pharmacyName: pharmacyName
        pharmacistName:
          firstName: firstName
          lastName: lastName
          prefix: prefix
          middleName: middleName
          suffix: suffix
        fax: fax
      properties:
        ncpdpId:
          description: An NCPDP-assigned national provider identification number that
            assists pharmacies in their interactions with federal agencies and third
            party providers.
          maxLength: 35
          pattern: ^\s*\S.*$
          type: string
        npi:
          description: A National Provider System (NPS) assigned identifier for health
            care providers.
          pattern: "^\\d{10}$"
          type: string
        pharmacyName:
          description: The pharmacy this prescription needs transfer to.
          maxLength: 255
          pattern: ^\s*\S.*$
          type: string
        deaNumber:
          description: |-
            The Drug Enforcement Administration (DEA) assigned number to all businesses that manufacture or distribute controlled pharmaceuticals,
                    all health professionals who dispense, administer, or prescribe controlled pharmaceuticals and all pharmacies that dispense prescriptions.
          maxLength: 35
          pattern: ^\s*\S.*$
          type: string
        pharmacistName:
          $ref: "#/components/schemas/Name"
        pharmacyAddress:
          $ref: "#/components/schemas/Address"
        primaryTelephone:
          description: Pharmacy telephone number.
          pattern: "^1?[2-9]\\d{2}[2-9]\\d{6}$"
          type: string
        fax:
          description: Pharmacy fax number.
          pattern: "^1?[2-9]\\d{2}[2-9]\\d{6}$"
          type: string
      required:
      - deaNumber
      - fax
      - ncpdpId
      - npi
      - pharmacistName
      - pharmacyAddress
      - pharmacyName
      - primaryTelephone
      type: object
    VitalSign:
      description: Specifies the type of vital sign measurement
      enum:
      - HEIGHT
      - WEIGHT
      type: string
    PutOrder_400_response:
      anyOf:
      - $ref: "#/components/schemas/PreconditionFailedExceptionResponseContent"
      - $ref: "#/components/schemas/InvalidInputExceptionResponseContent"
    PutOrder_502_response:
      example:
        message: message
      properties:
        message:
          type: string
      type: object
  securitySchemes:
    mutualTLS:
      description: Mutual TLS Authentication
      name: mutualTLS
      scheme: mutualTLS
      type: http
    awsSigv4:
      bearerFormat: AWS4-HMAC-SHA256
      description: AWS Signature Version 4
      name: awsSigv4
      scheme: bearer
      type: http
